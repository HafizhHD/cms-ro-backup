{"version":3,"sources":["components/UI/Input/Input.js","helpers/validation/validation.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","containers/CoBrand/Setting/Setting.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js","components/UI/Heading/Heading.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","CardImg","React","ref","bsPrefix","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","connect","state","isLoading","auth","dispatch","onEditProfile","oldEmail","oldPassword","photo","editProfile","userData","JSON","parse","localStorage","getItem","useState","photoRaw","setPhotoRaw","add","topic","kateprog","notif","time","photoPreview","setPhotoPreview","useEffect","toBase64","result","catch","error","console","log","RKLoader","to","Heading","headingName","routes","initialValues","validationSchema","validateOnChange","onSubmit","values","handleChange","handleBlur","handleSubmit","setFieldValue","touched","errors","Boolean","e","file","currentTarget","files","style","width","borderRadius","src","textAlign","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p","length","map","item","i","path","exact","hasOwn","hasOwnProperty","classes","arguments","arg","argType","push","Array","isArray","inner","apply","toString","prototype","key","call","join","module","exports","default","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","Consumer","defaultPrefix","useContext","useIsRTL","dir"],"mappings":"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","file":"static/js/34.246b9f83.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React, { useState, useEffect } from 'react';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport InputComponent from '../../../components/UI/Input/Input';\nimport RKLoader from '../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { validationFormEdit } from './../../../helpers/validation/validation';\nimport { toBase64 } from '../../../helpers/fileHelper/fileHelper';\nimport { editProfile } from '../../../store/actions/dashboard';\nimport { Card, CardImg, Button, Modal } from 'react-bootstrap';\nimport './Setting.scss';\nimport { Redirect } from 'react-router-dom';\n// import { toBase64} from './helper'\n\nfunction Setting({\n    onEditProfile,\n    isLoading\n}) {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const [photoRaw, setPhotoRaw] = useState();\n    // const [coverRaw, setCoverRaw] = useState();\n    const [cover, setCover] = useState();\n    const [add, setAdd] = useState(false);\n    const [topic, setTopic] = useState(false);\n    const [kateprog, setKate] = useState(false);\n    const [notif, setNotif] = useState(false);\n    const [time, setTime] = useState(false);\n    const [photoPreview, setPhotoPreview] = useState(userData.thumbnail);\n\n    useEffect(() => {\n        if(photoRaw) {\n            let convertedPhoto = toBase64(photoRaw);\n            convertedPhoto.then((result) => {\n                setPhotoPreview(result);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        // } else if(coverRaw) {\n        //     let convertedPhoto = toBase64(coverRaw);\n        //     convertedPhoto.then((result) => {\n        //         setPhotoPreview(result);\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //     })\n        }\n    }, [photoRaw])\n\n    if(isLoading) {\n        return <RKLoader/>;\n    }\n    else if (add == true) {\n        return <Redirect to=\"/tools/setting-add\" />\n    }\n    else if (topic == true) {\n        return <Redirect to=\"/tools/setting-topik\" />\n    }\n    else if (kateprog == true) {\n        return <Redirect to=\"/tools/setting-list-kateProgram\" />\n    }\n    else if (notif == true) {\n        return <Redirect to=\"/tools/setting-list-kateNotif\" />\n    }\n    else if (time == true) {\n        return <Redirect to=\"/tools/setting-list-screentime\" />\n    }\n    return (\n        <div className=\"Setting\">\n            <Heading \n                headingName=\"Setting\"\n                routes={[\n                    { name: 'Setting' }\n                ]}\n            />\n            {/* <div className='div'>\n                <h3>Setting Cobrand</h3>\n                <Button className='add' onClick={() => setAdd(true)}>Target Audience</Button>\n                <Button className='add' onClick={() => setTopic(true)}>Topic Content</Button>\n                <Button className='add' onClick={() => setKate(true)}>Kategory Program</Button>\n                <Button className='add' onClick={() => setNotif(true)}>Kategory Notification</Button>\n                <Button className='add' onClick={() => setTime(true)}>Standart ScreenTime</Button>\n            </div> */}\n            \n            \n            <div className=\"Setting_card mt-medium\">\n                <div className=\"Setting_card_inputs\">\n                    <h2>Edit Account</h2>\n                    <Formik\n                        initialValues= {{\n                            email: userData.email,\n                            password: '',\n                            confirmPassword: '',\n                            cobrandName: userData.cobrandName,\n                            phoneNumber: userData.phoneNumber,\n                            address: userData.address,\n                            thumbnail: ''\n                        }}\n                        validationSchema = {validationFormEdit}\n                        validateOnChange = {true}\n                        onSubmit = {values => {\n                            onEditProfile(userData.email, userData.password, values.cobrandName, values.thumbnail, values.phoneNumber, values.address, values.password)\n                        }}\n                    >\n                    {({handleChange, handleBlur, handleSubmit, setFieldValue, touched, values, errors}) => (\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"Setting_card_inputs-item\">\n                                <div>\n                                    <label>Email</label>\n                                    <InputComponent\n                                        name=\"email\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                        isError={touched.email && Boolean(errors.email) }\n                                        message={touched.email && errors.email}\n                                        disabled={true}\n                                    />\n                                </div>\n                                <div>\n                                    <label>New Password</label>\n                                    <InputComponent\n                                        name=\"password\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.password}\n                                        onBlur={handleBlur}\n                                        isError={touched.password && Boolean(errors.password) }\n                                        message={touched.password && errors.password}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Confirm New Password</label>\n                                    <InputComponent\n                                        name=\"confirmPassword\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.confirmPassword}\n                                        onBlur={handleBlur}\n                                        disabled={!touched.password}\n                                        isError={touched.confirmPassword && Boolean(errors.confirmPassword) }\n                                        message={touched.confirmPassword && errors.confirmPassword}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"Setting_card_inputs-upload mt-large\">\n                                \n                                <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Photo</h2>\n                                    <InputComponent \n                                        placeholder=\"Photo\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div>\n                                {/* <div className=\"Setting_card_inputs-avatar\">\n                                        <h2>Cover</h2>\n                                        <input type=\"file\"\n                                            onChange={(e) => {\n                                                console.log(e.currentTarget.files[0]);\n                                                const promise = toBase64(e.currentTarget.files[0]);\n                                                promise.then(result => {\n                                                    console.log(result)\n                                                    setCover(result);\n                                                })\n                                            }}\n                                            className=\"Input-control\"\n                                            onBlur={handleBlur}\n                                            isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                            message={touched.thumbnail && errors.thumbnail}\n                                        />\n                                </div> */}\n                                {/* <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Cover</h2>\n                                    <InputComponent \n                                        placeholder=\"Cover\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div> */}\n                            </div>\n\n                            <div className=\"Setting_card_inputs-item mt-large\">\n                                <div>\n                                    <label>Co-Brand Name</label>\n                                    <InputComponent\n                                        name=\"cobrandName\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.cobrandName}\n                                        onBlur={handleBlur}\n                                        isError={touched.cobrandName && Boolean(errors.cobrandName) }\n                                        message={touched.cobrandName && errors.cobrandName}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Phone Number</label>\n                                    <InputComponent\n                                        name=\"phoneNumber\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.phoneNumber}\n                                        onBlur={handleBlur}\n                                        isError={touched.phoneNumber && Boolean(errors.phoneNumber) }\n                                        message={touched.phoneNumber && errors.phoneNumber}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Address</label>\n                                    <InputComponent\n                                        name=\"address\"\n                                        className=\"Input-control\"\n                                        type=\"textarea\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={handleBlur}\n                                        isError={touched.address && Boolean(errors.address) }\n                                        message={touched.address && errors.address}\n                                    />\n                                </div>\n                                <button\n                                    className=\"btn btn-submit\"\n                                    type=\"submit\"\n                                >\n                                    Update Profile\n                                </button>\n                            </div>\n                        </form>\n                    )}\n\n                    </Formik>\n\n                </div>\n                <div className=\"Setting_card_preview\">\n                    <h5>Preview</h5>\n                    <Card style={{ width: '25rem', borderRadius: '1rem'}}>\n                        {/* <div style={{ backgroundImage: `url(${cover ? cover : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxJUwAEmCj5NP7JfKft5Qz8a3UUoE0RcKiAeNDAulvE-jDh5HzB3-FBb5pBSfmWpJw0J4&usqp=CAU\"})` }} class=\"circletag\" id=\"nay\"> */}\n                            {/* <img className=\"img2\" src=\"https://cdn1.vectorstock.com/i/1000x1000/06/70/beautiful-cute-bee-vector-15910670.jpg\" /> */}\n                        <div className=\"backgr\" >\n                        {/* backgroundImage: `url(${cover ? cover : \"https://defghi.co.id/wp-content/uploads/2021/07/Logo-IDE.png\" */}\n                            <img className=\"img2\" src={photoPreview ? photoPreview : \"https://thumbs.dreamstime.com/b/default-avatar-profile-icon-vector-social-media-user-portrait-176256935.jpg\"} />\n                        </div>\n                        <Card.Body className=\"body-card\">\n                            <Card.Title style={{ textAlign: 'center' }}>Bimbel Defghi</Card.Title>\n                            <Card.Text>\n                                Some quick example text to build on the card title and make up the bulk of\n                                the card's content.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {/* <img src={photoPreview} className=\"Setting_card_preview_image\"/> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProfile: ( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ) => \n            dispatch(editProfile( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Setting)\n","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    dir\n  }), [prefixes, breakpoints, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"],"sourceRoot":""}