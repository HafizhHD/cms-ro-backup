{"version":3,"sources":["helpers/validation/validation.js","containers/CoBrand/Program/AddProgram/AddProgram.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","type","size","phoneNumber","matches","address","min","confirmPassword","when","schema","message","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","validationProgramEdit","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","connect","state","console","log","auth","isLoading","dispatch","onAddProgram","cobrandEmail","history","addProgram","useHistory","JSON","parse","localStorage","getItem","headingName","routes","path","name","initialValues","Date","toISOString","split","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","className","placeholder","value","onChange","onBlur","e","file","currentTarget","files","RKLoader","text","Heading","length","map","item","i","exact","to","Input","disabled","isError","id","max","memo","programEdit","query","axios","method","url","data","headers","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","ProgramDescription","photo","ALERT_CLOSE","toBase64","then","result","programthumnail","response","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/9.1a906384.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import React from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgram } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\n\nfunction AddProgram({\n    onAddProgram,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/program', name: 'On Going Program' },\n                { path: '/program/add', name: 'Create new Program' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: '',\n                    programDescription: '',\n                    programThumbnail: '',\n                    startDate: new Date().toISOString().split('T')[0]\n                }}\n                validationSchema = {validationProgram}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddProgram( cobrandEmail, values.programName, values.programDescription, values.programThumbnail, values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddProgram\">\n                        <h1>Create New Program</h1>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                           {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Photo</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnail\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            { touched.programThumbnail && <span className=\"message__error\">{errors.programThumbnail}</span> }\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                min={new Date().toISOString().split('T')[0]}\n                                value={values.startDate}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Post Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddProgram: ( cobrandEmail, programName, programDescription, programThumbnail, startDate, history ) =>\n            dispatch(addProgram( cobrandEmail, programName, programDescription, programThumbnail, startDate, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProgram)\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n    // return dispatch => {\n    //     dispatch(loadingStart());\n    //     dispatch({\n    //         type: ALERT_CLOSE\n    //     });\n\n    //     console.log('Photo is empty:', photo === '');\n    //     if (photo === '') {\n    //         if (contentType === 'Video') {\n    //             contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n    //         }\n    //         else if (contentType === 'Image') {\n    //             contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n    //         }\n    //         else if (contentType === 'Pdf') {\n    //             contents =\n    //                 '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n    //             console.log(contents)\n    //         }\n    //         else {\n    //             contents = '<!DOCTYPE html>'\n    //                 + '<html lang=\"en\">'\n    //                 + '<head>'\n    //                 + '<meta charset=\"utf-8\">'\n    //                 + '<style>'\n    //                 + '#contents {'\n    //                 + 'overflow-y: scroll;'\n    //                 + 'text-align: justify;'\n    //                 + 'white-space: pre-line;'\n    //                 + 'font-family: Arial, Helvetica, sans-serif;'\n    //                 + 'padding: 1%;'\n    //                 + '}'\n    //                 + '#contents li {'\n    //                 + 'margin-left: 5%;'\n    //                 + '}'\n    //                 + '</style>'\n    //                 + '</head>'\n    //                 + '<body>'\n    //                 + '<div id=\"contents\">'\n    //                 + contents\n    //                 + '</div>'\n    //                 + '</body>'\n    //                 + '</html>';\n    //         }\n\n    //         console.log(contents);\n    //         let data = {\n    //             whereValues: {\n    //                 cobrandEmail,\n    //                 _id\n    //             },\n    //             newValues: {\n    //                 programId,\n    //                 contentName,\n    //                 contentDescription,\n    //                 contentType,\n    //                 contentSource,\n    //                 contents,\n    //                 startDate\n    //             }\n    //         };\n\n    //         console.log(data);\n    //         //Call API ....\n\n    //         contentEdit(data)\n    //             .then(response => {\n    //                 console.log('Success:', response.data);\n    //                 history.push('/content');\n    //                 dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                 dispatch(loadingStop());\n    //             })\n    //             .catch((error) => {\n    //                 console.error('Error:', error);\n    //                 dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                 dispatch(loadingStop());\n    //             });\n    //         console.log(data);\n    //     }\n\n    //     else {\n    //         const promise = toBase64(photo);\n    //         promise.then((result) => {\n    //             console.log(typeof result);\n    //             const programthumnail = result;\n\n    //             let data = {\n    //                 whereValues: {\n    //                     cobrandEmail,\n    //                     _id\n    //                 },\n    //                 newValues: {\n    //                     programId,\n    //                     contentName,\n    //                     contentDescription,\n    //                     contentType,\n    //                     contentSource,\n    //                     contents,\n    //                     startDate\n    //                 }\n    //             };\n\n    //             console.log(data);\n    //             //Call API ....\n\n    //             contentEdit(data)\n    //                 .then(response => {\n    //                     console.log('Success:', response.data);\n    //                     history.push('/content');\n    //                     dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                     dispatch(loadingStop());\n    //                 })\n    //                 .catch((error) => {\n    //                     console.error('Error:', error);\n    //                     dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                     dispatch(loadingStop());\n    //                 });\n    //             console.log(data);\n    //         });\n    //     }\n    // }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}