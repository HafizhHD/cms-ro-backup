{"version":3,"sources":["containers/CoBrand/Program/AddProgram/AddProgram.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/webMainUtils.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onAddProgram","cobrandEmail","programName","programDescription","programThumbnail","startDate","history","addProgram","useHistory","JSON","parse","localStorage","getItem","email","headingName","routes","path","name","initialValues","validationSchema","validationProgram","validateOnChange","onSubmit","values","handleChange","handleSubmit","setFieldValue","errors","className","type","placeholder","value","onChange","e","file","currentTarget","files","Heading","length","map","item","i","exact","to","Input","onBlur","message","isError","id","memo","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","min","confirmPassword","when","schema","validationProgramEdit","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","validationContentEdit","authStart","AUTH_START","authFailed","AUTH_FAILED","ProgramDescription","photo","toBase64","then","result","programthumnail","setTimeout","data","axios","method","url","headers","response","push","catch","error","editProgram","_id","whereValues","newValues","addContent","programId","contentType","finalUrl","videoId","encodeURIComponent","undefined","split","getEmbedUrl","editContent"],"mappings":"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","file":"static/js/9.305522e8.chunk.js","sourcesContent":["import React from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addProgram } from '../../../../store/actions/webMainUtils';\nimport RKLoader from '../../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgram } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\n\nfunction AddProgram({\n    onAddProgram,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/program', name: 'On Going Program' },\n                { path: '/program/add', name: 'Create new Program' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: '',\n                    programDescription: '',\n                    programThumbnail: '',\n                    startDate: ''\n                }}\n                validationSchema = {validationProgram}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddProgram( cobrandEmail, values.programName, values.programDescription, values.programThumbnail, values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, setFieldValue, values, errors}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddProgram\">\n                        <h1>Create New Program</h1>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.programName}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.programDescription}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Photo</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnail\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.programThumbnail}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.startDate}</span>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Post Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddProgram: ( cobrandEmail, programName, programDescription, programThumbnail, startDate, history ) =>\n            dispatch(addProgram( cobrandEmail, programName, programDescription, programThumbnail, startDate, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProgram)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else return (\n    <>\n        <input\n            name={name}\n            className={className} \n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n        {isError && (\n            <div className=\"message\">\n                <span className=\"message__error\">{message}</span>\n            </div>\n        )}\n    </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64 } from '../../helpers/fileHelper/fileHelper';\n\nfunction getEmbedUrl(url) {\n    // function for generating an embed link\n    let finalUrl = '';\n    let videoId = '';\n\n    if (url.includes('facebook.com/')) {\n        // Facebook Video\n        finalUrl = 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(url) + '&show_text=1&width=200';\n\n    } else if(url.includes('vimeo.com/')) {\n        // Vimeo video\n        videoId = typeof(url.split(\"vimeo.com/\")[1]) !== undefined ? url.split(\"vimeo.com/\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://player.vimeo.com/video/' + videoId;\n\n    } else if (url.includes('youtube.com/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"v=\")[1]) !== undefined ? url.split(\"v=\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' + videoId;\n\n    } else if(url.includes('youtu.be/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"youtu.be/\")[1]) !== undefined ? url.split(\"youtu.be/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' +  videoId;\n\n    } else if (url.includes('dailymotion.com/')) {\n        // Dailymotion Video\n        videoId = typeof(url.split(\"dailymotion.com/\")[1]) !== undefined ? url.split(\"dailymotion.com/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.dailymotion.com/embed/' + videoId;\n\n    } else{\n        finalUrl = url;\n    }\n\n    return finalUrl;\n}\n\nexport const authStart = () => ({ type: AUTH_START });\nexport const authFailed = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS })\n\nexport const addProgram = ( cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            setTimeout( () => {\n                let data = {\n                    cobrandEmail,\n                    programName,\n                    ProgramDescription,\n                    programthumnail,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        });\n    }\n\n}\n\nexport const editProgram = ( _id, cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            setTimeout( () => {\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                setTimeout( () => {\n                    let data = {\n                        whereValues: {\n                            cobrandEmail,\n                            _id\n                        },\n                        newValues: {\n                            programName,\n                            ProgramDescription,\n                            programthumnail,\n                            startDate\n                        }\n                    };\n\n                    console.log(data);\n                    //Call API ....\n                    \n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                        data: data,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(authFailed());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(authFailed());\n                    });\n                    console.log(data);\n                },2000)\n            });\n        }\n    }\n\n}\n\nexport const addContent = ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const contentThumbnail = result;\n\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\"\n            }\n\n            console.log(contents);\n\n            setTimeout( () => {\n                let data = {\n                    cobrandEmail,\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contentThumbnail,\n                    contents,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        });\n    }\n\n    \n\n}\n\nexport const editContent = ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            setTimeout( () => {\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                setTimeout( () => {\n                    let data = {\n                        whereValues: {\n                            cobrandEmail,\n                            _id\n                        },\n                        newValues: {\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contents,\n                            startDate\n                        }\n                    };\n\n                    console.log(data);\n                    //Call API ....\n                    \n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                        data: data,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/content');\n                        dispatch(authFailed());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(authFailed());\n                    });\n                    console.log(data);\n                },2000)\n            });\n        }\n    }\n\n    \n\n}"],"sourceRoot":""}