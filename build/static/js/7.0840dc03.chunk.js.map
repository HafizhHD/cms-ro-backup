{"version":3,"sources":["containers/CoBrand/Content/AddContent/AddContent.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onAddContent","cobrandEmail","programId","contentName","contentDescription","contentType","contentSource","contentThumbnail","contents","startDate","isActive","history","addContent","useState","isPageLoading","setPageLoading","programList","setProgramList","valueRadio","setRadio","RichTextEditor","createEmptyValue","textValue","setTextValue","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","useHistory","JSON","parse","localStorage","getItem","email","params","whereKeyValues","useEffect","axios","method","url","data","headers","then","response","programs","catch","error","headingName","routes","path","name","initialValues","Date","toISOString","split","validationSchema","validationContent","validateOnChange","onSubmit","values","window","scrollTo","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","className","value","onChange","e","currentTarget","disabled","map","program","_id","programName","type","placeholder","onBlur","file","files","toString","id","onClick","for","min","defaultChecked","RKLoader","text","Heading","length","item","i","exact","to","Input","message","isError","max","memo","PhoneRegex","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programDescription","programThumbnail","validationProgramEdit","validationContentEdit","programEdit","query","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","ProgramDescription","photo","ALERT_CLOSE","toBase64","result","programthumnail","push","editProgram","whereValues","newValues","deleteProgram","retrieveList","deleting","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/7.0840dc03.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddContent.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addContent, loadingStart } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationContent } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\nimport RichTextEditor from 'react-rte';\nimport { toBase64 } from '../../../../helpers/fileHelper/fileHelper'\n// import {PDFDownloadLink, Document, Page} from '@react-pdf/renderer'\n// import Pdf2 from '../pdf2/pdf2'\n\n\nfunction AddContent({\n    onAddContent,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [valueRadio, setRadio] = useState('');\n\n    const [textValue, setTextValue] = useState(RichTextEditor.createEmptyValue());\n    const toolbarConfig = {\n        // Optionally specify the groups to display (displayed in the order listed).\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n        INLINE_STYLE_BUTTONS: [\n            { label: 'Bold', style: 'BOLD' },\n            { label: 'Italic', style: 'ITALIC' },\n            { label: 'Underline', style: 'UNDERLINE' },\n            { label: 'Strikethrough', style: 'STRIKETHROUGH' }\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n            { label: 'Normal', style: 'unstyled' },\n            { label: 'Heading Large', style: 'header-one' },\n            { label: 'Heading Medium', style: 'header-two' },\n            { label: 'Heading Small', style: 'header-three' }\n        ],\n        BLOCK_TYPE_BUTTONS: [\n            { label: 'Unordered List', style: 'unordered-list-item' },\n            { label: 'Ordered List', style: 'ordered-list-item' },\n            { label: 'Blockquote', style: 'blockquote' }\n        ]\n    };\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: cobrandEmail\n        }\n    };\n\n    useEffect(() => {\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n            data: params,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => {\n                console.log(\"Program list: \", response.data);\n                setProgramList(response.data.programs);\n                setPageLoading(false);\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n    }, []);\n\n    if (isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Content\" routes={[\n                { path: '/content', name: 'Content' },\n                { path: '/content/add', name: 'Create new content' }\n            ]} />\n            <Formik\n                initialValues={{\n                    programId: '-1',\n                    contentName: '',\n                    contentDescription: '',\n                    contentType: '',\n                    contentSource: '',\n                    contentThumbnail: '',\n                    contents: '',\n                    startDate: new Date().toISOString().split('T')[0],\n                    isActive: true\n                }}\n                validationSchema={validationContent}\n                validateOnChange={true}\n                onSubmit={values => {\n                    window.scrollTo(0, 0);\n                    onAddContent(cobrandEmail, values.programId, values.contentName, values.contentDescription,\n                        values.contentType, values.contentSource, values.contentThumbnail, values.contents,\n                        values.startDate, values.isActive, history)\n                }}\n            >\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"AddContent\">\n                            <h1 className=\"AddContent_title\">Create New Content</h1>\n                            <div className=\"form-group\">\n                                <label>Content Type</label>\n                                <select\n                                    name=\"contentType\"\n                                    value={values.contentType}\n                                    onChange={(e) => {\n                                        setFieldValue(\"contentType\", e.currentTarget.value);\n                                        setFieldValue(\"contents\", '');\n                                    }}\n                                >\n                                    <option value=\"\" disabled>Select Content Type</option>\n                                    <option value=\"Artikel\">Artikel</option>\n                                    <option value=\"Image\">Image</option>\n                                    <option value=\"Video\">Video</option>\n                                    <option value=\"Pdf\">File Pdf</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Program Name</label>\n                                <select\n                                    name=\"programId\"\n                                    value={values.programId}\n                                    onChange={handleChange}\n                                >\n                                    <option value=\"-1\" disabled>Select Program</option>\n                                    {/* <option value=\"\">(Tanpa Program)</option> */}\n                                    {\n                                        programList.map((program) => {\n                                            return (\n                                                <option value={program._id}>{program.programName}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Title</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentName\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.contentName && <span className=\"message__error\">{errors.contentName}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <InputComponent\n                                    type=\"textarea\"\n                                    name=\"contentDescription\"\n                                    placeholder=\"Type Something...\"\n                                    value={values.contentDescription}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.contentDescription && <span className=\"message__error\">{errors.contentDescription}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Source</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentSource\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentSource}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.contentSource && <span className=\"message__error\">{errors.contentSource}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Photo</label>\n                                <InputComponent\n                                    type=\"file\"\n                                    className=\"form-group__input\"\n                                    name=\"contentThumbnail\"\n                                    onBlur={handleBlur}\n                                    onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contentThumbnail\", file);\n                                        }\n                                    }}\n                                />\n                                {touched.contentThumbnail && <span className=\"message__error\">{errors.contentThumbnail}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Contents</label>\n                                {values.contentType === \"Artikel\" ? (\n                                    /*<InputComponent\n                                        type=\"textarea\"\n                                        name=\"contents\"\n                                        placeholder=\"Type Something...\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                    />*/\n\n                                    <RichTextEditor\n                                        name=\"contents\"\n                                        placeholder=\"Type your contents here...\"\n                                        className=\"form-group_rte\"\n                                        value={textValue}\n                                        toolbarConfig={toolbarConfig}\n                                        onBlur={handleBlur}\n                                        onChange={(e) => {\n                                            setTextValue(e);\n                                            setFieldValue(\"contents\", e.toString(\"html\"));\n                                            console.log(values.contents);\n                                        }}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    <div>\n                                        <p>Pilih media yang ingin di upload :</p>\n                                        <form>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                            onClick={() => {setRadio('internal')}}\n                                            />\n                                            <label for=\"internal\" >Media Internal Komputer</label>\n                                            <br></br>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                            onClick={() =>setRadio('url')}\n                                            />\n                                            <label for=\"url\" >Alamat URL</label>\n                                            <br></br>\n                                        </form>\n                                        \n                                        {valueRadio === 'internal' ? \n                                          <InputComponent\n                                          type=\"file\"\n                                          className=\"form-group__input\"\n                                          name=\"contents\"\n                                          onBlur={handleBlur}\n                                          //   value={values.contents}\n                                          //   onChange={handleChange}\n                                          onChange={(e) => {\n                                              let file = e.currentTarget.files[0];\n                                              if (file) {\n                                                  console.log(\"File to upload: \", file);\n                                                  setFieldValue(\"contents\", file);\n                                              }\n                                          }}\n                                          />\n                                          : \n                                          <InputComponent\n                                          type=\"text\"\n                                          name=\"contents\"\n                                          className=\"form-group__input form-group__input--fullwidth\"\n                                          placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                          value={values.contents}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                      />\n                                        }\n                                       \n                                    </div>\n                                    \n                                ) : null}\n                                {values.contentType === \"Video\" ? \n                                //video option\n                                // (\n                                //     <div>\n                                //         <p>Pilih media yang ingin di upload :</p>\n                                //         <form>\n                                //             <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                //             onClick={() => {setRadio('internal')}}\n                                //             />\n                                //             <label for=\"internal\" >Media Internal Komputer</label>\n                                //             <br></br>\n                                //             <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                //             onClick={() =>setRadio('url')}\n                                //             />\n                                //             <label for=\"url\" >Alamat URL</label>\n                                //             <br></br>\n                                //         </form>\n                                        \n                                //         {valueRadio === 'internal' ? \n                                //         <InputComponent\n                                //         type=\"file\"\n                                //         className=\"form-group__input\"\n                                //         name=\"contents\"\n                                //         onBlur={handleBlur}\n                                //         //   value={values.contents}\n                                //         //   onChange={handleChange}\n                                //         onChange={(e) => {\n                                //             let file = e.currentTarget.files[0];\n                                //             if (file) {\n                                //                 console.log(\"File to upload: \", file);\n                                //                 setFieldValue(\"contents\", file);\n                                //             }\n                                //         }}\n                                //         />\n                                //         : \n                                //         <InputComponent\n                                //         type=\"text\"\n                                //         name=\"contents\"\n                                //         className=\"form-group__input form-group__input--fullwidth\"\n                                //         placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                //         value={values.contents}\n                                //         onChange={handleChange}\n                                //         onBlur={handleBlur}\n                                //         />\n                                //         }\n                                //     </div>\n                                    \n                                // ) \n                                <InputComponent\n                                type=\"text\"\n                                name=\"contents\"\n                                className=\"form-group__input form-group__input--fullwidth\"\n                                placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                value={values.contents}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                />\n                                : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <div>\n                                        <p>Pilih media yang ingin di upload :</p>\n                                        <form>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                            onClick={() => {setRadio('internal')}}\n                                            />\n                                            <label for=\"internal\" >Media Internal - Maks 300kb</label>\n                                            <br></br>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                            onClick={() =>setRadio('url')}\n                                            />\n                                            <label for=\"url\" >Alamat URL</label>\n                                            <br></br>\n                                        </form>\n                                        \n                                        {valueRadio === 'internal' ? \n                                        <InputComponent\n                                        type=\"file\"\n                                        className=\"form-group__input\"\n                                        name=\"contents\"\n                                        onBlur={handleBlur}\n                                        //   value={values.contents}\n                                        //   onChange={handleChange}\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if (file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"contents\", file);\n                                            }\n                                        }}\n                                        />\n                                        : \n                                        <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Pdf URL... (Pdf file)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        />\n                                        }\n                                    </div>\n\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Set Schedule</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={new Date().toISOString().split('T')[0]}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-group_switch\">\n                                    <p className=\"form-group_switch_status\">Status:</p>\n                                    <p className=\"form-group_switch_inactive\">Inactive</p>\n                                    <label className=\"form-group_switch_switch\">\n                                        <input type=\"checkbox\" className=\"form-group_switch_switch_checkbox\"\n                                            name=\"isActive\"\n                                            defaultChecked={values.isActive}\n                                            onChange={() => {\n                                                values.isActive = !values.isActive;\n                                                console.log(values.isActive);\n                                            }}></input>\n                                        <span className=\"form-group_switch_switch_slider\"></span>\n                                    </label>\n                                    <p className=\"form-group_switch_active\">Active</p>\n                                </div>\n                            </div>\n                            <div>\n                                <button className=\"btn btn-submit\" type=\"submit\">\n                                    Post Content\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader /> : null}\n        </>\n    )\n\n}\n\n\n\n// 1- install pdfjs library | npm install pdfjs-dist@2.6.347\n// 2- install the core package | npm install @react-pdf-viewer/core@2.4.1   ok\n// 3- install pdf viewer default layout | npm install @react-pdf-viewer/default-layout  ok\n\n// its so loadingStart, i am very tired n feell sleepy, well will be ok rgight, \n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddContent: (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, isActive, history) =>\n            dispatch(addContent(cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, isActive, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContent)\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        \n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n                if (contentType === 'Video') {\n                    // const video = toBase64(contents);\n                    if (typeof contents === 'string') {contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\" \n                    } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                    // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                    let data = {\n                        cobrandEmail,\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contentThumbnail,\n                        contents,\n                        status,\n                        startDate\n                    };\n        \n                    console.log(data);\n                    //Call API ....\n        \n                    contentAdd(data)\n                        .then(response => {\n                            console.log('Success:', response.data);\n                            history.push('/content');\n                            dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                    console.log(data);\n                })}\n                \n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                    console.log(contents);\n                    // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n        \n                    let data = {\n                        cobrandEmail,\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contentThumbnail,\n                        contents,\n                        status,\n                        startDate\n                    };\n        \n                    console.log(data);\n                    //Call API ....\n        \n                    contentAdd(data)\n                        .then(response => {\n                            console.log('Success:', response.data);\n                            history.push('/content');\n                            dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                    console.log(data);\n                \n                })}\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                    let data = {\n                        cobrandEmail,\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contentThumbnail,\n                        contents,\n                        status,\n                        startDate\n                    };\n        \n                    console.log(data);\n                    //Call API ....\n        \n                    contentAdd(data)\n                        .then(response => {\n                            console.log('Success:', response.data);\n                            history.push('/content');\n                            dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                    console.log(data);\n                })}\n\n                // contents = \n                // '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n        \n                // console.log(contents)\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            if (contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if (contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }  \n            else if (contentType === 'Pdf') {\n                contents = \n                '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n                console.log(contents)\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contents,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                contentEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/content');\n                        dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n                console.log(data);\n            });\n        }\n    }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}