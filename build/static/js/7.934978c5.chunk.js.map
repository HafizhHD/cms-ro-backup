{"version":3,"sources":["containers/CoBrand/Content/AddContent/AddContent.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/dashboard.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onAddContent","cobrandEmail","programId","contentName","contentDescription","contentType","contentSource","contentThumbnail","contents","startDate","isActive","history","addContent","useState","isPageLoading","setPageLoading","programList","setProgramList","RichTextEditor","createEmptyValue","textValue","setTextValue","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","useHistory","JSON","parse","localStorage","getItem","email","params","whereKeyValues","useEffect","axios","method","url","data","headers","then","response","programs","catch","error","headingName","routes","path","name","initialValues","Date","toISOString","split","validationSchema","validationContent","validateOnChange","onSubmit","values","window","scrollTo","handleChange","handleSubmit","setFieldValue","errors","className","value","onChange","e","currentTarget","disabled","map","program","_id","programName","type","placeholder","file","files","toString","min","defaultChecked","RKLoader","text","Heading","length","item","i","exact","to","Input","onBlur","message","isError","id","memo","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationProgram","programDescription","programThumbnail","validationProgramEdit","validationContentEdit","getEmbedUrl","finalUrl","videoId","encodeURIComponent","undefined","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","ProgramDescription","photo","toBase64","result","programthumnail","push","editProgram","whereValues","newValues","deleteProgram","retrieveList","deleting","status","editContent","deleteContent","contentId"],"mappings":"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","file":"static/js/7.934978c5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddContent.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addContent } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationContent } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\nimport RichTextEditor from 'react-rte';\n\nfunction AddContent({\n    onAddContent,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n\n    const [textValue, setTextValue] = useState(RichTextEditor.createEmptyValue());\n    const toolbarConfig = {\n        // Optionally specify the groups to display (displayed in the order listed).\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n        INLINE_STYLE_BUTTONS: [\n            {label: 'Bold', style: 'BOLD'},\n            {label: 'Italic', style: 'ITALIC'},\n            {label: 'Underline', style: 'UNDERLINE'},\n            {label: 'Strikethrough', style: 'STRIKETHROUGH'}\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n            {label: 'Normal', style: 'unstyled'},\n            {label: 'Heading Large', style: 'header-one'},\n            {label: 'Heading Medium', style: 'header-two'},\n            {label: 'Heading Small', style: 'header-three'}\n        ],\n        BLOCK_TYPE_BUTTONS: [\n            {label: 'Unordered List', style: 'unordered-list-item'},\n            {label: 'Ordered List', style: 'ordered-list-item'},\n            {label: 'Blockquote', style: 'blockquote'}\n        ]\n    };\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: cobrandEmail\n        }\n    };\n\n    useEffect(() => {\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n            data: params,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => {\n            console.log(\"Program list: \", response.data);\n            setProgramList(response.data.programs);\n            setPageLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setPageLoading(false);\n        });\n    }, []);\n\n    if(isPageLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Content\" routes={[\n                { path: '/content', name: 'Content' },\n                { path: '/content/add', name: 'Create new content' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programId: '',\n                    contentName: '',\n                    contentDescription: '',\n                    contentType: '',\n                    contentSource: '',\n                    contentThumbnail: '',\n                    contents: '',\n                    startDate: new Date().toISOString().split('T')[0],\n                    isActive: false\n                }}\n                validationSchema = {validationContent}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    window.scrollTo(0,0);\n                    onAddContent( cobrandEmail, values.programId, values.contentName, values.contentDescription, values.contentType, values.contentSource, values.contentThumbnail, values.contents, values.startDate, values.isActive, history)\n                }}\n            >\n            {({handleChange, handleSubmit, setFieldValue, values, errors}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddContent\">\n                        <h1 className=\"AddContent_title\">Create New Content</h1>\n                        <div className=\"form-group\">\n                            <label>Content Type</label>\n                            <select\n                                name=\"contentType\"\n                                value={values.contentType}\n                                onChange={(e) => {\n                                    setFieldValue(\"contentType\", e.currentTarget.value);\n                                    setFieldValue(\"contents\", '');\n                                }}\n                            >\n                                <option value=\"\" disabled>Select Content Type</option>\n                                <option value=\"Artikel\">Artikel</option>\n                                <option value=\"Image\">Image</option>\n                                <option value=\"Video\">Video</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Program Name</label>\n                            <select\n                                name=\"programId\"\n                                value={values.programId}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">(Tanpa Program)</option>\n                                {\n                                    programList.map((program) => {\n                                        return (\n                                            <option value={program._id}>{program.programName}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"contentName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.contentName}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.contentName}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"contentDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.contentDescription}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <span className=\"message__error\">{errors.contentDescription}</span>\n                        <div className=\"form-group\">\n                            <label>Source</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"contentSource\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.contentSource}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.contentSource}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Photo</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"contentThumbnail\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"contentThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.contentThumbnail}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Contents</label>\n                            { values.contentType === \"Artikel\" ? (\n                                /*<InputComponent\n                                    type=\"textarea\"\n                                    name=\"contents\"\n                                    placeholder=\"Type Something...\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />*/\n\n                                <RichTextEditor\n                                    name=\"contents\"\n                                    placeholder=\"Type your contents here...\"\n                                    className=\"form-group__input form-group__input_rte\"\n                                    value={textValue}\n                                    toolbarConfig={toolbarConfig}\n                                    onChange={ (e) => {\n                                        setTextValue(e);\n                                        setFieldValue(\"contents\", e.toString(\"html\"));\n                                        console.log(values.contents);\n                                    }}\n                                />\n                            ) : null }\n                            { values.contentType === \"Image\" ? (\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contents\"\n                                    className=\"form-group__input form-group__input--fullwidth\" \n                                    placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            { values.contentType === \"Video\" ? (\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contents\"\n                                    className=\"form-group__input form-group__input--fullwidth\" \n                                    placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            <span className=\"message__error\">{errors.contents}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                min={new Date().toISOString().split('T')[0]}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.startDate}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-group_switch\">\n                                <p className=\"form-group_switch_status\">Status:</p>\n                                <p className=\"form-group_switch_inactive\">Inactive</p>\n                                <label className=\"form-group_switch_switch\">\n                                    <input type=\"checkbox\" className=\"form-group_switch_switch_checkbox\"\n                                        name=\"isActive\"\n                                        defaultChecked={values.isActive}\n                                        onChange={() => {\n                                            values.isActive = !values.isActive;\n                                            console.log(values.isActive);\n                                        }}></input>\n                                    <span className=\"form-group_switch_switch_slider\"></span>\n                                </label>\n                                <p className=\"form-group_switch_active\">Active</p>\n                            </div>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Post Content\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddContent: ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, isActive, history) =>\n            dispatch(addContent( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, isActive, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddContent)\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Keluarga HKBP</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64 } from '../../helpers/fileHelper/fileHelper';\n\nfunction getEmbedUrl(url) {\n    // function for generating an embed link\n    let finalUrl = '';\n    let videoId = '';\n\n    if (url.includes('facebook.com/')) {\n        // Facebook Video\n        finalUrl = 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(url) + '&show_text=1&width=200';\n\n    } else if(url.includes('vimeo.com/')) {\n        // Vimeo video\n        videoId = typeof(url.split(\"vimeo.com/\")[1]) !== undefined ? url.split(\"vimeo.com/\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://player.vimeo.com/video/' + videoId;\n\n    } else if (url.includes('youtube.com/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"v=\")[1]) !== undefined ? url.split(\"v=\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' + videoId;\n\n    } else if(url.includes('youtu.be/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"youtu.be/\")[1]) !== undefined ? url.split(\"youtu.be/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' +  videoId;\n\n    } else if (url.includes('dailymotion.com/')) {\n        // Dailymotion Video\n        videoId = typeof(url.split(\"dailymotion.com/\")[1]) !== undefined ? url.split(\"dailymotion.com/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.dailymotion.com/embed/' + videoId;\n\n    } else{\n        finalUrl = url;\n    }\n\n    return finalUrl;\n}\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = ( cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n                let data = {\n                    cobrandEmail,\n                    programName,\n                    ProgramDescription,\n                    programthumnail,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n                console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = ( _id, cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/program');\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n                console.log(data);\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = ( cobrandEmail, programId, retrieveList ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId\n            }\n        }\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/programRemove',\n            data: deleting,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => {\n            console.log(response.data);\n            dispatch(alertSuccess('Program berhasil dihapus. (Kode: ' + programId + ')'));\n            dispatch(loadingStop());\n            retrieveList();\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch(alertError('Program gagal dihapus. Coba beberapa saat lagi. (Kode: ' + programId + ')'));\n            dispatch(loadingStop());\n            retrieveList();\n        });\n    }\n}\n\nexport const addContent = ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                                + '<head>'\n                                    + '<meta charset=\"utf-8\">'\n                                    + '<style>'\n                                        + '#contents {'\n                                            + 'overflow-y: scroll;'\n                                            + 'text-align: justify;'\n                                            + 'white-space: pre-line;'\n                                            + 'font-family: Arial, Helvetica, sans-serif;'\n                                            + 'padding: 1%;'\n                                        + '}'\n                                        + '#contents li {'\n                                            + 'margin-left: 5%;'\n                                        + '}'\n                                    + '</style>'\n                                + '</head>'\n                                + '<body>'\n                                    + '<div id=\"contents\">'\n                                        + contents\n                                    + '</div>'\n                                + '</body>'\n                            + '</html>';\n            }\n\n            console.log(contents);\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentAdd',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/content');\n                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n            console.log(data);\n        });\n    }\n\n    \n\n}\n\nexport const editContent = ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                                + '<head>'\n                                    + '<meta charset=\"utf-8\">'\n                                    + '<style>'\n                                        + '#contents {'\n                                            + 'overflow-y: scroll;'\n                                            + 'text-align: justify;'\n                                            + 'white-space: pre-line;'\n                                            + 'font-family: Arial, Helvetica, sans-serif;'\n                                            + 'padding: 1%;'\n                                        + '}'\n                                        + '#contents li {'\n                                            + 'margin-left: 5%;'\n                                        + '}'\n                                    + '</style>'\n                                + '</head>'\n                                + '<body>'\n                                    + '<div id=\"contents\">'\n                                        + contents\n                                    + '</div>'\n                                + '</body>'\n                            + '</html>';\n            }\n\n            console.log(contents);\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contents,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/content');\n                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n                console.log(data);\n            });\n        }\n    }\n\n    \n\n}\n\nexport const deleteContent = ( cobrandEmail, contentId, retrieveList ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId\n            }\n        }\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentRemove',\n            data: deleting,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => {\n            console.log(response.data);\n            dispatch(alertSuccess('Content berhasil dihapus. (Kode: ' + contentId + ')'));\n            dispatch(loadingStop());\n            retrieveList();\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch(alertError('Content gagal dihapus. Coba beberapa saat lagi. (Kode: ' + contentId + ')'));\n            dispatch(loadingStop());\n            retrieveList();\n        });\n    }\n}"],"sourceRoot":""}