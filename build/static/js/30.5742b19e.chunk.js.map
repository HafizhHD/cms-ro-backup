{"version":3,"sources":["components/UI/RKLoaderInner/RKLoader.js","components/UI/Table/Table.js","components/API/filter.js","containers/CoBrand/Program/components/Columns.js","containers/CoBrand/Program/Program.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["RKLoader","text","className","Table","DATA","COLUMNS","renderRowSubComponent","data","useMemo","useTable","columns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","onClick","disabled","length","type","defaultValue","onChange","e","target","value","Number","map","placeholder","currentTarget","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","getProgramList","query","axios","method","url","getContentList","getUserList","getRedzoneList","dateFormat","year","month","day","Columns","setProgramDeleting","Header","accessor","Date","startDate","toLocaleDateString","Cell","style","color","fontWeight","disableSortBy","disableGlobalFilter","to","title","localStorage","setItem","values","_id","programName","replace","connect","isCurrentlyLoading","auth","isLoading","dispatch","onDeleteProgram","email","deletingProgram","retrieveList","deleteProgram","useState","setLoading","programList","setProgramList","programDeleting","userData","JSON","parse","getItem","params","whereKeyValues","cobrandEmail","includeThumbnailData","limit","MAX_SAFE_INTEGER","then","response","console","log","catch","error","useEffect","removeItem","id","programs","programEdit","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","message","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","ProgramDescription","photo","history","ALERT_CLOSE","toBase64","result","programthumnail","push","editProgram","whereValues","newValues","programId","deleting","addContent","contentName","contentDescription","contentType","contentSource","contents","isActive","contentThumbnail","status","getEmbedUrl","hasil","includes","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","cobrandName","phoneNumber","address","password","Object","assign","thumbnail","cobrandEdit","cobrandLogin","response2","loginData","resultData","token","stringify","user"],"mappings":"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","file":"static/js/30.5742b19e.chunk.js","sourcesContent":["import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = (setProgramDeleting) => {\n    return ([\n        {\n            Header: 'Title',\n            accessor: 'programName'\n        },\n        {\n            Header: 'Start Date',\n            accessor: (value) => new Date(value.startDate).toLocaleDateString(\"en-UK\", dateFormat),\n            Cell: ({value}) => (\n                <>\n                    {new Date(value).toLocaleDateString(\"en-UK\", dateFormat)}\n                </>\n            )\n        },\n        {\n            Header: 'Status',\n            accessor: 'status',\n            Cell: ({ value }) => {\n                return <p style={{ color: 'green', fontWeight: 'bold' }}>{value}</p>\n            }\n        },\n        {\n            Header: 'Action',\n            accessor: '_id',\n            disableSortBy: true,\n            disableGlobalFilter: true,\n            Cell: ({cell}) => (\n                <>\n                    <NavLink \n                        to=\"/cms/program/view\"\n                        className=\"nav_btn\"\n                        title=\"View Detail\"\n                        onClick={() => {\n                            localStorage.setItem('programSelected', cell.row.values._id)\n                        }}>\n                        <button \n                            className=\"btn_action\">\n                            <div>\n                                <FiEye className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                    <NavLink to=\"/cms/program/edit\"\n                        className=\"nav_btn\"\n                        title=\"Edit Program\"\n                        onClick={() => {\n                            localStorage.setItem('programSelected', cell.row.values._id)\n                        }}>\n                        <button\n                            className=\"btn_action\"\n                        >\n                            <div>\n                                <FiEdit2 className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                    <NavLink to=\"/cms/program\"\n                        className=\"nav_btn\"\n                        title=\"Delete Program\"\n                        onClick={() => {\n                            setProgramDeleting([cell.row.values._id, cell.row.values.programName]);\n                        }}\n                        replace>\n                        <button\n                            className=\"btn_action\"\n                        >\n                            <div>\n                                <FiTrash2 className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                </>\n            )\n        }\n    ]);\n}\n\nexport default Columns;","import  { useState, useEffect } from 'react';\nimport './Program.scss';\nimport TableProgram from './../../../components/UI/Table/Table';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport { deleteProgram } from '../../../store/actions/dashboard';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport axios from 'axios';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport {connect} from 'react-redux';\nimport { getProgramList } from '../../../components/API/filter';\n\n// import Modal from '../../../components/UI/Modal/Modal';\n\nfunction Program({\n    isCurrentlyLoading,\n    onDeleteProgram\n}) {\n    const [showModal, setShowModal] = useState(false);\n\n    const [isLoading, setLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [programDeleting, setProgramDeleting] = useState(null);\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.email\n        },\n        includeThumbnailData :false,\n        limit: Number.MAX_SAFE_INTEGER\n    };\n\n    \n    function retrieveList() {\n        getProgramList(params)\n        .then(response => {\n            setProgramList(response.data);\n            console.log(response.data);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        });\n    }\n    \n    useEffect(() => {\n        setLoading(true);\n        if(localStorage.getItem('programDeleting')) {\n            setProgramDeleting(localStorage.getItem('programDeleting'));\n            localStorage.removeItem('programDeleting');\n        }\n        retrieveList();\n    }, []);\n\n    useEffect(() => {\n        if(programDeleting) {\n            setLoading(true);\n            onDeleteProgram(userData.email, programDeleting, retrieveList);\n        }\n    }, [programDeleting]);\n\n    if(isLoading || isCurrentlyLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"Program\">\n            <h1>PROGRAM</h1>\n            <NavLink to=\"/cms/program/add\" id=\"add_program\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Create New Program</span>  \n            </NavLink>\n            <div className=\"Program__table\">\n                <TableProgram \n                    COLUMNS={columns(setProgramDeleting)} \n                    DATA={programList.programs}  \n                />\n            </div>\n\n            {/* <button \n                onClick={() => setShowModal(true)}>\n                Show Modal\n            </button> */}\n            \n            {/* <Modal \n                isShow={showModal}\n                onClose={() => setShowModal(false)} \n                onSubmit={submitModal}\n                title=\"Modal Title\"\n            >\n                <p>Hello Worlds</p>\n            </Modal> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isCurrentlyLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteProgram: (email, deletingProgram, retrieveList) => dispatch(deleteProgram(email, deletingProgram, retrieveList))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Program)\n","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n    // return dispatch => {\n    //     dispatch(loadingStart());\n    //     dispatch({\n    //         type: ALERT_CLOSE\n    //     });\n\n    //     console.log('Photo is empty:', photo === '');\n    //     if (photo === '') {\n    //         if (contentType === 'Video') {\n    //             contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n    //         }\n    //         else if (contentType === 'Image') {\n    //             contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n    //         }\n    //         else if (contentType === 'Pdf') {\n    //             contents =\n    //                 '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n    //             console.log(contents)\n    //         }\n    //         else {\n    //             contents = '<!DOCTYPE html>'\n    //                 + '<html lang=\"en\">'\n    //                 + '<head>'\n    //                 + '<meta charset=\"utf-8\">'\n    //                 + '<style>'\n    //                 + '#contents {'\n    //                 + 'overflow-y: scroll;'\n    //                 + 'text-align: justify;'\n    //                 + 'white-space: pre-line;'\n    //                 + 'font-family: Arial, Helvetica, sans-serif;'\n    //                 + 'padding: 1%;'\n    //                 + '}'\n    //                 + '#contents li {'\n    //                 + 'margin-left: 5%;'\n    //                 + '}'\n    //                 + '</style>'\n    //                 + '</head>'\n    //                 + '<body>'\n    //                 + '<div id=\"contents\">'\n    //                 + contents\n    //                 + '</div>'\n    //                 + '</body>'\n    //                 + '</html>';\n    //         }\n\n    //         console.log(contents);\n    //         let data = {\n    //             whereValues: {\n    //                 cobrandEmail,\n    //                 _id\n    //             },\n    //             newValues: {\n    //                 programId,\n    //                 contentName,\n    //                 contentDescription,\n    //                 contentType,\n    //                 contentSource,\n    //                 contents,\n    //                 startDate\n    //             }\n    //         };\n\n    //         console.log(data);\n    //         //Call API ....\n\n    //         contentEdit(data)\n    //             .then(response => {\n    //                 console.log('Success:', response.data);\n    //                 history.push('/content');\n    //                 dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                 dispatch(loadingStop());\n    //             })\n    //             .catch((error) => {\n    //                 console.error('Error:', error);\n    //                 dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                 dispatch(loadingStop());\n    //             });\n    //         console.log(data);\n    //     }\n\n    //     else {\n    //         const promise = toBase64(photo);\n    //         promise.then((result) => {\n    //             console.log(typeof result);\n    //             const programthumnail = result;\n\n    //             let data = {\n    //                 whereValues: {\n    //                     cobrandEmail,\n    //                     _id\n    //                 },\n    //                 newValues: {\n    //                     programId,\n    //                     contentName,\n    //                     contentDescription,\n    //                     contentType,\n    //                     contentSource,\n    //                     contents,\n    //                     startDate\n    //                 }\n    //             };\n\n    //             console.log(data);\n    //             //Call API ....\n\n    //             contentEdit(data)\n    //                 .then(response => {\n    //                     console.log('Success:', response.data);\n    //                     history.push('/content');\n    //                     dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                     dispatch(loadingStop());\n    //                 })\n    //                 .catch((error) => {\n    //                     console.error('Error:', error);\n    //                     dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                     dispatch(loadingStop());\n    //                 });\n    //             console.log(data);\n    //         });\n    //     }\n    // }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}