{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","containers/CoBrand/User/EditUser/EditUser.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","validationProgramEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","programEdit","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","editAppUser","gender","imagePhoto","connect","state","auth","isLoading","onEditUser","_emailUser","useState","isPageLoading","setPageLoading","setUser","useHistory","parse","getItem","useEffect","params","whereKeyValues","users","headingName","routes","path","initialValues","split","Date","toISOString","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","currentTarget","file","files","reader","FileReader","readAsDataURL","onloadend","base64data","replace","Heading","item","exact","to"],"mappings":"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","file":"static/js/35.d7d8d1b6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import React, {useEffect, useState} from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditUser.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editAppUser } from '../../../../store/actions/dashboard';\nimport { getUserList } from '../../../../components/API/filter'\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationUserEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nfunction EditUser({\n    onEditUser,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [user, setUser] = useState();\n    const [programStartDate, setProgramStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _emailUser = localStorage.getItem('userSelected');\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_emailUser);\n        if(_emailUser) {\n            const params = {\n                whereKeyValues: {\n                    emailUser: _emailUser\n                }\n            };\n\n            getUserList(params)\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setUser(response.data.users[0]);\n                setPageLoading(false);\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n        }\n    }, []);\n\n    if(isPageLoading || isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Manajemen Pengguna\" routes={[\n                { path: '/cms/user', name: 'Pengguna' },\n                { path: '/cms/user/edit', name: 'Ubah Pengguna' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    nameUser: user.nameUser ?? '',\n                    emailUser: user.emailUser ?? '',\n                    gender: user.gender ?? 'pria',\n                    birdDate: user.birdDate.split('T')[0] ?? new Date().toISOString.split('T')[0],\n                    address: user.address ?? '',\n                    imagePhoto: '',\n                    phoneNumber: user.phoneNumber ?? ''\n                }}\n                validationSchema = {validationUserEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    let finalPhoto = user.imagePhoto;\n                    if(values.imagePhoto !== '') finalPhoto = values.imagePhoto\n                    onEditUser( _emailUser, values.nameUser, values.emailUser, values.gender, values.birdDate, values.address, values.imagePhoto, values.phoneNumber, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditProgram\">\n                        <h1>Ubah Pengguna Terpilih: {user.nameUser}</h1>\n                        <div className=\"form-group\">\n                            <label>Nama</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"nameUser\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.nameUser}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.nameUser && <span className=\"message__error\">{errors.nameUser}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"emailUser\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"example@example.com\"\n                                value={values.emailUser}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.emailUser && <span className=\"message__error\">{errors.emailUser}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Jenis Kelamin</label>\n                            <select\n                                name=\"gender\"\n                                value={values.gender}\n                                onChange={(e) => {\n                                    setFieldValue('gender', e.currentTarget.value);\n                                }}\n                            >\n                                <option value=\"pria\">Pria</option>\n                                <option value=\"wanita\">Wanita</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Tanggal Lahir</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"birdDate\"\n                                value={values.birdDate}\n                                min={new Date('1980-01-01')}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.birdDate && <span className=\"message__error\">{errors.birdDate}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Alamat</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"address\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Jl. Example\"\n                                value={values.address}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Foto Profil Baru {\"(Opsional)\"}</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"imagePhoto\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        const reader = new FileReader();\n                                        reader.readAsDataURL(file);\n                                        reader.onloadend = function() {\n                                            var base64data = reader.result;                \n                                            setFieldValue('imagePhoto', base64data);\n                                        }\n                                    }\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Nomor Telepon</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"phoneNumber\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.phoneNumber}\n                                onChange={(e) => {\n                                    const result = e.currentTarget.value.replace(/\\D/g, '');\n                                    setFieldValue(\"phoneNumber\", result);\n                                }}\n                                onBlur={handleBlur}\n                            />\n                            {touched.phoneNumber && <span className=\"message__error\">{errors.phoneNumber}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Update Pengguna\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditUser: ( _emailUser, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber, history ) =>\n            dispatch(editAppUser( _emailUser, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditUser)","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}