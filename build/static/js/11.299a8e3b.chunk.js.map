{"version":3,"sources":["components/UI/Map/Map.js","containers/CoBrand/RedZone/components/Columns.js","containers/CoBrand/RedZone/RedZone.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","components/UI/Table/Table.js"],"names":["Map","ReactMapboxGl","accessToken","GoogleMaps","search","console","log","style","containerStyle","height","center","zoom","type","id","layout","coordinates","Columns","Header","accessor","Cell","row","original","lat","lon","className","onClick","RedZone","useState","mapSearch","mapSearchInput","Heading","headingName","routes","name","path","Input","placeholder","onChange","e","currentTarget","value","urlBuilder","encodeURI","axios","method","url","then","response","data","features","catch","error","Table","COLUMNS","DATA","Data","length","map","item","i","exact","to","onBlur","message","min","disabled","isError","max","memo","renderRowSubComponent","useMemo","useTable","columns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","defaultValue","target","Number","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","isExpanded","colSpan"],"mappings":"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","file":"static/js/11.299a8e3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMapboxGl, { Layer, Feature, Marker } from 'react-mapbox-gl';\nimport axios from 'axios';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = ReactMapboxGl({\n    accessToken:\n      'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg'\n});\n\nexport const accessToken = 'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg';\n\nconst GoogleMaps = ({search}) => {\n    console.log(search);\n    \n    return (\n        <Map\n          style=\"mapbox://styles/mapbox/streets-v9\"\n          containerStyle={{\n            height: '50vh'\n          }}\n          center={\n            search ? search.center: [10, 10]\n          }\n          zoom={[11]}\n        >\n        <Layer\n          type=\"symbol\" \n          id=\"marker\" \n          layout={{ 'icon-image': 'marker-15' }}\n        >\n          <Feature coordinates={\n              search ? search.center: [5, 5]\n          } />\n        </Layer>\n      </Map>\n    )\n}\n\nexport default GoogleMaps;\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst Columns = [\n    {\n        Header: 'No',\n        accessor: 'id'\n    },\n    {\n        Header: 'Name',\n        accessor: 'name'\n    },\n    {\n        Header: 'Location',\n        accessor: 'location'\n    },\n    {\n        Header: 'Geo Tag',\n        Cell: ({row}) => {\n            return row.original.lat + ' '+row.original.lon;\n        }\n    },\n    {\n        Header: 'Created At',\n        accessor: 'created_at'\n    },\n    {\n        Header: 'Action',\n        Cell: (row) => (\n            <>\n                <button \n                    className=\"btn_action\"\n                    onClick={() => console.log(row)}>\n                    <div>\n                        <FiEye className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiEdit2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiTrash2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n            </>\n        )\n    }\n];\n\nexport default Columns;","import React, { useState } from 'react';\nimport './RedZone.scss';\nimport Heading from './../../../components/UI/Heading/Heading';\nimport InputComponent from './../../../components/UI/Input/Input';\nimport MapComponent, { accessToken } from './../../../components/UI/Map/Map';\nimport TableRedZone from './../../../components/UI/Table/Table';\nimport Columns from './components/Columns';\nimport Data from './components/redzone.json';\nimport axios from 'axios';\n\n\nfunction RedZone() {\n    const [mapSearch, mapSearchInput] = useState('');\n\n    return (\n        <div className=\"RedZone\">\n            <Heading headingName=\"Redzone\" routes={[\n                { name: 'Data Redzone' },\n                { path: '/redzone', name: 'List Redzone' }\n            ]} />\n\n            <div className=\"RedZone__map\">\n                <div className=\"RedZone__heading\">\n                    <h3>Map View</h3>\n                    <InputComponent \n                        className=\"Input-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        name=\"search\"\n                        onChange={(e) => {\n                            console.log(e.currentTarget.value);\n                            let urlBuilder = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + encodeURI(e.currentTarget.value) + '.json?access_token=' + accessToken;\n                            axios({\n                              method: 'get',\n                              url: urlBuilder\n                            })\n                            .then(response => {\n                                //console.log(\"Response data: \", response.data);\n                                mapSearchInput(response.data.features[0]);\n                            })\n                            .catch(error => {\n                                console.log(error);\n                            });\n                        }}\n                    />\n                </div>\n                <div className=\"RedZone__data\">\n                    <MapComponent search={mapSearch}/>\n                </div>\n            </div>\n\n            <div className=\"RedZone__list\">\n                <div className=\"RedZone__heading\">\n                    <h3>Redzone List</h3>\n                    <InputComponent \n                        className=\"Input-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        name=\"search\"\n                    />\n                </div>\n                <div className=\"RedZone__data\">\n                    <TableRedZone \n                        COLUMNS={Columns}\n                        DATA={Data}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RedZone\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n"],"sourceRoot":""}