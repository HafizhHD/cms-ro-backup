{"version":3,"sources":["components/API/filter.js","components/UI/Table/TableFilter.js","components/UI/Table/TableWithFilter.js","containers/CoBrand/Report/ContentReport/columns.js","containers/CoBrand/Report/ContentReport/ContentReport.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","getAdminList","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","length","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","values","has","add","map","option","i","SelectArrayColumnFilter","console","log","Array","x","NumberRangeColumnFilter","min","max","Math","style","display","type","val","old","parseInt","width","marginRight","marginLeft","DateRangeColumnFilter","Date","toISOString","slice","fuzzyTextFilterFn","rows","matchSorter","keys","dateBetweenFilterFn","filterValues","sd","ed","filter","r","time","autoRemove","TableWithFilter","DATA","COLUMNS","renderRowSubComponent","showCheckbox","notifContext","filterTypes","fuzzyText","dateBetween","text","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","useTable","columns","initialState","hiddenColumns","useFilters","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","selectedRowIds","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","downloadAsCSV","currentRecords","data_to_download","record_to_download","colIndex","cells","Object","prototype","toString","call","isNaN","split","className","currentTarget","onClick","dataRaw","doc","jsPDF","setFontSize","content","startY","head","body","autoTable","save","to","localStorage","setItem","stringEmail","jsonData","original","emailUser","userType","includes","JSON","stringify","parentEmail","some","disabled","defaultValue","Number","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cell","getCellProps","isArray","isExpanded","colSpan","Columns","disableFilters","accessor","join","index","ContentReport","useState","isLoading","setLoading","contentData","setContentData","period","setPeriod","userData","parse","getItem","dummyData","params","whereKeyValues","cobrandEmail","programId","status","orderKeyValues","contentName","includeContentData","limit","MAX_SAFE_INTEGER","then","response","contents","catch","error","RKLoader","Heading","headingName","routes","name","path","item","exact"],"mappings":"mIAAA,2hBAGaA,EAAiB,SAACC,GAAD,OAAWC,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXC,EAAiB,SAACN,GAAD,OAAWC,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXE,EAAc,SAACP,GAAD,OAAWC,IAAM,CACxCC,OAAQ,OACRC,IAAKA,IAAM,mBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXG,EAAiB,SAACR,GAAD,OAAWC,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXI,EAAkB,SAACT,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,uBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXK,EAAwB,SAACV,GAAD,OAAWC,IAAM,CAClDC,OAAQ,OACRC,IAAKA,IAAM,kCACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXM,EAAkB,SAACX,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXO,EAAkB,SAACZ,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXQ,EAAmB,SAACb,GAAD,OAAWC,IAAM,CAC7CC,OAAQ,OACRC,IAAKA,IAAM,sBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXS,EAAsB,SAACd,GAAD,OAAWC,IAAM,CAChDC,OAAQ,OACRC,IAAKA,IAAM,wBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXU,EAA8B,SAACf,GAAD,OAAWC,IAAM,CACxDC,OAAQ,OACRC,IAAKA,IAAM,kCACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXW,EAAkB,SAAChB,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXY,EAAsB,SAACjB,GAAD,OAAWC,IAAM,CAChDC,OAAQ,OACRC,IAAKA,IAAM,0BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXa,EAAyB,SAAClB,GAAD,OAAWC,IAAM,CACnDC,OAAQ,OACRC,IAAKA,IAAM,6BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXc,EAAe,SAACnB,GAAD,OAAWC,IAAM,CACzCC,OAAQ,OACRC,IAAKA,IAAM,kBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,wB,grEClGf,SAASe,EAAT,GAEH,IAAD,IADDC,OAAUC,EACT,EADSA,YAAaC,EACtB,EADsBA,gBAAiBC,EACvC,EADuCA,UAE1BD,EAAgBE,OAE9B,OACE,uBACEC,MAAOJ,GAAe,GACtBK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAE9BC,YAAW,cAOV,SAASC,EAAT,GAEH,IAAD,IADDX,OAAUC,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBU,EAClD,EADkDA,GAI7CC,EAAUC,IAAMC,SAAQ,WAC5B,IAAMF,EAAU,IAAIG,IAIpB,OAHAd,EAAgBe,SAAQ,SAAAC,QACAT,IAAnBS,EAAIC,OAAOP,IAAsBC,EAAQO,IAAIF,EAAIC,OAAOP,KAAMC,EAAQQ,IAAIH,EAAIC,OAAOP,OAEnF,YAAIC,EAAQM,YAClB,CAACP,EAAIV,IAGR,OACE,yBACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAHhC,UAME,wBAAQJ,MAAM,GAAd,iBACCQ,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAgBnB,MAAOkB,EAAvB,SACGA,GADUC,SAUd,SAASC,EAAT,GAEH,IAAD,IADDzB,OAAUC,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBU,EAClD,EADkDA,GAI7CC,EAAUC,IAAMC,SAAQ,WAC5B,IAAMF,EAAU,IAAIG,IAYpB,OAXAd,EAAgBe,SAAQ,SAAAC,GAItB,GAHAQ,QAAQC,IAAI,UAAWT,EAAIC,OAAOP,IAClCc,QAAQC,IAAI,eAAgBT,EAAIC,OAAOP,aAAegB,OACtDF,QAAQC,IAAI,iBAAkBT,EAAIC,OAAOP,GAAIR,QAC1Cc,EAAIC,OAAOP,aAAegB,OAASV,EAAIC,OAAOP,GAAIR,OAAS,EAC5D,IAAI,IAAIoB,EAAI,EAAGA,EAAGN,EAAIC,OAAOP,GAAIR,OAAQoB,IAAK,CAC5C,IAAIK,EAAIX,EAAIC,OAAOP,GAAIY,QACdf,IAANoB,GAAoBhB,EAAQO,IAAIS,IAAIhB,EAAQQ,IAAIQ,OAIlD,YAAIhB,EAAQM,YAClB,CAACP,EAAIV,IAGR,OACE,yBACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAHhC,UAME,wBAAQJ,MAAM,GAAd,iBACCQ,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAgBnB,MAAOkB,EAAvB,SACGA,GADUC,SA8Cd,SAASM,EAAT,GAEH,IAAD,IADD9B,OACC,IADSC,mBACT,MADuB,GACvB,EAD2BC,EAC3B,EAD2BA,gBAAiBC,EAC5C,EAD4CA,UAAWS,EACvD,EADuDA,GAExD,EAAmBE,IAAMC,SAAQ,WAC/B,IAAIgB,EAAM7B,EAAgBE,OAASF,EAAgB,GAAGiB,OAAOP,GAAM,EAC/DoB,EAAM9B,EAAgBE,OAASF,EAAgB,GAAGiB,OAAOP,GAAM,EAKnE,OAJAV,EAAgBe,SAAQ,SAAAC,GACtBa,EAAME,KAAKF,IAAIb,EAAIC,OAAOP,GAAKmB,GAC/BC,EAAMC,KAAKD,IAAId,EAAIC,OAAOP,GAAKoB,MAE1B,CAACD,EAAKC,KACZ,CAACpB,EAAIV,IARR,mBAAO6B,EAAP,KAAYC,EAAZ,KAUA,OACE,sBACEE,MAAO,CACLC,QAAS,QAFb,UAKE,uBACE9B,MAAOJ,EAAY,IAAM,GACzBmC,KAAK,SACL9B,SAAU,SAAAC,GACR,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACD,EAAME,SAASF,EAAK,SAAM5B,EAAW6B,EAAI,QAEpEP,IAAKA,EACLrB,YAAW,eAAUqB,EAAV,KACXG,MAAO,CACLM,MAAO,OACPC,YAAa,YAhBnB,KAoBE,uBACEpC,MAAOJ,EAAY,IAAM,GACzBmC,KAAK,SACL9B,SAAU,SAAAC,GACR,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAID,EAAME,SAASF,EAAK,SAAM5B,OAE7DsB,IAAKA,EACLrB,YAAW,eAAUsB,EAAV,KACXE,MAAO,CACLM,MAAO,OACPE,WAAY,eAOf,SAASC,EAAT,GAEN,IAAD,IADE3C,OACF,IADYC,mBACZ,MAD0B,GAC1B,EAD8BC,EAC9B,EAD8BA,gBAAiBC,EAC/C,EAD+CA,UAAWS,EAC1D,EAD0DA,GAExD,EAAmBE,IAAMC,SAAQ,WAC7B,IAAIgB,EAAM,IAAIa,KAAK,cACfZ,EAAM,IAAIY,KAAK,cAKnB,OAJA1C,EAAgBe,SAAQ,SAAAC,GACpBa,EAAMb,EAAIC,OAAOP,IAAM,IAAIgC,KAAK1B,EAAIC,OAAOP,KAAQmB,EAAM,IAAIa,KAAK1B,EAAIC,OAAOP,IAAamB,EAC1FC,EAAMd,EAAIC,OAAOP,IAAM,IAAIgC,KAAK1B,EAAIC,OAAOP,KAAQoB,EAAM,IAAIY,KAAK1B,EAAIC,OAAOP,IAAaoB,KAEvF,CAACD,EAAKC,KACd,CAACpB,EAAIV,IARR,mBAAO6B,EAAP,KAAYC,EAAZ,KAUA,OACI,sBACIE,MAAO,CACHC,QAAS,QAFjB,UAKI,uBACI9B,MAAOJ,EAAY,IAAM8B,EAAIc,cAAcC,MAAM,EAAG,IACpDV,KAAK,OACLL,IAAKA,EAAIc,cAAcC,MAAM,EAAG,IAChCd,IAAK/B,EAAY,IAAM+B,EAAIa,cAAcC,MAAM,EAAG,IAClDxC,SAAU,SAAAC,GACN,IAAM8B,EAAM9B,EAAEC,OAAOH,MAErBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACD,QAAc5B,EAAW6B,EAAI,QAE1DJ,MAAO,CACHM,MAAO,QACPC,YAAa,YAjBzB,KAqBF,uBACUpC,MAAOJ,EAAY,IAAM+B,EAAIa,cAAcC,MAAM,EAAG,IACpDV,KAAK,OACLL,IAAK9B,EAAY,IAAM8B,EAAIc,cAAcC,MAAM,EAAG,IAClDd,IAAKA,EAAIa,cAAcC,MAAM,EAAG,IAChCxC,SAAU,SAAAC,GACN,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAID,QAAc5B,OAEnDyB,MAAO,CACHM,MAAO,QACPE,WAAY,eAqBvB,SAASK,EAAkBC,EAAMpC,EAAIX,GAC1C,OAAOgD,YAAYD,EAAM/C,EAAa,CAAEiD,KAAM,CAAC,SAAAhC,GAAG,OAAIA,EAAIC,OAAOP,OAM5D,SAASuC,EAAoBH,EAAMpC,EAAIwC,GAC5C,IAAIC,EAAK,IAAIT,KAAKQ,EAAa,IAC3BE,EAAK,IAAIV,KAAKQ,EAAa,IAE/B,OAAOJ,EAAKO,QAAO,SAAAC,GACf,IAAIC,EAAO,IAAIb,KAAKY,EAAErC,OAAOP,IAE7B,OAA4B,IAAxBwC,EAAahD,OAAqB4C,EAC9BS,GAAQJ,GAAMI,GAAQH,KAVpCP,EAAkBW,WAAa,SAAArB,GAAG,OAAKA,GAczCc,EAAoBO,WAAa,SAAArB,GAAG,OAAKA,I,kKCkE1BsB,IApWf,YAA6G,IAAlFC,EAAiF,EAAjFA,KAAMC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,sBAAkE,IAA3CC,oBAA2C,aAArBC,oBAAqB,MAAN,GAAM,EAClGC,EAAcnD,IAAMC,SACtB,iBAAO,CAELmD,UAAWnB,IACXoB,YAAahB,IAGbiB,KAAM,SAACpB,EAAMpC,EAAIX,GACf,OAAO+C,EAAKO,QAAO,SAAArC,GACjB,IAAMmD,EAAWnD,EAAIC,OAAOP,GAC5B,YAAoBH,IAAb4D,GACHC,OAAOD,GACJE,cACAC,WAAWF,OAAOrE,GAAasE,sBAK5C,IAGIE,EAAgB3D,IAAMC,SAC1B,iBAAO,CAEL2D,OAAQ3E,OAEV,IAGI4E,EAAwB7D,IAAM8D,YAClC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAalE,IAAMmE,SACnBC,EAAcL,GAAOG,EAM3B,OAJAlE,IAAMqE,WAAU,WACdD,EAAYE,QAAQN,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,mCACE,mCAAO1C,KAAK,WAAWyC,IAAKK,GAAiBH,SAMjDhG,EAAOgC,mBAAS,kBAAM6C,IAAO,CAACA,IAIpC,EAqBIyB,mBAAS,CACTC,QAASzB,EACT9E,KAAMA,EACN0F,gBACAR,cACAsB,aA5BiB,CAAEC,cAAe,CAAC,YAAa,cAAe,SA6BhEC,aACDC,kBACAC,YACAC,cACAC,gBACAC,gBACA,SAAAC,GACKhC,GAAcgC,EAAMC,eAAeC,MAAK,SAAAX,GAAO,OAEhD,CACE1E,GAAI,YAGJsF,OAAQ,gBAAGC,EAAH,EAAGA,8BAAH,OACN,8BACE,cAACxB,EAAD,eAA2BwB,SAK/BC,KAAM,gBAAGlF,EAAH,EAAGA,IAAH,OACJ,8BACE,cAACyD,EAAD,eAA2BzD,EAAImF,mCAfW,mBAmB7Cf,UApDLgB,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,WACAC,EALJ,EAKIA,KACA1D,EANJ,EAMIA,KACA2D,EAPJ,EAOIA,gBACAC,EARJ,EAQIA,YACAC,EATJ,EASIA,YACAC,EAVJ,EAUIA,UACAC,EAXJ,EAWIA,SACAC,EAZJ,EAYIA,SACAC,EAbJ,EAaIA,aACAC,EAdJ,EAcIA,YACAlB,EAfJ,EAeIA,eACAmB,EAhBJ,EAgBIA,iBAhBJ,KAiBIC,MAASC,eAjBb,EAkBID,OAAQE,EAlBZ,EAkBYA,UAAWC,EAlBvB,EAkBuBA,SACnBH,GAnBJ,EAkBiCI,SAlBjC,EAmBIJ,OACAK,EApBJ,EAoBIA,gBAqCIC,EAAiBN,EAAjBM,aAEFC,EAAgB,WAIlB,IAHA,IAAMC,EAAiB5E,EAEnB6E,EAAmB,GACdrG,EAAI,EAAGA,EAAIoG,EAAexH,OAAQoB,IAAK,CAC5C,IAAIsG,EAAqB,GACzBrB,EAAWmB,EAAepG,IAE1B,IAAK,IAAIuG,EAAW,EAAGA,EAAWH,EAAepG,GAAGwG,MAAM5H,OAAQ2H,IACX,cAAhDH,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOY,IACI,cAAhDgH,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOY,IACO,iBAAhDgH,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOY,KAClCgH,EAAepG,GAAGwG,MAAMD,GAAU1H,OAAqF,kBAA5E4H,OAAOC,UAAUC,SAASC,KAAKR,EAAepG,GAAGwG,MAAMD,GAAU1H,SAA+BgI,MAAMT,EAAepG,GAAGwG,MAAMD,GAAU1H,OAClLyH,EAAmBF,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOkG,QAC5D0B,EAAepG,GAAGwG,MAAMD,GAAU1H,MAAMwC,cAAcyF,MAAM,KAAK,GAChER,EAAmBF,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOkG,QAC7D0B,EAAepG,GAAGwG,MAAMD,GAAU1H,OAG9CwH,EAAiB5B,KAAK6B,GAE1B,OAAOD,GAgCX,OACI,qCACA,sBAAKU,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,2CAAcvF,EAAK5C,OAAnB,WACA,uBACIgC,KAAK,OACLmG,UAAU,oBACV7H,YAAY,SACZL,MAAQqH,GAAgB,GACxBpH,SAAU,SAACC,GACPkH,EAAgBlH,EAAEiI,cAAcnI,aAI5C,yBAAQkI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAA9B,IAAyC,cAAC,UAAD,CAASxJ,KAAM4I,IAAf,gCACzC,yBAAQY,UAAU,YAAYE,QA7ChB,WAClB,IAAMC,EAAUf,IAChB,GAAGe,EAAQtI,OAAS,EAAG,CACnB,IAKMuI,EAAM,IAAIC,UAHI,YAFP,KACA,MAMbD,EAAIE,YAAY,IAEhB,IAKIC,EAAU,CACVC,OAAQ,GACRC,KANY,CAACf,OAAO/E,KAAKwF,EAAQ,KAOjCO,KALSP,EAAQpH,KAAI,SAAAf,GAAC,OAAI0H,OAAO9G,OAAOZ,OAQ5CoI,EAAIvE,KAXU,SALK,GAgBS,IAC5BuE,EAAIO,UAAUJ,GACdH,EAAIQ,KAAK,gBAoBT,UAAsD,cAAC,IAAD,IAAtD,sBACCpF,EAAeoD,EAAiB/G,OAAS,EAAK,yBAAQmI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAAS,cAAC,IAAD,CAASa,GAAG,yBAAyBb,UAAU,YAAYE,QAAS,WAClJY,aAAaC,QAAQ,eAAgBtF,GAKrC,IAHA,IAAIuF,EAAc,GAEdC,EAAW,GACPhI,EAAI,EAAGA,EAAI2F,EAAiB/G,OAAQoB,IACxC+H,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,WACD,UAA1CvC,EAAiB3F,GAAGiI,SAASE,WACxBJ,EAAYK,SAASzC,EAAiB3F,GAAGiI,SAASC,YAAYH,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,YAGpHF,EAASvD,KAAKkB,EAAiB3F,GAAGiI,UAEtCJ,aAAaC,QAAQ,WAAYO,KAAKC,UAAUN,IAEhDH,aAAaC,QAAQ,UAAWC,EAAYpB,YAE5CkB,aAAaC,QAAQ,mBAAoB,UAlBqC,4CAoBjF,yBAAQf,UAAU,qBAAlB,UAAuC,cAAC,IAAD,IAAS,sBAAMA,UAAU,qBAAhB,4CAAmF,KACvIxE,EAAeoD,EAAiB/G,OAAS,EAAK,yBAAQmI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAAS,cAAC,IAAD,CAASa,GAAG,yBAAyBb,UAAU,YAAYE,QAAS,WAClJY,aAAaC,QAAQ,eAAgBtF,GAKrC,IAHA,IAAIuF,EAAc,GAEdC,EAAW,GACPhI,EAAI,EAAGA,EAAI2F,EAAiB/G,OAAQoB,SACQf,IAA7C0G,EAAiB3F,GAAGiI,SAASM,cACxBR,EAAYS,MAAK,SAAAxG,GAAC,OAAI2D,EAAiB3F,GAAGiI,SAASM,YAAYH,SAASpG,QAC3B,UAA1C2D,EAAiB3F,GAAGiI,SAASE,SAAsBJ,EAAYtD,KAAZ,MAAAsD,EAAW,YAASpC,EAAiB3F,GAAGiI,SAASM,cAClGR,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,aAI3DF,EAASvD,KAAKkB,EAAiB3F,GAAGiI,UAEtCJ,aAAaC,QAAQ,WAAYO,KAAKC,UAAUN,IAEhDH,aAAaC,QAAQ,UAAWC,EAAYpB,YAE5CkB,aAAaC,QAAQ,mBAAoB,WApBqC,6CAsBjF,yBAAQf,UAAU,qBAAlB,UAAuC,cAAC,IAAD,IAAS,sBAAMA,UAAU,qBAAhB,6CAAoF,KACxIxE,EAAeoD,EAAiB/G,OAAS,EAAK,yBAAQmI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAAS,cAAC,IAAD,CAASa,GAAG,yBAAyBb,UAAU,YAAYE,QAAS,WAClJY,aAAaC,QAAQ,eAAgBtF,GAKrC,IAHA,IAAIuF,EAAc,GAEdC,EAAW,GACPhI,EAAI,EAAGA,EAAI2F,EAAiB/G,OAAQoB,IACpC+H,EAAYK,SAASzC,EAAiB3F,GAAGiI,SAASC,YAAYH,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,gBAChEjJ,IAA7C0G,EAAiB3F,GAAGiI,SAASM,cACxBR,EAAYS,MAAK,SAAAxG,GAAC,OAAI2D,EAAiB3F,GAAGiI,SAASM,YAAYH,SAASpG,OAAK+F,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASM,cAGnIP,EAASvD,KAAKkB,EAAiB3F,GAAGiI,UAEtCJ,aAAaC,QAAQ,WAAYO,KAAKC,UAAUN,IAEhDH,aAAaC,QAAQ,UAAWC,EAAYpB,YAE5CkB,aAAaC,QAAQ,mBAAoB,QAlBqC,0CAoBjF,yBAAQf,UAAU,qBAAlB,UAAuC,cAAC,IAAD,IAAS,sBAAMA,UAAU,qBAAhB,0CAAiF,QAE1I,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,wBAAQE,QAAS,kBAAM1B,EAAS,IAAIkD,UAAWtD,EAA/C,SACC,OAED,wBAAQ8B,QAAS,kBAAMxB,KAAgBgD,UAAWtD,EAAlD,SACC,MAED,wBAAQ8B,QAAS,kBAAMzB,KAAYiD,UAAWrD,EAA9C,SACC,MAED,wBAAQ6B,QAAS,kBAAM1B,EAASD,EAAY,IAAImD,UAAWrD,EAA3D,SACC,OAED,yCACM,IACN,mCACKU,EAAY,EADjB,OACwBT,EAAYzG,aAGpC,iDAEI,uBACIgC,KAAK,SACL8H,aAAc5C,EAAY,EAC1BhH,SAAU,SAAAC,GACN,IAAMmG,EAAOnG,EAAEC,OAAOH,MAAQ8J,OAAO5J,EAAEC,OAAOH,OAAS,EAAI,EAC3D0G,EAASL,SAIrB,wBACArG,MAAOkH,EACPjH,SAAU,SAAAC,GACN2G,EAAYiD,OAAO5J,EAAEC,OAAOH,SAHhC,SAMC,CAAC,GAAI,GAAI,IAAIiB,KAAI,SAAAiG,GAAQ,OACtB,yBAAuBlH,MAAOkH,EAA9B,kBACUA,IADGA,aAOzB,qBAAKgB,UAAU,kBAAf,SACD,kDAAWjC,KAAX,cACI,gCACKE,EAAalF,KAAI,SAAA8I,GAAW,OACzB,qCACA,8CAAQA,EAAYC,uBAApB,aACKD,EAAYpL,QAAQsC,KAAI,SAAAtB,GAAM,OAC3B,+CAAQA,EAAOsK,eAAetK,EAAOuK,yBAArC,cACKvK,EAAOwK,OAAO,UACd,+BACKxK,EAAOyK,SACNzK,EAAO0K,aACF,cAAC,IAAD,IACA,cAAC,IAAD,IACL,eAKnB,6BACMN,EAAYpL,QAAQsC,KAAI,SAAAtB,GAAM,OAC3B,6BAAKA,EAAO2K,UAAY3K,EAAOwK,OAAO,UAAY,oBAMnE,iDAAWjE,KAAX,aACMG,EAAKpF,KAAI,SAACJ,EAAKM,GAEZ,OADAiF,EAAWvF,GAEP,eAAC,WAAD,2BAAcA,EAAI0J,eAAlB,cACI,6BACK1J,EAAI8G,MAAM1G,KAAI,SAAAuJ,GAEX,OAAO,+CAAQA,EAAKC,gBAAb,IAA6BvC,WAAYsC,EAAKxK,QAAUuB,MAAMmJ,QAAQF,EAAKxK,QAAYuB,MAAMmJ,QAAQF,EAAKxK,QAAUwK,EAAKxK,MAAMD,OAAS,GAAyB,cAAnByK,EAAK7K,OAAOY,IAC9JiK,EAAK7K,OAAOY,GAAqB,QAD7B,cACmE,cAAnBiK,EAAK7K,OAAOY,GAC9DiK,EAAKL,OAAO,QACXhJ,EAAI,EAAK8F,EAAYC,EAHpB,aAMdrG,EAAI8J,WACD,6BACI,oBAAIC,QAASjF,EAAe5F,OAA5B,SAQK0D,EAAsB,CAAE5C,YAGjC,0B,oFChPjBgK,EAhHC,CACZ,CACIhF,OAAQ,MACRtF,GAAI,YACJuK,gBAAgB,GAEpB,CACIjF,OAAQ,eACRkF,SAAU,cACVD,gBAAgB,GAEpB,CACIjF,OAAQ,gBACRkF,SAAU,cACV1G,OAAQ/D,IACR4C,OAAQ,UAEZ,CACI2C,OAAQ,gBACRkF,SAAU,SACV1G,OAAQjD,IACR8B,OAAQ,cACR6C,KAAM,YAAmB,IAAjB/F,EAAgB,EAAhBA,MAAOa,EAAS,EAATA,IACX,YAAaT,IAAVJ,EAA4B,4BAAIA,EAAMgL,KAAK,QAEvCnK,EAAIoK,MAAQ,IAAM,EAAU,2CACnB,wCAIxB,CACIpF,OAAQ,iBACRkF,SAAU,iBACV1G,OAAQjD,IACR8B,OAAQ,cACR6C,KAAM,YAAmB,IAAjB/F,EAAgB,EAAhBA,MAAgB,EAATa,IACX,YAAaT,IAAVJ,EAA4B,4BAAIA,EAAMgL,KAAK,QAClC,wCAGpB,CACInF,OAAQ,cACRkF,SAAU,aAEd,CACIlF,OAAQ,cACRkF,SAAU,gBAEd,CACIlF,OAAQ,SACRkF,SAAU,SACV1G,OAAQ/D,IACR4C,OAAQ,W,oDCuCDgI,UAtFO,WAClB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,qBAAtC,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4BJ,mBAAS,QAArC,mBAAOK,EAAP,KAAeC,EAAf,KAQMC,EAAWlC,KAAKmC,MAAM3C,aAAa4C,QAAQ,aAgCjD,OA9BA9G,qBAAU,WACN,GAAc,UAAX0G,EACCD,EAAeM,GACfR,GAAW,OAEV,CAAC,IAAIS,EAAO,CACbC,eAAgB,CACZC,aAAcN,EAASM,aACvBC,UAAW,CAAC,IAAQ,CAAC,OACrBC,OAAQ,CAAC,IAAQ,CAAC,SAAU,cAEhCC,eAAgB,CACZC,YAAa,GAEjBC,oBAAoB,EACpBC,MAAOxC,OAAOyC,kBAGlB3N,YAAekN,GACdU,MAAK,SAAAC,GAEFlB,EAAekB,EAAS/N,KAAKgO,UAC7BrB,GAAW,MAEdsB,OAAM,SAAAC,GAEHvB,GAAW,SAEhB,CAAC,CAAEG,IAEHJ,EACQ,cAACyB,EAAA,EAAD,IAGP,sBAAK3E,UAAU,UAAf,UACI,cAAC4E,EAAA,EAAD,CACIC,YAAY,iBACZC,OAAQ,CACJ,CAAEC,KAAM,UACR,CAAEA,KAAM,iBAAkBC,KAAM,sBAGxC,sBAAKhF,UAAU,mBAAf,UACG,wBAAQA,UAAsB,SAAXsD,EAAoB,iCAAmC,0BACtEpD,QAAS,WACS,SAAXoD,IACCH,GAAW,GACXI,EAAU,UAJtB,kBAOA,wBAAQvD,UAAsB,UAAXsD,EAAqB,iCAAmC,0BACvEpD,QAAS,WACS,UAAXoD,IACCH,GAAW,GACXI,EAAU,WAJtB,sBAQH,qBAAKvD,UAAU,gBAAf,SACI,cAAC,IAAD,CACI1E,QAASyB,EACT1B,KAAM+H,W,gCCpF1B,+BAsBewB,IAlBf,YAAgD,IAA7BC,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAK9E,UAAU,UAAf,UACI,6BAAK6E,IACL,oBAAI7E,UAAU,qBAAd,SACK8E,EAAOjN,OAAS,GAAKiN,EAAO/L,KAAI,SAACkM,EAAMhM,GACpC,OAAGgM,EAAKD,KACG,qBAAIhF,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASkF,OAAK,EAACrE,GAAIoE,EAAKD,KAAxB,SAA+BC,EAAKF,OAApF,MAA6C9L,GAE7C,qBAAI+G,UAAU,0BAAd,cAAiD,+BAAOiF,EAAKF,OAA7D,MAA6C9L,a","file":"static/js/46.1809af1c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getAdminList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n","import React from 'react'\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// A great library for fuzzy filtering/sorting items\nimport {matchSorter} from 'match-sorter'\n\nexport function GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n      setGlobalFilter(value || undefined)\n    }, 200)\n  \n    return (\n      <span>\n        Search:{' '}\n        <input\n          value={value || \"\"}\n          onChange={e => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n          style={{\n            fontSize: '1.1rem',\n            border: '0',\n          }}\n        />\n      </span>\n    )\n  }\n  \n  // Define a default UI for filtering\n  export function DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n  }) {\n    const count = preFilteredRows.length\n  \n    return (\n      <input\n        value={filterValue || ''}\n        onChange={e => {\n          setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search...`}\n      />\n    )\n  }\n  \n  // This is a custom filter UI for selecting\n  // a unique option from a list\n  export function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set()\n      preFilteredRows.forEach(row => {\n        if(row.values[id] !== undefined && !options.has(row.values[id])) options.add(row.values[id])\n      })\n      return [...options.values()]\n    }, [id, preFilteredRows])\n  \n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined)\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    )\n  }\n\n  // This is a custom filter UI for selecting\n  // a unique option from a list\n  export function SelectArrayColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set()\n      preFilteredRows.forEach(row => {\n        console.log('ini row', row.values[id]);\n        console.log('ini tipe row', row.values[id] instanceof Array)\n        console.log('ini length row', row.values[id].length);\n        if(row.values[id] instanceof Array && row.values[id].length > 0) {\n          for(var i = 0; i< row.values[id].length; i++) {\n            var x = row.values[id][i]\n            if(x !== undefined && !options.has(x)) options.add(x)\n          }\n        }\n      })\n      return [...options.values()]\n    }, [id, preFilteredRows])\n  \n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined)\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    )\n  }\n  \n  // This is a custom filter UI that uses a\n  // slider to set the filter value between a column's\n  // min and max values\n  export function SliderColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the min and max\n    // using the preFilteredRows\n  \n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <>\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          value={filterValue || min}\n          onChange={e => {\n            setFilter(parseInt(e.target.value, 10))\n          }}\n        />\n        <button onClick={() => setFilter(undefined)}>Off</button>\n      </>\n    )\n  }\n  \n  // This is a custom UI for our 'between' or number range\n  // filter. It uses two number boxes and filters rows to\n  // ones that have values between the two\n  export function NumberRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id },\n  }) {\n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <input\n          value={filterValue[0] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n          }}\n          min={min}\n          placeholder={`Min (${min})`}\n          style={{\n            width: '70px',\n            marginRight: '0.5rem',\n          }}\n        />\n        to\n        <input\n          value={filterValue[1] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n          }}\n          min={min}\n          placeholder={`Max (${max})`}\n          style={{\n            width: '70px',\n            marginLeft: '0.5rem',\n          }}\n        />\n      </div>\n    )\n  }\n\n  export function DateRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id }}) \n  {\n    const [min, max] = React.useMemo(() => {\n        let min = new Date('2020-01-01')\n        let max = new Date('2099-12-31')\n        preFilteredRows.forEach(row => {\n            min = row.values[id] ? new Date(row.values[id]) <= min ? new Date(row.values[id]) : min : min\n            max = row.values[id] ? new Date(row.values[id]) >= max ? new Date(row.values[id]) : max : max\n        });\n        return [min, max];\n    }, [id, preFilteredRows]);\n    // console.log(min, max)\n    return (\n        <div\n            style={{\n                display: \"flex\"\n            }}\n        >\n            <input\n                value={filterValue[0] || min.toISOString().slice(0, 10)}\n                type=\"date\"\n                min={min.toISOString().slice(0, 10)}\n                max={filterValue[1] || max.toISOString().slice(0, 10)}\n                onChange={e => {\n                    const val = e.target.value;\n                    // console.log(e.target.value);\n                    setFilter((old = []) => [val ? (val) : undefined, old[1]]);\n                }}\n                style={{\n                    width: \"130px\",\n                    marginRight: \"0.2rem\"\n                }}\n            />\n            to\n      <input\n                value={filterValue[1] || max.toISOString().slice(0, 10)}\n                type=\"date\"\n                min={filterValue[0] || min.toISOString().slice(0, 10)}\n                max={max.toISOString().slice(0, 10)}\n                onChange={e => {\n                    const val = e.target.value;\n                    setFilter((old = []) => [old[0], val ? (val) : undefined]);\n                }}\n                style={{\n                    width: \"130px\",\n                    marginLeft: \"0.2rem\"\n                }}\n            />\n        </div>\n    );\n}\n\n  export function filterGreaterThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue >= filterValue\n    })\n  }\n\n  export function filterLessThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue <= filterValue\n    })\n  }\n  \n  export function fuzzyTextFilterFn(rows, id, filterValue) {\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n  }\n  \n  // Let the table remove the filter if the string is empty\n  fuzzyTextFilterFn.autoRemove = val => !val\n\n  export function dateBetweenFilterFn(rows, id, filterValues) {\n    let sd = new Date(filterValues[0]);\n    let ed = new Date(filterValues[1]);\n    // console.log(rows, id, filterValues)\n    return rows.filter(r => {\n        var time = new Date(r.values[id]);\n        // console.log(time, ed, sd)\n        if (filterValues.length === 0) return rows;\n        return (time >= sd && time <= ed);\n    });\n}\n\ndateBetweenFilterFn.autoRemove = val => !val;\n  ","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter, useFilters, useRowSelect } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\nimport { DefaultColumnFilter, fuzzyTextFilterFn, dateBetweenFilterFn } from './TableFilter'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nimport { FaFilePdf, FaTable, FaBell } from \"react-icons/fa\";\n\nfunction TableWithFilter({ DATA, COLUMNS, renderRowSubComponent, showCheckbox = false, notifContext = '' }) {\n    const filterTypes = React.useMemo(\n        () => ({\n          // Add a new fuzzyTextFilterFn filter type.\n          fuzzyText: fuzzyTextFilterFn,\n          dateBetween: dateBetweenFilterFn,\n          // Or, override the default text filter to use\n          // \"startWith\"\n          text: (rows, id, filterValue) => {\n            return rows.filter(row => {\n              const rowValue = row.values[id]\n              return rowValue !== undefined\n                ? String(rowValue)\n                    .toLowerCase()\n                    .startsWith(String(filterValue).toLowerCase())\n                : true\n            })\n          },\n        }),\n        []\n      )\n    \n      const defaultColumn = React.useMemo(\n        () => ({\n          // Let's set up our default Filter UI\n          Filter: DefaultColumnFilter,\n        }),\n        []\n      )\n\n      const IndeterminateCheckbox = React.forwardRef(\n        ({ indeterminate, ...rest }, ref) => {\n          const defaultRef = React.useRef()\n          const resolvedRef = ref || defaultRef\n      \n          React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n          }, [resolvedRef, indeterminate])\n      \n          return (\n            <>\n              <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n          )\n        }\n      )\n\n    const data = useMemo( () => DATA , [DATA]);\n\n    const initialState = { hiddenColumns: ['emailUser', 'parentEmail', '_id'] };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        selectedFlatRows,\n        state: { selectedRowIds },\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        defaultColumn, // Be sure to pass the defaultColumn option\n        filterTypes,\n        initialState\n    }, useFilters\n    , useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination\n    , useRowSelect\n    , hooks => {\n        if(showCheckbox) hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n      })\n\n    const { globalFilter } = state;\n\n    const downloadAsCSV = () => {\n        const currentRecords = rows;\n        // console.log(currentRecords);\n        var data_to_download = [];\n        for (var i = 0; i < currentRecords.length; i++) {\n            let record_to_download = {};\n            prepareRow(currentRecords[i]);\n            // console.log(currentRecords[i].cells);\n            for (var colIndex = 0; colIndex < currentRecords[i].cells.length; colIndex++) {\n                if(currentRecords[i].cells[colIndex].column.id !== 'rowNumber' &&\n                currentRecords[i].cells[colIndex].column.id !== 'selection' &&\n                currentRecords[i].cells[colIndex].column.id !== 'buttonStatus') {\n                    if(currentRecords[i].cells[colIndex].value && Object.prototype.toString.call(currentRecords[i].cells[colIndex].value) === \"[object Date]\" && !isNaN(currentRecords[i].cells[colIndex].value))\n                        record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                        currentRecords[i].cells[colIndex].value.toISOString().split('T')[0];\n                    else record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                        currentRecords[i].cells[colIndex].value;\n                }\n            }\n            data_to_download.push(record_to_download);\n        }\n        return data_to_download;\n    }\n\n    const downloadAsPDF = () => {\n        const dataRaw = downloadAsCSV();\n        if(dataRaw.length > 0) {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(15);\n\n            const title = \"Report\";\n            const headers = [Object.keys(dataRaw[0])];\n\n            const data = dataRaw.map(e => Object.values(e));\n\n            let content = {\n                startY: 50,\n                head: headers,\n                body: data\n            };\n\n            doc.text(title, marginLeft, 40);\n            doc.autoTable(content);\n            doc.save(\"report.pdf\");\n        }\n    }\n\n    return (\n        <>\n        <div className=\"tools\">\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n            <button className=\"btn_tools\"><FaTable/> <CSVLink data={downloadAsCSV()}>Download as CSV</CSVLink></button>\n            <button className=\"btn_tools\" onClick={downloadAsPDF}><FaFilePdf/> Download as PDF</button>\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    // console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = [];\n                    // console.log(selectedFlatRows);\n                    var jsonData = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        if(selectedFlatRows[i].original.userType === 'child') {\n                            if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        }\n                        // console.log(stringEmail);\n                        jsonData.push(selectedFlatRows[i].original);\n                    }\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\n                    // console.log(localStorage.getItem('jsonData'));\n                    localStorage.setItem('emailTo', stringEmail.toString());\n                    // console.log(localStorage.getItem('emailTo'));\n                    localStorage.setItem('selectedUserType', 'child');\n                }}>Send Notifications to Child</NavLink></button>\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to Child</span></button> : null}\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    // console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = [];\n                    // console.log(selectedFlatRows);\n                    var jsonData = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        if(selectedFlatRows[i].original.parentEmail !== undefined) {\n                            if(!stringEmail.some(r => selectedFlatRows[i].original.parentEmail.includes(r))) {\n                                if(selectedFlatRows[i].original.userType === 'child') stringEmail.push(...selectedFlatRows[i].original.parentEmail);\n                                else stringEmail.push(selectedFlatRows[i].original.emailUser);\n                            }\n                        }\n                        // console.log(stringEmail);\n                        jsonData.push(selectedFlatRows[i].original);\n                    }\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\n                    // console.log(localStorage.getItem('jsonData'));\n                    localStorage.setItem('emailTo', stringEmail.toString());\n                    // console.log(localStorage.getItem('emailTo'));\n                    localStorage.setItem('selectedUserType', 'parent');\n                }}>Send Notifications to Parent</NavLink></button>\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to Parent</span></button> : null}\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    // console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = [];\n                    // console.log(selectedFlatRows);\n                    var jsonData = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        if(selectedFlatRows[i].original.parentEmail !== undefined) {\n                            if(!stringEmail.some(r => selectedFlatRows[i].original.parentEmail.includes(r))) stringEmail.push(selectedFlatRows[i].original.parentEmail);\n                        }\n                        // console.log(stringEmail);\n                        jsonData.push(selectedFlatRows[i].original);\n                    }\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\n                    // console.log(localStorage.getItem('jsonData'));\n                    localStorage.setItem('emailTo', stringEmail.toString());\n                    // console.log(localStorage.getItem('emailTo'));\n                    localStorage.setItem('selectedUserType', 'all');\n                }}>Send Notifications to All</NavLink></button>\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to All</span></button> : null}\n        </div>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <>\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n                   <tr>\n                        {headerGroup.headers.map(column => (\n                            <th>{column.canFilter ? column.render('Filter') : null}</th>\n                        ))}\n                   </tr>\n                   </>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    // console.log(cell);\n                                    return <td {...cell.getCellProps()} className={(cell.value && !Array.isArray(cell.value)) || (Array.isArray(cell.value) && cell.value.length > 0) || cell.column.id === 'selection'\n                                    || cell.column.id === 'rowNumber' ? \"cell\" : \"cell\"}> {cell.column.id !== 'rowNumber' ? \n                                         cell.render('Cell')\n                                        : i + 1 + (pageIndex * pageSize)} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default TableWithFilter\n","//import { Link } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap'\nimport { SelectColumnFilter, SelectArrayColumnFilter } from './../../../../components/UI/Table/TableFilter'\n\n\nconst Columns = [\n    {\n        Header: 'No.',\n        id: 'rowNumber',\n        disableFilters: true\n    },\n    {\n        Header: 'Nama Artikel',\n        accessor: 'contentName',\n        disableFilters: true\n    },\n    {\n        Header: 'Jenis Artikel',\n        accessor: 'contentType',\n        Filter: SelectColumnFilter,\n        filter: 'equals'\n    },\n    {\n        Header: 'Topik Artikel',\n        accessor: 'topics',\n        Filter: SelectArrayColumnFilter,\n        filter: 'arrIncludes',\n        Cell: ({value, row}) => {\n            if(value !== undefined) return <p>{value.join(', ')}</p>\n            else {\n                if(row.index % 3 === 1) return <p>Pendidikan</p>\n                else return <p>Agama</p>\n            }\n        }\n    },\n    {\n        Header: 'Target Pembaca',\n        accessor: 'targetAudiance',\n        Filter: SelectArrayColumnFilter,\n        filter: 'arrIncludes',\n        Cell: ({value, row}) => {\n            if(value !== undefined) return <p>{value.join(', ')}</p>\n            else return <p>Semua</p>\n        }\n    },\n    {\n        Header: 'Jumlah View',\n        accessor: 'totalView',\n    },\n    {\n        Header: 'Jumlah Like',\n        accessor: 'respons.like',\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        Filter: SelectColumnFilter,\n        filter: 'equals'\n    },\n];\n\n// const Columns = [\n//     {\n//         name: 'No.',\n//         options: {\n//             filter: false,\n//             customBodyRender: (value, meta) => {\n//                 return (\n//                     meta.rowIndex + 1\n//                 );\n//             },\n//             setCellProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n//             setCellHeaderProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n//         }\n//     },\n//     {\n//         label: 'Nama Konten',\n//         name: 'contentName',\n//         options: {\n//             filter: false,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Jenis Konten',\n//         name: 'contentType',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Kategori Konten',\n//         name: 'contentPurpose',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Target Pembaca',\n//         name:'contentTarget',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Status',\n//         name: 'status',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     }\n// ];\n\nexport default Columns;","import React, { useState, useEffect, useCallback } from 'react';\nimport TablePengguna from '../../../../components/UI/Table/TableWithFilter';\nimport columns from './columns';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader.js';\nimport './ContentReport.scss';\nimport dummyData from './DummyData.json'\nimport { getContentList } from '../../../../components/API/filter.js'\nimport MUIDataTable from \"mui-datatables\";\n\nconst ContentReport = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [contentData, setContentData] = useState();\n    const [period, setPeriod] = useState('real');\n\n    const options = {\n        filterType: \"dropdown\",\n        selectableRows: false,\n        responsive: \"scroll\"\n    };\n\n    const userData = JSON.parse(localStorage.getItem('userData'));\n\n    useEffect(() => {\n        if(period === 'dummy') {\n            setContentData(dummyData);\n            setLoading(false);\n        }\n        else {let params={\n            whereKeyValues: {\n                cobrandEmail: userData.cobrandEmail,\n                programId: {\"$in\" : [\"-1\"]},\n                status: {\"$in\" : [\"active\", \"inactive\"]}\n            },\n            orderKeyValues: {\n                contentName: 1\n            },\n            includeContentData: false,\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        // console.log(params);\n        getContentList(params)\n        .then(response => {\n            // console.log(response.data);\n            setContentData(response.data.contents);\n            setLoading(false);\n        })\n        .catch(error => {\n            // console.log(error);\n            setLoading(false);\n        })}\n    }, [, period]);\n\n    if(isLoading) {\n        return <RKLoader />;\n    }\n    return (\n        <div className=\"Artikel\">\n            <Heading\n                headingName=\"Report Artikel\"\n                routes={[\n                    { name: 'Report'},\n                    { name: 'Report Artikel', path: '/report/content'}\n                ]}\n            />\n            <div className=\"Dashboard_period\">\n               <button className={period === 'real' ? \"Dashboard_period_option-active\" : \"Dashboard_period_option\"}\n                   onClick={() => {\n                       if(period !== 'real') {\n                           setLoading(true);\n                           setPeriod('real');\n                       }\n                   }}>Prod</button>\n               <button className={period === 'dummy' ? \"Dashboard_period_option-active\" : \"Dashboard_period_option\"}\n                   onClick={() => {\n                       if(period !== 'dummy') {\n                           setLoading(true);\n                           setPeriod('dummy');\n                       }\n                   }}>Dummy</button>\n           </div>\n            <div className=\"Artikel_table\">\n                <TablePengguna\n                    COLUMNS={columns}\n                    DATA={contentData}\n                />\n            </div>\n            {/* <MUIDataTable\n                data={contentData}\n                columns={columns}\n                options={options}\n            /> */}\n        </div>\n    )\n}\n\nexport default ContentReport;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}