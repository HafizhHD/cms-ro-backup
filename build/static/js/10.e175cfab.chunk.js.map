{"version":3,"sources":["components/UI/Heading/Heading.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","containers/CoBrand/Setting/Setting.js","components/UI/Input/Input.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js"],"names":["Heading","headingName","routes","className","length","map","item","i","path","exact","to","name","CardImg","React","ref","bsPrefix","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","connect","state","isLoading","auth","dispatch","onEditProfile","oldEmail","oldPassword","cobrandName","photo","phoneNumber","address","password","editProfile","userData","JSON","parse","localStorage","getItem","useState","photoRaw","setPhotoRaw","cover","setCover","add","setAdd","topic","setTopic","thumbnail","photoPreview","setPhotoPreview","useEffect","toBase64","then","result","catch","error","console","log","RKLoader","Button","onClick","initialValues","email","confirmPassword","validationSchema","validationFormEdit","validateOnChange","onSubmit","values","handleChange","handleBlur","handleSubmit","setFieldValue","touched","errors","Input","type","onChange","onBlur","isError","Boolean","message","disabled","placeholder","e","file","currentTarget","files","style","width","borderRadius","backgroundImage","src","textAlign","min","id","max","memo","_excluded","useButtonProps","tagName","href","target","rel","tabIndex","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","role","onKeyDown","key","_ref","asProp","source","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","size","active","PhoneRegex","validationFormLogin","yup","required","validationFormRegister","accountName","test","img","includes","matches","when","schema","validationProgram","programName","programDescription","programThumbnail","startDate","validationProgramEdit","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","programEdit","query","axios","method","url","data","headers","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","history","ALERT_CLOSE","programthumnail","response","push","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p","hasOwn","hasOwnProperty","classes","arguments","arg","argType","Array","isArray","inner","apply","toString","prototype","call","join","module","exports","default","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","Consumer","defaultPrefix","useContext","useIsRTL","dir"],"mappings":"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","file":"static/js/10.e175cfab.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React, { useState, useEffect } from 'react';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport InputComponent from '../../../components/UI/Input/Input';\nimport RKLoader from '../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { validationFormEdit } from './../../../helpers/validation/validation';\nimport { toBase64 } from '../../../helpers/fileHelper/fileHelper';\nimport { editProfile } from '../../../store/actions/dashboard';\nimport { Card, CardImg, Button, Modal } from 'react-bootstrap';\nimport './Setting.scss';\nimport { Redirect } from 'react-router-dom';\n// import { toBase64} from './helper'\n\nfunction Setting({\n    onEditProfile,\n    isLoading\n}) {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const [photoRaw, setPhotoRaw] = useState();\n    // const [coverRaw, setCoverRaw] = useState();\n    const [cover, setCover] = useState();\n    const [add, setAdd] = useState(false);\n    const [topic, setTopic] = useState(false);\n    const [photoPreview, setPhotoPreview] = useState(userData.thumbnail);\n\n    useEffect(() => {\n        if(photoRaw) {\n            let convertedPhoto = toBase64(photoRaw);\n            convertedPhoto.then((result) => {\n                setPhotoPreview(result);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        // } else if(coverRaw) {\n        //     let convertedPhoto = toBase64(coverRaw);\n        //     convertedPhoto.then((result) => {\n        //         setPhotoPreview(result);\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //     })\n        }\n    }, [photoRaw])\n\n    if(isLoading) {\n        return <RKLoader/>;\n    }\n    else if (add == true) {\n        return <Redirect to=\"/tools/setting-add\" />\n    }\n    else if (topic == true) {\n        return <Redirect to=\"/tools/setting-topik\" />\n    }\n    return (\n        <div className=\"Setting\">\n            <Heading \n                headingName=\"Setting\"\n                routes={[\n                    { name: 'Setting' }\n                ]}\n            />\n            <Button className='add' onClick={() => setAdd(true)}>Target Audience</Button>\n            <Button className='add' onClick={() => setTopic(true)}>Topic Content</Button>\n            <div className=\"Setting_card mt-medium\">\n                <div className=\"Setting_card_inputs\">\n                    <h2>Edit Account</h2>\n                    <Formik\n                        initialValues= {{\n                            email: userData.email,\n                            password: '',\n                            confirmPassword: '',\n                            cobrandName: userData.cobrandName,\n                            phoneNumber: userData.phoneNumber,\n                            address: userData.address,\n                            thumbnail: ''\n                        }}\n                        validationSchema = {validationFormEdit}\n                        validateOnChange = {true}\n                        onSubmit = {values => {\n                            onEditProfile(userData.email, userData.password, values.cobrandName, values.thumbnail, values.phoneNumber, values.address, values.password)\n                        }}\n                    >\n                    {({handleChange, handleBlur, handleSubmit, setFieldValue, touched, values, errors}) => (\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"Setting_card_inputs-item\">\n                                <div>\n                                    <label>Email</label>\n                                    <InputComponent\n                                        name=\"email\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                        isError={touched.email && Boolean(errors.email) }\n                                        message={touched.email && errors.email}\n                                        disabled={true}\n                                    />\n                                </div>\n                                <div>\n                                    <label>New Password</label>\n                                    <InputComponent\n                                        name=\"password\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.password}\n                                        onBlur={handleBlur}\n                                        isError={touched.password && Boolean(errors.password) }\n                                        message={touched.password && errors.password}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Confirm New Password</label>\n                                    <InputComponent\n                                        name=\"confirmPassword\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.confirmPassword}\n                                        onBlur={handleBlur}\n                                        disabled={!touched.password}\n                                        isError={touched.confirmPassword && Boolean(errors.confirmPassword) }\n                                        message={touched.confirmPassword && errors.confirmPassword}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"Setting_card_inputs-upload mt-large\">\n                                \n                                <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Photo</h2>\n                                    <InputComponent \n                                        placeholder=\"Photo\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div>\n                                <div className=\"Setting_card_inputs-avatar\">\n                                        <h2>Cover</h2>\n                                        <input type=\"file\"\n                                            onChange={(e) => {\n                                                console.log(e.currentTarget.files[0]);\n                                                const promise = toBase64(e.currentTarget.files[0]);\n                                                promise.then(result => {\n                                                    console.log(result)\n                                                    setCover(result);\n                                                })\n                                            }}\n                                            className=\"Input-control\"\n                                            onBlur={handleBlur}\n                                            isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                            message={touched.thumbnail && errors.thumbnail}\n                                        />\n                                </div>\n                                {/* <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Cover</h2>\n                                    <InputComponent \n                                        placeholder=\"Cover\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div> */}\n                            </div>\n\n                            <div className=\"Setting_card_inputs-item mt-large\">\n                                <div>\n                                    <label>Co-Brand Name</label>\n                                    <InputComponent\n                                        name=\"cobrandName\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.cobrandName}\n                                        onBlur={handleBlur}\n                                        isError={touched.cobrandName && Boolean(errors.cobrandName) }\n                                        message={touched.cobrandName && errors.cobrandName}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Phone Number</label>\n                                    <InputComponent\n                                        name=\"phoneNumber\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.phoneNumber}\n                                        onBlur={handleBlur}\n                                        isError={touched.phoneNumber && Boolean(errors.phoneNumber) }\n                                        message={touched.phoneNumber && errors.phoneNumber}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Address</label>\n                                    <InputComponent\n                                        name=\"address\"\n                                        className=\"Input-control\"\n                                        type=\"textarea\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={handleBlur}\n                                        isError={touched.address && Boolean(errors.address) }\n                                        message={touched.address && errors.address}\n                                    />\n                                </div>\n                                <button\n                                    className=\"btn btn-submit\"\n                                    type=\"submit\"\n                                >\n                                    Update Profile\n                                </button>\n                            </div>\n                        </form>\n                    )}\n\n                    </Formik>\n\n                </div>\n                <div className=\"Setting_card_preview\">\n                    <h5>Preview</h5>\n                    <Card style={{ width: '25rem', borderRadius: '1rem'}}>\n                        {/* <div style={{ backgroundImage: `url(${cover ? cover : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxJUwAEmCj5NP7JfKft5Qz8a3UUoE0RcKiAeNDAulvE-jDh5HzB3-FBb5pBSfmWpJw0J4&usqp=CAU\"})` }} class=\"circletag\" id=\"nay\"> */}\n                            {/* <img className=\"img2\" src=\"https://cdn1.vectorstock.com/i/1000x1000/06/70/beautiful-cute-bee-vector-15910670.jpg\" /> */}\n                        <div className=\"backgr\" style={{ backgroundImage: `url(${cover ? cover : \"https://defghi.co.id/wp-content/uploads/2021/07/Logo-IDE.png\"})` }} >\n                            <img className=\"img2\" src={photoPreview ? photoPreview : \"https://thumbs.dreamstime.com/b/default-avatar-profile-icon-vector-social-media-user-portrait-176256935.jpg\"} />\n                        </div>\n                        <Card.Body className=\"body-card\">\n                            <Card.Title style={{ textAlign: 'center' }}>Bimbel Defghi</Card.Title>\n                            <Card.Text>\n                                Some quick example text to build on the card title and make up the bulk of\n                                the card's content.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {/* <img src={photoPreview} className=\"Setting_card_preview_image\"/> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProfile: ( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ) => \n            dispatch(editProfile( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Setting)\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n    // return dispatch => {\n    //     dispatch(loadingStart());\n    //     dispatch({\n    //         type: ALERT_CLOSE\n    //     });\n\n    //     console.log('Photo is empty:', photo === '');\n    //     if (photo === '') {\n    //         if (contentType === 'Video') {\n    //             contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n    //         }\n    //         else if (contentType === 'Image') {\n    //             contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n    //         }\n    //         else if (contentType === 'Pdf') {\n    //             contents =\n    //                 '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n    //             console.log(contents)\n    //         }\n    //         else {\n    //             contents = '<!DOCTYPE html>'\n    //                 + '<html lang=\"en\">'\n    //                 + '<head>'\n    //                 + '<meta charset=\"utf-8\">'\n    //                 + '<style>'\n    //                 + '#contents {'\n    //                 + 'overflow-y: scroll;'\n    //                 + 'text-align: justify;'\n    //                 + 'white-space: pre-line;'\n    //                 + 'font-family: Arial, Helvetica, sans-serif;'\n    //                 + 'padding: 1%;'\n    //                 + '}'\n    //                 + '#contents li {'\n    //                 + 'margin-left: 5%;'\n    //                 + '}'\n    //                 + '</style>'\n    //                 + '</head>'\n    //                 + '<body>'\n    //                 + '<div id=\"contents\">'\n    //                 + contents\n    //                 + '</div>'\n    //                 + '</body>'\n    //                 + '</html>';\n    //         }\n\n    //         console.log(contents);\n    //         let data = {\n    //             whereValues: {\n    //                 cobrandEmail,\n    //                 _id\n    //             },\n    //             newValues: {\n    //                 programId,\n    //                 contentName,\n    //                 contentDescription,\n    //                 contentType,\n    //                 contentSource,\n    //                 contents,\n    //                 startDate\n    //             }\n    //         };\n\n    //         console.log(data);\n    //         //Call API ....\n\n    //         contentEdit(data)\n    //             .then(response => {\n    //                 console.log('Success:', response.data);\n    //                 history.push('/content');\n    //                 dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                 dispatch(loadingStop());\n    //             })\n    //             .catch((error) => {\n    //                 console.error('Error:', error);\n    //                 dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                 dispatch(loadingStop());\n    //             });\n    //         console.log(data);\n    //     }\n\n    //     else {\n    //         const promise = toBase64(photo);\n    //         promise.then((result) => {\n    //             console.log(typeof result);\n    //             const programthumnail = result;\n\n    //             let data = {\n    //                 whereValues: {\n    //                     cobrandEmail,\n    //                     _id\n    //                 },\n    //                 newValues: {\n    //                     programId,\n    //                     contentName,\n    //                     contentDescription,\n    //                     contentType,\n    //                     contentSource,\n    //                     contents,\n    //                     startDate\n    //                 }\n    //             };\n\n    //             console.log(data);\n    //             //Call API ....\n\n    //             contentEdit(data)\n    //                 .then(response => {\n    //                     console.log('Success:', response.data);\n    //                     history.push('/content');\n    //                     dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                     dispatch(loadingStop());\n    //                 })\n    //                 .catch((error) => {\n    //                     console.error('Error:', error);\n    //                     dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                     dispatch(loadingStop());\n    //                 });\n    //             console.log(data);\n    //         });\n    //     }\n    // }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    dir\n  }), [prefixes, breakpoints, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"],"sourceRoot":""}