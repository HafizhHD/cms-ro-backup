{"version":3,"sources":["containers/CoBrand/Setting/Setting.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js"],"names":["Setting","className","headingName","routes","name","type","placeholder","onChange","e","alert","value","console","log","Heading","length","map","item","i","path","exact","to","Input","message","isError","memo"],"mappings":"wJAAA,gDAqFeA,UAhFf,WACI,OACI,sBAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CACIC,YAAY,UACZC,OAAQ,CACJ,CAAEC,KAAM,cAGhB,sBAAKH,UAAU,yBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,yCAEA,sBAAKA,UAAU,2BAAf,UACI,gCACI,0CACA,cAAC,IAAD,CACIG,KAAK,QACLH,UAAU,gBACVI,KAAK,QACLC,YAAY,mBACZC,SAAU,SAAAC,GAAC,OAAIC,MAAMD,IACrBE,MAAM,uBAGd,gCACI,6CACA,cAAC,IAAD,CACIN,KAAK,WACLH,UAAU,gBACVI,KAAK,WACLC,YAAY,mBACZC,SAAU,SAAAC,GAAC,OAAIG,QAAQC,IAAIJ,IAC3BE,MAAM,0BAKlB,sBAAKT,UAAU,sCAAf,UAEI,sBAAKA,UAAU,6BAAf,UACI,wCACA,uBAAOI,KAAK,YAGhB,sBAAKJ,UAAU,4BAAf,UACI,uCACA,uBAAOI,KAAK,eAIpB,sBAAKJ,UAAU,oCAAf,UACI,gCACI,6CACA,cAAC,IAAD,CACIG,KAAK,WACLH,UAAU,gBACVI,KAAK,WACLC,YAAY,mBACZC,SAAU,SAAAC,GAAC,OAAIC,MAAMD,IACrBE,MAAM,gBAGd,gCACI,wCACA,0BAAUJ,YAAY,+BAOlC,qBAAKL,UAAU,uBAAf,SACI,yD,gCC9EpB,+BAsBeY,IAlBf,YAAgD,IAA7BX,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAKF,UAAU,UAAf,UACI,6BAAKC,IACL,oBAAID,UAAU,qBAAd,SACKE,EAAOW,OAAS,GAAKX,EAAOY,KAAI,SAACC,EAAMC,GACpC,OAAGD,EAAKE,KACG,qBAAIjB,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASkB,OAAK,EAACC,GAAIJ,EAAKE,KAAxB,SAA+BF,EAAKZ,OAApF,MAA6Ca,GAE7C,qBAAIhB,UAAU,0BAAd,cAAiD,+BAAOe,EAAKZ,OAA7D,MAA6Ca,a,qDCd5E,0BAGA,SAASI,EAAT,GASI,IARAf,EAQD,EARCA,YACAD,EAOD,EAPCA,KACAE,EAMD,EANCA,SACAG,EAKD,EALCA,MACAT,EAID,EAJCA,UACAqB,EAGD,EAHCA,QACAlB,EAED,EAFCA,KACAmB,EACD,EADCA,QAEA,OACA,qCACI,uBACInB,KAAMA,EACNH,UAAWA,EACXI,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVG,MAAOA,IAEVa,GACG,qBAAKtB,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCqB,SAOnCE,mBAAKH,I","file":"static/js/7.1d6b3ddd.chunk.js","sourcesContent":["import React from 'react';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport Input from '../../../components/UI/Input/Input';\nimport './Setting.scss';\n\nfunction Setting() {\n    return (\n        <div className=\"Setting\">\n            <Heading \n                headingName=\"Setting\"\n                routes={[\n                    { name: 'Setting' }\n                ]}\n            />\n            <div className=\"Setting_card mt-medium\">\n                <div className=\"Setting_card_inputs\">\n                    <h2>Account</h2>\n\n                    <div className=\"Setting_card_inputs-item\">\n                        <div>\n                            <label>Email</label>\n                            <Input \n                                name=\"email\"\n                                className=\"Input-control\"\n                                type=\"email\"\n                                placeholder=\"example@test.com\"\n                                onChange={e => alert(e)}\n                                value=\"anando@test.com\"\n                            />\n                        </div>\n                        <div>\n                            <label>Password</label>\n                            <Input \n                                name=\"password\"\n                                className=\"Input-control\"\n                                type=\"password\"\n                                placeholder=\"example@test.com\"\n                                onChange={e => console.log(e)}\n                                value=\"anando@test.com\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"Setting_card_inputs-upload mt-large\">\n                        \n                        <div className=\"Setting_card_inputs-avatar\">\n                            <h2>Avatar</h2>\n                            <input type=\"file\" />\n                        </div>\n\n                        <div className=\"Setting_card_inputs-cover\">\n                            <h2>Cover</h2>\n                            <input type=\"file\" />\n                        </div>\n                    </div>\n\n                    <div className=\"Setting_card_inputs-item mt-large\">\n                        <div>\n                            <label>Username</label>\n                            <Input \n                                name=\"username\"\n                                className=\"Input-control\"\n                                type=\"username\"\n                                placeholder=\"example@test.com\"\n                                onChange={e => alert(e)}\n                                value=\"username\"\n                            />\n                        </div>\n                        <div>\n                            <label>Bio</label>\n                            <textarea placeholder=\"Type Something...\">\n\n                            </textarea>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"Setting_card_preview\">\n                    <h1>Image Preview</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Setting\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    value,\n    className,\n    message,\n    name,\n    isError\n}) {\n    return (\n    <>\n        <input\n            name={name}\n            className={className} \n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            value={value}\n        />\n        {isError && (\n            <div className=\"message\">\n                <span className=\"message__error\">{message}</span>\n            </div>\n        )}\n    </>\n    )\n}\n\nexport default memo(Input) \n"],"sourceRoot":""}