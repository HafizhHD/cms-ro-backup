{"version":3,"sources":["containers/CoBrand/Program/EditProgram/EditProgram.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/webMainUtils.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onEditProgram","_id","cobrandEmail","programName","programDescription","programThumbnailEdit","startDate","history","editProgram","useState","isPageLoading","setPageLoading","program","setProgram","programStartDate","setProgramStartDate","useHistory","JSON","parse","localStorage","getItem","email","useEffect","params","whereKeyValues","axios","method","url","data","headers","then","response","programs","date","split","catch","error","headingName","routes","path","name","initialValues","ProgramDescription","validationSchema","validationProgramEdit","validateOnChange","onSubmit","values","handleChange","handleSubmit","setFieldValue","errors","className","type","placeholder","value","onChange","min","Date","toISOString","RKLoader","text","Heading","length","map","item","i","exact","to","Input","onBlur","message","isError","id","memo","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationProgram","programThumbnail","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","getEmbedUrl","finalUrl","videoId","encodeURIComponent","undefined","authStart","AUTH_START","authFailed","AUTH_FAILED","addProgram","photo","toBase64","result","programthumnail","push","whereValues","newValues","addContent","programId","contentType","status","editContent"],"mappings":"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","file":"static/js/10.f8cf5bc8.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editProgram } from '../../../../store/actions/webMainUtils';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgramEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nfunction EditProgram({\n    onEditProgram,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [program, setProgram] = useState();\n    const [programStartDate, setProgramStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('programSelected');\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if(_id) {\n            const params = {\n                whereKeyValues: {\n                    cobrandEmail: cobrandEmail,\n                    _id: _id\n                }\n            };\n\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setProgram(response.data.programs[0]);\n                console.log(\"This is \", program);\n                let date = response.data.programs[0].startDate.split('T')[0];\n                console.log(date);\n                setProgramStartDate(date);\n                setPageLoading(false);;\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n        }\n    }, []);\n\n    if(isPageLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/program', name: 'On Going Program' },\n                { path: '/program/edit', name: 'Edit Selected Program' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: program.programName,\n                    programDescription: program.ProgramDescription,\n                    startDate: programStartDate\n                }}\n                validationSchema = {validationProgramEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onEditProgram( _id, cobrandEmail, values.programName, values.programDescription, '', values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, setFieldValue, values, errors}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditProgram\">\n                        <h1>Edit Selected Program: {program.programName}</h1>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.programName}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.programDescription}</span>\n                        </div>\n                        {/*<div className=\"form-group\">\n                            <label>New Photo (Optional)</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnailEdit\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnailEdit\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.programThumbnailEdit}</span>\n                        </div>*/}\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                min={new Date().toISOString().split('T')[0]}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.startDate}</span>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Update Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProgram: ( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ) =>\n            dispatch(editProgram( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditProgram)","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Keluarga HKBP</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64 } from '../../helpers/fileHelper/fileHelper';\n\nfunction getEmbedUrl(url) {\n    // function for generating an embed link\n    let finalUrl = '';\n    let videoId = '';\n\n    if (url.includes('facebook.com/')) {\n        // Facebook Video\n        finalUrl = 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(url) + '&show_text=1&width=200';\n\n    } else if(url.includes('vimeo.com/')) {\n        // Vimeo video\n        videoId = typeof(url.split(\"vimeo.com/\")[1]) !== undefined ? url.split(\"vimeo.com/\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://player.vimeo.com/video/' + videoId;\n\n    } else if (url.includes('youtube.com/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"v=\")[1]) !== undefined ? url.split(\"v=\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' + videoId;\n\n    } else if(url.includes('youtu.be/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"youtu.be/\")[1]) !== undefined ? url.split(\"youtu.be/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' +  videoId;\n\n    } else if (url.includes('dailymotion.com/')) {\n        // Dailymotion Video\n        videoId = typeof(url.split(\"dailymotion.com/\")[1]) !== undefined ? url.split(\"dailymotion.com/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.dailymotion.com/embed/' + videoId;\n\n    } else{\n        finalUrl = url;\n    }\n\n    return finalUrl;\n}\n\nexport const authStart = () => ({ type: AUTH_START });\nexport const authFailed = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS })\n\nexport const addProgram = ( cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n                let data = {\n                    cobrandEmail,\n                    programName,\n                    ProgramDescription,\n                    programthumnail,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = ( _id, cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/program');\n                dispatch(authFailed());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(authFailed());\n            });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            });\n        }\n    }\n\n}\n\nexport const addContent = ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                                + '<head>'\n                                    + '<meta charset=\"utf-8\">'\n                                    + '<style>'\n                                        + '#contents {'\n                                            + 'overflow-y: scroll;'\n                                            + 'text-align: justify;'\n                                            + 'white-space: pre-line;'\n                                            + 'font-family: Arial, Helvetica, sans-serif;'\n                                            + 'padding: 1%;'\n                                        + '}'\n                                        + '#contents li {'\n                                            + 'margin-left: 5%;'\n                                        + '}'\n                                    + '</style>'\n                                + '</head>'\n                                + '<body>'\n                                    + '<div id=\"contents\">'\n                                        + contents\n                                    + '</div>'\n                                + '</body>'\n                            + '</html>';\n            }\n\n            console.log(contents);\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentAdd',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/content');\n                dispatch(authFailed());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(authFailed());\n            });\n            console.log(data);\n        });\n    }\n\n    \n\n}\n\nexport const editContent = ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                                + '<head>'\n                                    + '<meta charset=\"utf-8\">'\n                                    + '<style>'\n                                        + '#contents {'\n                                            + 'overflow-y: scroll;'\n                                            + 'text-align: justify;'\n                                            + 'white-space: pre-line;'\n                                            + 'font-family: Arial, Helvetica, sans-serif;'\n                                            + 'padding: 1%;'\n                                        + '}'\n                                        + '#contents li {'\n                                            + 'margin-left: 5%;'\n                                        + '}'\n                                    + '</style>'\n                                + '</head>'\n                                + '<body>'\n                                    + '<div id=\"contents\">'\n                                        + contents\n                                    + '</div>'\n                                + '</body>'\n                            + '</html>';\n            }\n\n            console.log(contents);\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contents,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/content');\n                dispatch(authFailed());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(authFailed());\n            });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            });\n        }\n    }\n\n    \n\n}"],"sourceRoot":""}