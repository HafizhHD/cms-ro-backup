{"version":3,"sources":["helpers/validation/validation.js","containers/CoBrand/User/ChildControl/ChildControl.js","../node_modules/suneditor/src/lang sync /^/.//.*/.js$","components/UI/Heading/Heading.js","components/UI/Input/Input.js"],"names":["PhoneRegex","validationFormLogin","yup","userName","required","password","validationFormRegister","email","accountName","cobrandName","thumbnail","test","img","includes","type","size","phoneNumber","matches","address","min","confirmPassword","when","schema","message","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","phone","validationCommunity","cobrandComunityName","partComunityName","validationGroupMitraAsuh","groupMitraAsuhName","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","connect","state","isLoading","auth","dispatch","onChildControl","userEmail","isModeAsuh","appLimitBlock","modeAsuh","deviceSchedule","history","childControl","useHistory","JSON","parse","localStorage","getItem","cobrandEmail","useState","isPageLoading","setPageLoading","appLimit","setAppLimit","setModeAsuh","setIsModeAsuh","isScheduleAdded","setScheduleAdded","useEffect","param","whereKeyValues","userAppList","getUserInstalledApps","deviceScheduleList","getDeviceScheduleList","appLimitList","getAppLimitList","modeAsuhList","getModeAsuhList","Promise","all","responseAll","console","log","appL","data","appdevices","length","appName","sort","a","b","lim","appUsageLimit","res","i","appM","appLim","id","j","appId","packageId","limit","_id","p","appCategory","mode","toString","isChanged","push","modeA","childModeAsuhs","modeAsuhName","deviceUsageSchedules","setTimeout","headingName","routes","path","name","initialValues","slice","modeAsuhSelected","onSubmit","values","handleChange","handleSubmit","setFieldValue","handleBlur","errors","touched","className","value","onChange","e","currentTarget","map","x","index","target","checked","max","disabled","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","Heading","item","exact","to","Input","placeholder","onBlur","isError","memo"],"mappings":"yJAAA,inBAEMA,EAAa,6FAGNC,EAAsBC,IAAW,CAC1CC,SAAUD,IAAW,oBAAoBE,SAAS,qBAClDC,SAAUH,IAAW,uBAAuBE,SAAS,0BAG5CE,EAAyBJ,IAAW,CAC7CK,MAAOL,IAAW,oBAAoBE,SAAS,qBAAqBG,MAAM,mBAC1EC,YAAaN,IAAW,mBAAmBE,SAAS,oBACpDK,YAAaP,IAAW,yBAAyBE,SAAS,0BAC1DM,UAAWR,IAAU,+BAA+BE,SAAS,qBACxDO,KACG,YAAa,0DACb,SAACC,GAAD,OACIA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIE,SAEpEH,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIG,MAAQ,WAOnCC,YAAad,IAAW,2BAA2BE,SAAS,4BAA4Ba,QAAQjB,EAAY,+BAC5GkB,QAAShB,IAAW,sBAAsBE,SAAS,uBACnDC,SAAUH,IAAW,uBAAuBE,SAAS,wBAAwBe,IAAI,EAAG,2CACpFC,gBAAiBlB,IAAW,yBAAyBE,SAAS,wBACzDiB,KAAK,YAAY,SAAChB,EAAUiB,GACzB,OAAOA,EAAOX,KAAK,CACfA,KAAM,SAAAS,GAAe,OAAIf,GAAYe,IAAoBf,GACzDkB,QAAS,gCAKZC,EAAqBtB,IAAW,CACzCK,MAAOL,IAAW,oBAAoBE,SAAS,qBAAqBG,MAAM,mBAC1EE,YAAaP,IAAW,yBAAyBE,SAAS,0BAC1DM,UAAWR,IAAU,+BAChBS,KACG,YAAa,0DACb,SAACC,GAAD,OACKA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIE,QAAYF,KAEjFD,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIG,MAAQ,WASnCC,YAAad,IAAW,2BAA2BE,SAAS,4BAA4Ba,QAAQjB,EAAY,+BAC5GkB,QAAShB,IAAW,sBAAsBE,SAAS,uBACnDC,SAAUH,IAAW,uBAAuBiB,IAAI,EAAG,2CACnDC,gBAAiBlB,IAAW,yBACvBmB,KAAK,YAAY,SAAChB,EAAUiB,GACzB,OAAOA,EAAOX,KAAK,CACfA,KAAM,SAAAS,GAAe,OAAKf,GAAYe,IAAoBf,IAAcA,GACxEkB,QAAS,gCAKZE,EAAoBvB,IAAW,CACxCwB,YAAaxB,IAAW,4BAA4BE,SAAS,6BAC7DuB,mBAAoBzB,IAAW,iCAAiCE,SAAS,mCACzEwB,iBAAkB1B,IAAU,+BAA+BE,SAAS,qBAC/DO,KACG,YAAa,0DACb,SAACC,GAAD,OACIA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIE,SAEpEH,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIG,MAAQ,WAOnCc,UAAW3B,IAAS,qBAAqBE,SAAS,oBAClD0B,QAAS5B,IAAS,mBAAmBE,SAAS,oBAC9C2B,SAAU7B,MACV8B,eAAgB9B,MAAYiB,IAAI,EAAG,mBACnCc,gBAAiB/B,MAAYiB,IAAI,GAAGe,GAChChC,IAAW,CACPiC,YAAajC,MAAaE,SAAS,4BACnCgC,YAAalC,MAAaE,SAAS,6BACnCiC,SAAUnC,MAAaE,SAAS,2BAChCyB,UAAW3B,IAAS,qBAAqBE,SAAS,oBAClD0B,QAAS5B,IAAS,mBAAmBE,SAAS,oBAC9CkC,UAAWpC,MAAamB,KAAK,WAAY,CACrCkB,GAAI,QACJC,KAAMtC,MAAaE,SAAS,6BAC5BqC,UAAWvC,aAMdwC,EAAwBxC,IAAW,CAC5CwB,YAAaxB,IAAW,4BAA4BE,SAAS,6BAC7DuB,mBAAoBzB,IAAW,iCAAiCE,SAAS,mCACzEyB,UAAW3B,IAAS,qBAAqBE,SAAS,sBAGzCuC,EAAqBzC,IAAW,CACzCiC,YAAajC,MAAaE,SAAS,4BACnCgC,YAAalC,MAAaE,SAAS,6BACnCiC,SAAUnC,MAAaE,SAAS,6BAGvBwC,EAAoB1C,IAAW,CACxCkC,YAAalC,IAAW,4BAA4BE,SAAS,6BAC7DyC,mBAAoB3C,IAAW,iCAC/BmC,SAAUnC,IAAW,iCAAiCE,SAAS,uBAC/D0C,cAAe5C,IAAW,4BAA4BE,SAAS,8BAC/D2C,iBAAkB7C,IAAU,+BAA+BE,SAAS,qBAC/DO,KACG,YAAa,0DACb,SAACC,GAAD,OACIA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIE,SAEpEH,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIG,MAAQ,WAOnCc,UAAW3B,IAAS,qBAAqBE,SAAS,oBAClD0B,QAAS5B,IAAS,mBAAmBE,SAAS,oBAC9C4C,SAAU9C,MACV+C,OAAQ/C,MAAYiB,IAAI,GACxB+B,eAAgBhD,MAAYiB,IAAI,KAGvBgC,EAAwBjD,IAAW,CAC5CkC,YAAalC,IAAW,4BAA4BE,SAAS,6BAC7DyC,mBAAoB3C,IAAW,iCAC/BmC,SAAUnC,IAAW,iCAAiCE,SAAS,uBAC/D0C,cAAe5C,IAAW,4BAA4BE,SAAS,8BAC/DyB,UAAW3B,IAAS,qBAAqBE,SAAS,sBAGzCgD,EAAqBlD,IAAW,CACzCmD,SAAUnD,IAAW,4BAA4BE,SAAS,yBAC1DkD,UAAWpD,IAAW,iCAAiCE,SAAS,qBAAqBG,MAAM,mBAC3FgD,SAAUrD,IAAS,qBAAqBE,SAAS,sBAGxCoD,EAAyBtD,IAAW,CAC7CuD,YAAavD,MAAYiB,IAAI,GAC7BuC,eAAgBxD,IAAW,6BAA6BE,SAAS,+BACjEuD,eAAgBzD,IAAW,6BAA6BE,SAAS,+BACjEwD,aAAc1D,IAAS,qBAAqBE,SAAS,oBACrDyD,UAAW3D,IAAW,wBAAwBE,SAAS,0BACvD2B,SAAU7B,IAAW,sBAAsBE,SAAS,0BAG3C0D,EAAqB5D,IAAW,CACzC6D,aAAc7D,IAAW,4BAA4BE,SAAS,+BAGrD4D,EAA0B9D,IAAW,CAC9C6B,SAAU7B,IAAW,uBAAuBE,SAAS,wBACrD6D,YAAa/D,IAAW,qBAAqBE,SAAS,6BAG7C8D,EAAyBhE,IAAW,CAC7C6B,SAAU7B,IAAW,uBAAuBE,SAAS,wBACrD6D,YAAa/D,IAAW,qBAAqBE,SAAS,6BAG7C+D,EAAkBjE,IAAW,CACtCoD,UAAWpD,IAAW,oBAAoBE,SAAS,qBAAqBG,MAAM,mBAC9EJ,SAAUD,IAAW,mBAAmBE,SAAS,oBAAoBa,QAlMvD,QAkM0E,2BACxFmD,MAAOlE,IAAW,2BAA2BE,SAAS,4BAA4Ba,QAAQjB,EAAY,+BACtGK,SAAUH,IAAW,uBAAuBE,SAAS,wBAAwBe,IAAI,EAAG,6CAG3EkD,EAAsBnE,IAAW,CAC1CoE,oBAAqBpE,IAAW,6BAA6BE,SAAS,8BACtEmE,iBAAkBrE,IAAW,+BAGpBsE,EAA2BtE,IAAW,CAC/CuE,mBAAoBvE,IAAW,yBAAyBE,SAAS,4BAGxDsE,EAAyBxE,IAAW,CAC7CyE,UAAWzE,IAAW,oBAAoBE,SAAS,4BAG1CwE,EAAuB1E,IAAW,CAC3C2E,qBAAsB3E,IAAW,uBAAuBE,SAAS,wBACjE0E,sBAAuB5E,MAAaE,SAAS,yB,yQCoRlC2E,uBAdS,SAAAC,GAEpB,MAAO,CACHC,UAAWD,EAAME,KAAKD,cAIH,SAACE,GACxB,MAAO,CACHC,eAAgB,SAAEC,EAAWC,EAAYC,EAAeC,EAAUC,EAAgBC,GAAlE,OACZP,EAASQ,YAAcN,EAAWC,EAAYC,EAAeC,EAAUC,EAAgBC,QAIpFX,EAldf,YAGI,IAFAK,EAED,EAFCA,eACAH,EACD,EADCA,UAGMS,EAAUE,cAGVzF,GAFe0F,KAAKC,MAAMC,aAAaC,QAAQ,aAAaC,aAEjDF,aAAaC,QAAQ,qBAChCX,EAAYU,aAAaC,QAAQ,gBAEvC,EAAwCE,oBAAS,GAAjD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,UAAzC,mBAAOV,EAAP,KAAiBe,EAAjB,KACA,EAAoCL,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBkB,EAAnB,KAEA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA0CR,mBAAS,GAAnD,mBAsGA,OAtGA,UAoCAS,qBAAU,WACN,IAAIC,EAAQ,CACRC,eAAgB,CACZvD,UAAW+B,IAGbyB,EAAcC,YAAqBH,GACnCI,EAAqBC,YAAsBL,GAC3CM,EAAeC,YAAgBP,GAC/BQ,EAAeC,YAAgBT,GAErCU,QAAQC,IAAI,CAACT,EAAaI,EAAcE,EAAcJ,IACrDxE,MAAK,SAAAgF,GAAgB,IAAD,IACjBC,QAAQC,IAAIF,EAAY,IACxBC,QAAQC,IAAIF,EAAY,IACxBC,QAAQC,IAAIF,EAAY,IACxBC,QAAQC,IAAIF,EAAY,IAGxB,IACIG,GADG,UAAGH,EAAY,GAAGI,KAAKC,kBAAvB,QAAqC,IAC7BC,OAAS,EAAIN,EAAY,GAAGI,KAAKC,WAAW,GAAGE,QAAU,GACxEJ,EAAKK,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEF,QAAUG,EAAEH,QAAW,EAAMG,EAAEH,QAAUE,EAAEF,SAAY,EAAI,KAGjF,IAFA,IAAII,EAAG,UAAGX,EAAY,GAAGI,KAAKQ,qBAAvB,QAAwC,GAC3CC,EAAM,GACFC,EAAI,EAAGA,EAAIX,EAAKG,OAAQQ,IAAK,CAIjC,IAHA,IAAIC,EAAO,EACPC,EAAS,EACTC,EAAK,GACDC,EAAI,EAAGA,EAAIP,EAAIL,QAAmB,IAATS,EAAYG,IACtCP,EAAIO,GAAGC,QAAUhB,EAAKW,GAAGM,YACDL,EAAH,IAAjBJ,EAAIO,GAAGG,MAAoB,EAClB,EACZL,EAASL,EAAIO,GAAGG,MAChBJ,EAAKN,EAAIO,GAAGI,KAGpB,IAAIC,EAAI,CACJD,IAAKL,EACLV,QAASJ,EAAKW,GAAGP,QACjBiB,YAAarB,EAAKW,GAAGU,YACrBJ,UAAWjB,EAAKW,GAAGM,UACnBK,KAAMV,EAAKW,WACXL,MAAOL,EACPW,WAAW,GAEfd,EAAIe,KAAKL,GAEbtB,QAAQC,IAAIW,GACZ/B,EAAY+B,GAGZ,IAAIgB,EAAQ7B,EAAY,GAAGI,KAAK0B,eAC7BD,EAAMvB,OAAS,IACdvB,EAAY8C,EAAM,GAAGE,cACrB/C,GAAc,IAIlBE,EAAiBc,EAAY,GAAGI,KAAK4B,sBACrCC,YAAW,WACPhC,QAAQC,IAAIrB,GACZD,GAAe,KAChB,UAER,IAEAnB,GAAakB,EACL,cAAC,IAAD,IAIP,qCACI,cAAC,IAAD,CAASuD,YAAa,iBAAmBvJ,EAAUwJ,OAAQ,CACvD,CAAEC,KAAM,YAAaC,KAAM,YAC3B,CAAED,KAAM,0BAA2BC,KAAM,mBAE7C,cAAC,IAAD,CACIC,cAAe,CACXvE,cAAec,EAAS0D,QACxBC,iBAAkBxE,EAClBC,eAAgBgB,EAAgBsD,SAIpCE,SAAU,SAAAC,GACN9E,EAAeC,EAAWC,EAAY4E,EAAO3E,cAAe2E,EAAOF,iBAAkBE,EAAOzE,eAAgBC,IATpH,SAaK,cAAGyE,aAAH,IAAiBC,EAAjB,EAAiBA,aAA0BC,GAA3C,EAA+BC,WAA/B,EAA2CD,eAAeH,EAA1D,EAA0DA,OAA1D,EAAkEK,OAAlE,EAA0EC,QAA1E,OACG,sBAAMP,SAAUG,EAAhB,SACI,sBAAKK,UAAU,eAAf,UACI,sBAAKA,UAAU,aAAf,UACI,8CACA,yBAAQC,MAAOR,EAAOF,iBAAkBW,SAAU,SAACC,GAC/CP,EAAc,mBAAoBO,EAAEC,cAAcH,QADtD,UAGI,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,2BAGR,sBAAKD,UAAU,aAAf,UACI,0EACA,kCACI,+BACI,+CACA,+CACA,6DAEHP,EAAO3E,cAAcuF,KAAI,SAACC,EAAGC,GAC1B,OAAQ,+BACJ,6BAAKD,EAAEhD,UACP,qBAAI4C,SAAU,SAACC,GACXnD,QAAQC,IAAIkD,GACZnD,QAAQC,IAAIwC,EAAO3E,cAAcyF,GAAO/B,MACxCoB,EAAc,iBAAD,OAAkBW,EAAlB,SAAgCJ,EAAEK,OAAOP,OACtDL,EAAc,iBAAD,OAAkBW,EAAlB,eAAqC,GAC5B,MAAnBJ,EAAEK,OAAOP,OAAeL,EAAc,iBAAD,OAAkBW,EAAlB,UAAiC,GACzEvD,QAAQC,IAAIwC,EAAO3E,cAAcyF,GAAO/B,OAN5C,UAQI,kCAAO,uBAAOnI,KAAK,QAAQ4J,MAAO,IAAKb,KAAM,gBAAkBmB,EAAM9B,WAAYgC,QAA8C,MAArChB,EAAO3E,cAAcyF,GAAO/B,OAAtH,QACA,kCAAO,uBAAOnI,KAAK,QAAQ4J,MAAO,IAAKb,KAAM,gBAAkBmB,EAAM9B,WAAYgC,QAA8C,MAArChB,EAAO3E,cAAcyF,GAAO/B,OAAtH,WACA,kCAAO,uBAAOnI,KAAK,QAAQ4J,MAAO,IAAKb,KAAM,gBAAkBmB,EAAM9B,WAAYgC,QAA8C,MAArChB,EAAO3E,cAAcyF,GAAO/B,OAAtH,+BAEJ,6BACI,cAAC,IAAD,CACIY,KAAK,QACLY,UAAU,oBACV3J,KAAK,SACL4J,MAAOR,EAAO3E,cAAcyF,GAAOnC,MACnC1H,IAAK,EACLgK,IAAK,KACLC,SAA+C,MAArClB,EAAO3E,cAAcyF,GAAO/B,KACtC0B,SAAU,SAACC,GACPP,EAAc,iBAAD,OAAkBW,EAAlB,UAAiCJ,EAAEK,OAAOP,wBAQnF,qBAAKD,UAAU,aAAf,SACI,wDAiPA,wBAAQA,UAAU,iBAAiB3J,KAAK,SAAxC,4BAQnBmE,EAAY,cAAC,IAAD,IAAc,Y,oBC1dvC,IAAI6F,EAAM,CACT,WAAY,IACZ,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,UAAW,IACX,UAAW,IACX,UAAW,IACX,aAAc,KAIf,SAASO,EAAeC,GACvB,IAAI7C,EAAK8C,EAAsBD,GAC/B,OAAOE,EAAoB/C,GAE5B,SAAS8C,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEX,EAAKQ,GAAM,CACpC,IAAIV,EAAI,IAAIc,MAAM,uBAAyBJ,EAAM,KAEjD,MADAV,EAAEe,KAAO,mBACHf,EAEP,OAAOE,EAAIQ,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKd,IAEpBO,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAe5C,GAAK,K,gCCzCpB,+BAsBewD,IAlBf,YAAgD,IAA7BvC,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAKc,UAAU,UAAf,UACI,6BAAKf,IACL,oBAAIe,UAAU,qBAAd,SACKd,EAAO7B,OAAS,GAAK6B,EAAOmB,KAAI,SAACoB,EAAM5D,GACpC,OAAG4D,EAAKtC,KACG,qBAAIa,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAAS0B,OAAK,EAACC,GAAIF,EAAKtC,KAAxB,SAA+BsC,EAAKrC,OAApF,MAA6CvB,GAE7C,qBAAImC,UAAU,0BAAd,cAAiD,+BAAOyB,EAAKrC,OAA7D,MAA6CvB,a,qDCd5E,2BAGA,SAAS+D,EAAT,GAaI,IAZAC,EAYD,EAZCA,YACAxL,EAWD,EAXCA,KACA6J,EAUD,EAVCA,SACA4B,EASD,EATCA,OACA7B,EAQD,EARCA,MACAD,EAOD,EAPCA,UACAlJ,EAMD,EANCA,QACAsI,EAKD,EALCA,KACA1I,EAID,EAJCA,IACAgK,EAGD,EAHCA,IACAC,EAED,EAFCA,SACAoB,EACD,EADCA,QAEA,MAAY,aAAT1L,EAEC,qCACI,0BACI+I,KAAMA,EACNpB,GAAIoB,EACJY,UAAWA,EACX6B,YAAaA,EACb3B,SAAUA,EACV4B,OAAQA,EACR7B,MAAOA,EACPU,SAAUA,IAEboB,GACG,qBAAK/B,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkClJ,SAMjC,SAATT,GAA4B,mBAATA,EAEnB,qCACI,uBACI+I,KAAMA,EACNY,UAAWA,EACX3J,KAAMA,EACNwL,YAAaA,EACb3B,SAAUA,EACV4B,OAAQA,EACR7B,MAAOA,EACPvJ,IAAKA,EACLgK,IAAK,aACLC,SAAUA,IAEboB,GACG,qBAAK/B,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkClJ,SAMrC,WAATT,EAEA,qCACI,uBACI+I,KAAMA,EACNY,UAAWA,EACX3J,KAAMA,EACN6J,SAAUA,EACV4B,OAAQA,EACR7B,MAAOA,EACPvJ,IAAKA,EACLgK,IAAKA,EACLC,SAAUA,IAEboB,GACG,qBAAK/B,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkClJ,SAOlD,qCACI,uBACIsI,KAAMA,EACNY,UAAWA,EACX3J,KAAMA,EACNwL,YAAaA,EACb3B,SAAUA,EACV4B,OAAQA,EACR7B,MAAOA,EACPU,SAAUA,IAEboB,GACG,qBAAK/B,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkClJ,SAOvCkL,mBAAKJ","file":"static/js/52.1942d143.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    userName: yup.string('Enter your email').required('Email is required'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationCommunity = yup.object({\n    cobrandComunityName: yup.string('Enter your community name').required('Community name is required'),\n    partComunityName: yup.string('Enter your community name')\n})\n\nexport const validationGroupMitraAsuh = yup.object({\n    groupMitraAsuhName: yup.string('Enter your group name').required('Group name is required'),\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './ChildControl.scss';\nimport './../../../../components/UI/Table/Table.scss'\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { getUserInstalledApps, getDeviceScheduleList, getAppLimitList, getModeAsuhList } from './../../../../components/API/filter'\nimport { childControl } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgram } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\nimport { getEmbedUrl } from '../../../../helpers/fileHelper/fileHelper'\n\nimport { ContentState, Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, convertFromRaw, current } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { stateToHTML } from 'draft-js-export-html'\n\nimport SunEditor, {buttonList} from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css';\n\nimport Select from 'react-select';\n\nfunction ChildControl({\n    onChildControl,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).cobrandEmail;\n\n    const userName = localStorage.getItem('userNameSelected');\n    const userEmail = localStorage.getItem('userSelected');\n\n    const [isPageLoading, setPageLoading] = useState(true);\n\n    const [appLimit, setAppLimit] = useState([]); // mode 0 for no block, 1 for block, 2 for limit\n    const [modeAsuh, setModeAsuh] = useState('normal')\n    const [isModeAsuh, setIsModeAsuh] = useState(false);\n\n    const [isScheduleAdded, setScheduleAdded] = useState([]);\n    const [scheduleCount, setScheduleCount] = useState(0);\n\n    // const [categoryList, setCategoryList] = useState([]);\n    // const [audience, setAudience] = useState([]);\n    // const [responseCount, setResponseCount] = useState(1);\n\n\n    const embedVideoCallBack = (link) =>{\n        \n        const asd = getEmbedUrl(link);\n        // console.log(\"Video embed \", asd);\n        return asd;\n    }\n\n    const uploadCallback = (file) => new Promise(\n        (resolve, reject) => {\n        const reader= new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            // console.log(reader.result);\n            resolve({data: {link: reader.result}});\n        }\n        reader.onerror = error => reject(error);\n        }\n    );\n\n    function compare( a, b ) {\n        if ( a.appName < b.appName ){\n          return -1;\n        }\n        if ( a.appName > b.appName ){\n          return 1;\n        }\n        return 0;\n      }\n\n    useEffect(() => {\n        let param = {\n            whereKeyValues: {\n                emailUser: userEmail\n            }\n        }\n        const userAppList = getUserInstalledApps(param);\n        const deviceScheduleList = getDeviceScheduleList(param);\n        const appLimitList = getAppLimitList(param);\n        const modeAsuhList = getModeAsuhList(param);\n\n        Promise.all([userAppList, appLimitList, modeAsuhList, deviceScheduleList])\n        .then(responseAll => {\n            console.log(responseAll[0]);\n            console.log(responseAll[1]);\n            console.log(responseAll[2]);\n            console.log(responseAll[3]);\n\n            //App Limit & Block\n            let apu = responseAll[0].data.appdevices ?? [];\n            let appL = apu.length > 0 ? responseAll[0].data.appdevices[0].appName : [];\n            appL.sort((a,b) => (a.appName > b.appName) ? 1 : ((b.appName > a.appName) ? -1 : 0));\n            let lim = responseAll[1].data.appUsageLimit ?? [];\n            var res = [];\n            for(var i = 0; i < appL.length; i++) {\n                var appM = 0;\n                var appLim = 0;\n                var id = '';\n                for(var j = 0; j < lim.length && appM === 0; j++) {\n                    if(lim[j].appId === appL[i].packageId) {\n                        if(lim[j].limit === 0) appM = 1;\n                        else appM = 2;\n                        appLim = lim[j].limit;\n                        id = lim[j]._id;\n                    }\n                }\n                let p = {\n                    _id: id,\n                    appName: appL[i].appName,\n                    appCategory: appL[i].appCategory,\n                    packageId: appL[i].packageId,\n                    mode: appM.toString(),\n                    limit: appLim,\n                    isChanged: false\n                }\n                res.push(p);\n            }\n            console.log(res);\n            setAppLimit(res);\n\n            //Mode Asuh\n            let modeA = responseAll[2].data.childModeAsuhs;\n            if(modeA.length > 0) {\n                setModeAsuh(modeA[0].modeAsuhName);\n                setIsModeAsuh(true);\n            }\n            \n            //Device Schedule\n            setScheduleAdded(responseAll[3].data.deviceUsageSchedules);\n            setTimeout(() => {\n                console.log(appLimit);\n                setPageLoading(false);\n            }, 2000);\n        })\n    }, [])\n\n    if(isLoading || isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName={'Kontrol Anak: ' + userName} routes={[\n                { path: '/cms/user', name: 'Pengguna' },\n                { path: '/cms/user/child-control', name: 'Kontrol Anak' }\n            ]} />\n            <Formik\n                initialValues={{ \n                    appLimitBlock: appLimit.slice(),\n                    modeAsuhSelected: modeAsuh,\n                    deviceSchedule: isScheduleAdded.slice()\n                }}\n                // validationSchema={validationStepEdit}\n                // validateOnChange={true}\n                onSubmit={values => {\n                    onChildControl(userEmail, isModeAsuh, values.appLimitBlock, values.modeAsuhSelected, values.deviceSchedule, history)\n                }}\n            >\n\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"ChildControl\">\n                            <div className=\"form-group\">\n                                <label>Mode Asuh</label>\n                                <select value={values.modeAsuhSelected} onChange={(e) => {\n                                    setFieldValue('modeAsuhSelected', e.currentTarget.value);\n                                }}>\n                                    <option value='normal'>Normal</option>\n                                    <option value='diawasi'>Diawasi</option>\n                                    <option value='dihukum'>Dihukum</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Blokir dan Batasi Penggunaan Aplikasi</label>\n                                <table>\n                                    <tr>\n                                        <th>Nama Aplikasi</th>\n                                        <th>Status Blokir</th>\n                                        <th>Limit Penggunaan (Menit)</th>\n                                    </tr>\n                                    {values.appLimitBlock.map((x, index) => {\n                                        return (<tr>\n                                            <td>{x.appName}</td>\n                                            <td onChange={(e) => {\n                                                console.log(e);\n                                                console.log(values.appLimitBlock[index].mode);\n                                                setFieldValue(`appLimitBlock.${index}.mode`, e.target.value);\n                                                setFieldValue(`appLimitBlock.${index}.isChanged`, true);\n                                                if(e.target.value === '2') setFieldValue(`appLimitBlock.${index}.limit`, 1);\n                                                console.log(values.appLimitBlock[index].mode);\n                                            }}>\n                                                <label><input type=\"radio\" value={'1'} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === '1'} />Ya</label>\n                                                <label><input type=\"radio\" value={'0'} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === '0'} />Tidak</label>\n                                                <label><input type=\"radio\" value={'2'} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === '2'} />Pakai Limit Penggunaan</label>\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"limit\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={values.appLimitBlock[index].limit}\n                                                    min={1}\n                                                    max={1440}\n                                                    disabled={values.appLimitBlock[index].mode !== '2'}\n                                                    onChange={(e) => {\n                                                        setFieldValue(`appLimitBlock.${index}.limit`, e.target.value);\n                                                    }}\n                                                />\n                                            </td>\n                                        </tr>)\n                                    })}\n                                </table>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Jadwal Penguncian</label>\n                                {/* <table>\n                                    <tr>\n                                        <th>Nama Aplikasi</th>\n                                        <th>Status Blokir</th>\n                                        <th>Durasi Pembatasan</th>\n                                    </tr>\n                                    {values.appLimitBlock.map((x, index) => {\n                                        return (<tr>\n                                            <td>{x.appName}</td>\n                                            <td onChange={(e) => {\n                                                console.log(e);\n                                                console.log(values.appLimitBlock[index].mode);\n                                                setFieldValue(`appLimitBlock.${index}.mode`, e.target.value);\n                                                setFieldValue(`appLimitBlock.${index}.isChanged`, true);\n                                                if(e.target.value === 2) setFieldValue(`appLimitBlock.${index}.limit`, 1);\n                                                console.log(values.appLimitBlock[index].mode);\n                                            }}>\n                                                <label><input type=\"radio\" value={1} na me={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 1} />Ya</label>\n                                                <label><input type=\"radio\" value={0} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 0} />Tidak</label>\n                                                <label><input type=\"radio\" value={2} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 2} />Pakai Limit Penggunaan</label>\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"limit\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={values.appLimitBlock[index].limit}\n                                                    min={1}\n                                                    disabled={values.appLimitBlock[index].mode !== 2}\n                                                    onChange={(e) => {\n                                                        setFieldValue(`appLimitBlock.${index}.limit`, e.target.value);\n                                                    }}\n                                                />\n                                            </td>\n                                        </tr>)\n                                    })}\n                                </table> */}\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>Isi Tahap</label>\n                                {values.contentType === \"Artikel\" || \"Ujian\" ? (\n                                    <SunEditor \n                                    setOptions={{\n                                        buttonList: editorButtonList,\n                                        imageWidth: '360px'\n                                    }}\n                                    onChange={(content) => {\n                                        setFieldValue('contents', content);\n                                    }}\n                                    height='500px'/>\n                                    // <Editor\n                                    //     editorState={artikel}\n                                    //     toolbarClassName=\"toolbarClassName\"\n                                    //     wrapperClassName=\"wrapperClassName\"\n                                    //     editorClassName=\"editorClassName\"\n                                    //     onEditorStateChange={(editorState) => setArtikel(editorState)}\n                                    //     // onEditorStateChange={updateTextDescription}\n                                    //     // value={description.values}\n                                    //     value={draftToHtml(convertToRaw(artikel.getCurrentContent()))}\n                                    //     // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                    //     name=\"contents\"\n                                    //     toolbar={{\n                                    //         list: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         textAlign: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         image: {\n                                    //             uploadEnabled: true,\n                                    //             alignmentEnabled: true,\n                                    //             previewImage: true,\n                                    //             uploadCallback: uploadCallback,\n                                    //             inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         },\n                                    //         embedded:{\n                                    //             embedCallback: embedVideoCallBack,\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         }\n                                    //     }}\n                                    //     onChange={() => {\n                                    //         // setTextValue(editorState);\n                                    //         // setFieldValue(\"contentDescription\", description);\n                                    //         setFieldValue('contents', draftToHtml(convertToRaw(artikel.getCurrentContent())));\n                                    //         // // console.log(textDeskripsi);\n                                    //         // // console.log(values.contents)\n                                    //     }}\n\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    // <img src={conFromImgVid}></img>\n\n                                    <InputComponent\n                                        type=\"file\"\n                                        className=\"form-group__input\"\n                                        name=\"contents\"\n                                        onBlur={handleBlur}\n                                        // value={values.contents}\n                                        // onChange={handleChange}\n                                        onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            // console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contents\", file);\n                                        }\n                                    }}\n                                    />\n\n                                    // <InputComponent\n                                    //     type=\"text\"\n                                    //     name=\"contents\"\n                                    //     className=\"form-group__input form-group__input--fullwidth\" \n                                    //     placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    //     value={values.contents}\n                                    //     onChange={handleChange}\n                                    //     onBlur={handleBlur}\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Video\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Pdf URL... (just for pdf file)\"\n                                        // placeholder={values.contents}\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    // untuk internal masih diupdate\n                                    //url ok\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            <div>\n                            {responseCount === 0 ? \n                            <div className=\"form-group\">\n                                <label>{\"Jumlah Respon/Jawaban di Setiap Tahap\"}</label>\n                                <InputComponent \n                                    type=\"number\"\n                                    className=\"form-group__input\"\n                                    value={resCount}\n                                    min={1}\n                                    max={100}\n                                    onChange={(e) => {\n                                        // console.log(e.currentTarget.value);\n                                        e.currentTarget.value = e.currentTarget.value.replace(/^0+/, '');\n                                        // console.log('After', e.currentTarget.value);\n                                        if(e.currentTarget.value) {\n                                            // console.log('Yes masuk');\n                                            if(resCount > e.currentTarget.value) {\n                                                var y = values.response;\n                                                if(values.response.length > 0 && values.answerKey === values.response[values.response.length-1] && localStorage.getItem('programCategory') === 'Ujian') setFieldValue('answerKey', values.response[0])\n                                                y.splice(e.currentTarget.value-resCount, resCount-e.currentTarget.value);\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            else {\n                                                // // console.log(\"Nambah loh\");\n                                                var y = values.response;\n                                                for(var j = 0; j < e.currentTarget.value-resCount; j++) {\n                                                    // console.log(\"Ini nambah?\");\n                                                    y.push('');\n                                                }\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            setResCount(e.currentTarget.value)\n                                        }\n                                        else {\n                                            setResCount(0);\n                                            setFieldValue('response', []);\n                                        }\n                                    }}\n                                    disabled={false}\n                                />\n                            </div> : null\n                            }\n                            <div className=\"form-group\">\n                                <label>Respon/Jawaban</label>\n                                {values.response.map((res, index) => {\n                                    // console.log(\"Content response:\", res)\n                                    return <InputComponent\n                                        type=\"text\"\n                                        name=\"response\"\n                                        className=\"form-group__input form-group__input--halfwidth\"\n                                        placeholder=\"Example\"\n                                        value={res}\n                                        onChange={(e) => {\n                                            var x = '';\n                                            for(var i = 0; i < e.currentTarget.value.length; i++) {\n                                                if(e.currentTarget.value.charAt(i) !== '.') x += e.currentTarget.value.charAt(i);\n                                                else x += '․';\n                                            }\n                                            setFieldValue(`response.${index}`, x);\n                                        }}\n                                        onBlur={handleBlur}\n                                    />\n                                })}\n                            </div>\n                            {localStorage.getItem('programCategory') === 'Ujian' ? (\n                                <div className=\"form-group\">\n                                    <label>Kunci Jawaban</label>\n                                    <select\n                                        name=\"answerKey\"\n                                        value={values.answerKey}\n                                        onChange={(e) => {\n                                            setFieldValue('answerKey', e.currentTarget.value)\n                                        }}\n                                    >\n                                        <option value='-1' disabled>{\" \"}</option>\n                                        {\n                                            values.response.map((category) => {\n                                                return (\n                                                    <option value={category}>{category}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            ) : null} */}\n                                <button className=\"btn btn-submit\" type=\"submit\">\n                                    Simpan\n                                </button>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {/* {console.log(isLoading)} */}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    // console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChildControl: ( userEmail, isModeAsuh, appLimitBlock, modeAsuh, deviceSchedule, history ) =>\n            dispatch(childControl( userEmail, isModeAsuh, appLimitBlock, modeAsuh, deviceSchedule, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ChildControl)\n","var map = {\n\t\"./ckb.js\": 190,\n\t\"./da.js\": 191,\n\t\"./de.js\": 192,\n\t\"./en.js\": 182,\n\t\"./es.js\": 193,\n\t\"./fr.js\": 194,\n\t\"./he.js\": 195,\n\t\"./index.js\": 232,\n\t\"./it.js\": 196,\n\t\"./ja.js\": 197,\n\t\"./ko.js\": 198,\n\t\"./lv.js\": 199,\n\t\"./nl.js\": 200,\n\t\"./pl.js\": 201,\n\t\"./pt_br.js\": 202,\n\t\"./ro.js\": 203,\n\t\"./ru.js\": 204,\n\t\"./se.js\": 205,\n\t\"./ua.js\": 206,\n\t\"./zh_cn.js\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n"],"sourceRoot":""}