{"version":3,"sources":["components/UI/Input/Input.js","containers/CoBrand/User/ChildControl/ChildControl.js","components/UI/Heading/Heading.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","connect","state","isLoading","auth","dispatch","onChildControl","userEmail","isModeAsuh","appLimitBlock","modeAsuh","deviceSchedule","setReload","setPageLoading","history","childControl","useHistory","userName","JSON","parse","localStorage","getItem","cobrandEmail","useState","isPageLoading","isReload","appLimit","setAppLimit","setModeAsuh","setIsModeAsuh","isScheduleAdded","setScheduleAdded","search","setSearch","useEffect","param","whereKeyValues","emailUser","userAppList","getUserInstalledApps","deviceScheduleList","getDeviceScheduleList","appLimitList","getAppLimitList","modeAsuhList","getModeAsuhList","Promise","all","then","responseAll","console","log","appL","data","appdevices","length","appName","sort","a","b","lim","appUsageLimit","res","i","appM","appLim","j","appId","packageId","limit","status","_id","p","appCategory","mode","toString","isChanged","push","modeA","childModeAsuhs","modeAsuhName","x","deviceUsageSchedules","scheduleType","setTimeout","headingName","routes","path","initialValues","slice","modeAsuhSelected","onSubmit","values","handleChange","handleSubmit","setFieldValue","handleBlur","errors","touched","e","currentTarget","map","index","toLowerCase","includes","target","checked","onClick","q","scheduleName","scheduleDescription","deviceUsageDays","deviceUsageStartTime","deviceUsageEndTime","willBeRemoved","Date","toLocaleDateString","y","indexArr","indexOf","splice","locale","format","disableClock","Heading","item","exact","to"],"mappings":"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","file":"static/js/67.882fe897.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './ChildControl.scss';\nimport './../../../../components/UI/Table/Table.scss'\nimport TimePicker from 'react-time-picker';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { getUserInstalledApps, getDeviceScheduleList, getAppLimitList, getModeAsuhList } from './../../../../components/API/filter'\nimport { childControl } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport { getEmbedUrl } from '../../../../helpers/fileHelper/fileHelper'\n\nfunction ChildControl({\n    onChildControl,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).cobrandEmail;\n\n    const userName = localStorage.getItem('userNameSelected');\n    const userEmail = localStorage.getItem('userSelected');\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [isReload, setReload] = useState(false);\n\n    const [appLimit, setAppLimit] = useState([]); // mode 0 for no block, 1 for block, 2 for limit\n    const [modeAsuh, setModeAsuh] = useState('normal')\n    const [isModeAsuh, setIsModeAsuh] = useState(false);\n\n    const [isScheduleAdded, setScheduleAdded] = useState([]);\n    const [scheduleCount, setScheduleCount] = useState(0);\n    const [search, setSearch] = useState('');\n\n    // const [categoryList, setCategoryList] = useState([]);\n    // const [audience, setAudience] = useState([]);\n    // const [responseCount, setResponseCount] = useState(1);\n\n\n    const embedVideoCallBack = (link) =>{\n        \n        const asd = getEmbedUrl(link);\n        // console.log(\"Video embed \", asd);\n        return asd;\n    }\n\n    const uploadCallback = (file) => new Promise(\n        (resolve, reject) => {\n        const reader= new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            // console.log(reader.result);\n            resolve({data: {link: reader.result}});\n        }\n        reader.onerror = error => reject(error);\n        }\n    );\n\n    function compare( a, b ) {\n        if ( a.appName < b.appName ){\n          return -1;\n        }\n        if ( a.appName > b.appName ){\n          return 1;\n        }\n        return 0;\n      }\n\n    useEffect(() => {\n        let param = {\n            whereKeyValues: {\n                emailUser: userEmail\n            }\n        }\n        const userAppList = getUserInstalledApps(param);\n        const deviceScheduleList = getDeviceScheduleList(param);\n        const appLimitList = getAppLimitList(param);\n        const modeAsuhList = getModeAsuhList(param);\n\n        Promise.all([userAppList, appLimitList, modeAsuhList, deviceScheduleList])\n        .then(responseAll => {\n            console.log(responseAll[0]);\n            console.log(responseAll[1]);\n            console.log(responseAll[2]);\n            console.log(responseAll[3]);\n\n            //App Limit & Block\n            let apu = responseAll[0].data.appdevices ?? [];\n            let appL = apu.length > 0 ? responseAll[0].data.appdevices[0].appName : [];\n            appL.sort((a,b) => (a.appName > b.appName) ? 1 : ((b.appName > a.appName) ? -1 : 0));\n            let lim = responseAll[1].data.appUsageLimit ?? [];\n            var res = [];\n            for(var i = 0; i < appL.length; i++) {\n                var appM = 0;\n                var appLim = 0;\n                var id = '';\n                for(var j = 0; j < lim.length && appM === 0; j++) {\n                    if(lim[j].appId === appL[i].packageId) {\n                        if(lim[j].limit === 0 && lim[j].status === \"blacklist\") appM = 1;\n                        else if(lim[j].status === \"Aktif\") appM = 2;\n                        appLim = lim[j].limit;\n                        id = lim[j]._id;\n                    }\n                }\n                let p = {\n                    _id: id,\n                    appName: appL[i].appName,\n                    appCategory: appL[i].appCategory,\n                    packageId: appL[i].packageId,\n                    mode: appM.toString(),\n                    limit: appLim,\n                    isChanged: false\n                }\n                res.push(p);\n            }\n            console.log(res);\n            setAppLimit(res);\n\n            //Mode Asuh\n            let modeA = responseAll[2].data.childModeAsuhs;\n            if(modeA.length > 0) {\n                setModeAsuh(modeA[0].modeAsuhName);\n                setIsModeAsuh(true);\n            }\n            \n            //Device Schedule\n            let x = responseAll[3].data.deviceUsageSchedules;\n            let p = [];\n            for(var i = 0; i < x.length; i++) {\n                if(x[i].scheduleType === 'harian') p.push(x[i]);\n            }\n            console.log(p);\n            setScheduleAdded(p);\n            setTimeout(() => {\n                console.log(appLimit);\n                setPageLoading(false);\n                setPageLoading(true);\n                setPageLoading(false);\n            }, 2000);\n        })\n    }, [isReload])\n\n    if(isLoading || isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName={'Kontrol Anak: ' + userName} routes={[\n                { path: '/cms/user', name: 'Pengguna' },\n                { path: '/cms/user/child-control', name: 'Kontrol Anak' }\n            ]} />\n            <Formik\n                initialValues={{ \n                    appLimitBlock: appLimit.slice(),\n                    modeAsuhSelected: modeAsuh,\n                    deviceSchedule: isScheduleAdded.slice()\n                }}\n                // validationSchema={validationStepEdit}\n                // validateOnChange={true}\n                onSubmit={values => {\n                    onChildControl(userEmail, isModeAsuh, values.appLimitBlock, values.modeAsuhSelected, values.deviceSchedule, setReload, setPageLoading, history)\n                }}\n            >\n\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"ChildControl\">\n                            <div className=\"form-group\">\n                                <label>Mode Asuh</label>\n                                <select value={values.modeAsuhSelected} onChange={(e) => {\n                                    setFieldValue('modeAsuhSelected', e.currentTarget.value);\n                                    setModeAsuh(e.currentTarget.value);\n                                }}>\n                                    <option value='normal'>Normal</option>\n                                    <option value='diawasi'>Diawasi</option>\n                                    <option value='dihukum'>Dihukum</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Blokir dan Batasi Penggunaan Aplikasi</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"table_props_input\"\n                                    placeholder=\"Search\"\n                                    value={search}\n                                    onChange={(e) => {\n                                        setSearch(e.currentTarget.value);\n                                    }}\n                                />\n                                <table>\n                                    <tr>\n                                        <th>Nama Aplikasi</th>\n                                        <th>Status Blokir</th>\n                                        <th>Limit Penggunaan (Menit)</th>\n                                    </tr>\n                                    {values.appLimitBlock.map((x, index) => {\n                                        if(x.appName.toLowerCase().includes(search.toLowerCase())) return (<tr>\n                                            <td>{x.appName}</td>\n                                            <td onChange={(e) => {\n                                                console.log(e);\n                                                console.log(values.appLimitBlock[index].mode);\n                                                setFieldValue(`appLimitBlock.${index}.mode`, e.target.value);\n                                                setFieldValue(`appLimitBlock.${index}.isChanged`, true);\n                                                if(e.target.value === '2') setFieldValue(`appLimitBlock.${index}.limit`, 1);\n                                                console.log(values.appLimitBlock[index].mode);\n                                            }}>\n                                                <label><input type=\"radio\" value={'1'} name={'block_status_' + index.toString()}\n                                                    checked={values.appLimitBlock[index].mode === '1' || modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game'))}\n                                                    disabled={modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game'))} />Ya</label>\n                                                <label><input type=\"radio\" value={'0'} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === '0' && !(modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game')))}\n                                                    disabled={modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game'))} />Tidak</label>\n                                                <label><input type=\"radio\" value={'2'} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === '2' && !(modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game')))}\n                                                    disabled={modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game'))} />Pakai Limit Penggunaan</label>\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"limit\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={values.appLimitBlock[index].limit}\n                                                    min={1}\n                                                    max={1440}\n                                                    disabled={values.appLimitBlock[index].mode !== '2' || modeAsuh === 'dihukum' || (modeAsuh === 'diawasi' && (values.appLimitBlock[index].appCategory === 'social' || values.appLimitBlock[index].appCategory === 'game'))}\n                                                    onChange={(e) => {\n                                                        setFieldValue(`appLimitBlock.${index}.isChanged`, true);\n                                                        setFieldValue(`appLimitBlock.${index}.limit`, e.target.value);\n                                                    }}\n                                                />\n                                            </td>\n                                        </tr>)\n                                    })}\n                                </table>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Jadwal Pemblokiran <span><button type=\"button\" onClick={() => {\n                                    let p = {\n                                        _id: '',\n                                        scheduleName: '',\n                                        scheduleDescription: '',\n                                        scheduleType: 'harian',\n                                        deviceUsageDays: [],\n                                        deviceUsageStartTime: '00:00',\n                                        deviceUsageEndTime: '00:01',\n                                        status: 'aktif',\n                                        willBeRemoved: false\n                                    }\n                                    let q = values.deviceSchedule;\n                                    q.push(p);\n                                    setFieldValue('deviceSchedule', q);\n                                }}>Tambah Jadwal</button></span></label>\n                                <table>\n                                    <tr>\n                                        <th>Nama Jadwal</th>\n                                        <th>Deskripsi</th>\n                                        <th>Harian/Terjadwal</th>\n                                        <th>Hari</th>\n                                        <th>Waktu Mulai</th>\n                                        <th>Waktu Selesai</th>\n                                        <th>Action</th>\n                                    </tr>\n                                    {values.deviceSchedule.map((x, index) => {\n                                        console.log(x)\n                                        if(!x.willBeRemoved) return (<tr>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"scheduleName\"\n                                                    className=\"form-group__input\"\n                                                    value={x.scheduleName}\n                                                    type=\"text\"\n                                                    onChange={(e) => {\n                                                        setFieldValue(`deviceSchedule.${index}.scheduleName`, e.target.value);\n                                                    }}\n                                                />\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"scheduleDescription\"\n                                                    className=\"form-group__input\"\n                                                    value={x.scheduleDescription}\n                                                    type=\"text\"\n                                                    onChange={(e) => {\n                                                        setFieldValue(`deviceSchedule.${index}.scheduleDescription`, e.target.value);\n                                                    }}\n                                                />\n                                            </td>\n                                            <td>\n                                                <select onChange={(e) => {\n                                                    if(e.target.value === 'harian') {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageStartTime`, '00:00');\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, '00:01');\n                                                    }\n                                                    else {\n                                                        console.log(new Date().toLocaleDateString('id-ID'));\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageStartTime`, new Date().toLocaleDateString('id-ID'));\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, new Date().toLocaleDateString('id-ID'));\n                                                    }\n                                                    setFieldValue(`deviceSchedule.${index}.scheduleType`, e.target.value);\n                                                }}>\n                                                    <option value=\"harian\">Harian</option>\n                                                </select>\n                                            </td>\n                                            <td>\n                                                {['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'].map((y) => {\n                                                    return <label><input type=\"checkbox\" name={y} value={y}\n                                                        checked={x.deviceUsageDays.includes(y)}\n                                                        onChange={(e) => {\n                                                            var p = x.deviceUsageDays;\n                                                            let indexArr = p.indexOf(e.target.value);\n                                                            if(indexArr >= 0) {\n                                                                p.splice(indexArr, 1);\n                                                            }\n                                                            else {\n                                                                p.push(e.target.value);\n                                                            }\n                                                            setFieldValue(`deviceSchedule.${index}.deviceUsageDays`, p);\n                                                        }}\n                                                    />{y}</label>\n                                                })}\n                                            </td>\n                                            <td>\n                                                <TimePicker\n                                                    locale=\"id-ID\"\n                                                    format=\"HH:mm\"\n                                                    disableClock={true}\n                                                    value={x.deviceUsageStartTime}\n                                                    onChange={(value) => {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageStartTime`, value);\n                                                    }}\n                                                />\n                                            </td>\n                                            <td>\n                                                <TimePicker\n                                                    locale=\"id-ID\"\n                                                    format=\"HH:mm\"\n                                                    disableClock={true}\n                                                    value={x.deviceUsageEndTime}\n                                                    onChange={(value) => {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, value);\n                                                    }}\n                                                />\n                                            {/* {x.scheduleType === 'harian' ? <span>\n                                                <InputComponent\n                                                    name=\"endHour\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={parseInt(x.deviceUsageEndTime.split(':')[0])}\n                                                    min={0}\n                                                    max={23}\n                                                    onChange={(e) => {\n                                                        var h = e.target.value.toString();\n                                                        var m = x.deviceUsageEndTime.split(':')[1]\n                                                        if(h.length < 2) m = '0' + h;\n                                                        var str = h + \":\" + m;\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, str);\n                                                    }}\n                                                /> : <InputComponent\n                                                    name=\"endMinute\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={parseInt(x.deviceUsageEndTime.split(':')[0])}\n                                                    min={0}\n                                                    max={59}\n                                                    onChange={(e) => {\n                                                        var h = x.deviceUsageEndTime.split(':')[0];\n                                                        var m = e.target.value.toString();\n                                                        if(m.length < 2) m = '0' + m;\n                                                        var str = h + \":\" + m;\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, str);\n                                                    }}\n                                                />\n                                                </span>\n                                                :\n                                                <DatePicker\n                                                    selected={new Date(x.deviceUsageEndTime)}\n                                                    onChange={(date) => {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, date.toLocaleDateString(\"id-ID\"));\n                                                    }}\n                                                />\n                                                } */}\n                                            </td>\n                                            <td>\n                                                <button type=\"submit\" onClick={() => {\n                                                    setFieldValue(`deviceSchedule.${index}.willBeRemoved`, true);\n                                                }}>\n                                                    Hapus\n                                                </button>\n                                            </td>\n                                            {/* <td onChange={(e) => {\n                                                console.log(e);\n                                                console.log(values.appLimitBlock[index].mode);\n                                                setFieldValue(`appLimitBlock.${index}.mode`, e.target.value);\n                                                setFieldValue(`appLimitBlock.${index}.isChanged`, true);\n                                                if(e.target.value === 2) setFieldValue(`appLimitBlock.${index}.limit`, 1);\n                                                console.log(values.appLimitBlock[index].mode);\n                                            }}>\n                                                <label><input type=\"radio\" value={1} na me={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 1} />Ya</label>\n                                                <label><input type=\"radio\" value={0} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 0} />Tidak</label>\n                                                <label><input type=\"radio\" value={2} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 2} />Pakai Limit Penggunaan</label>\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"limit\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={values.appLimitBlock[index].limit}\n                                                    min={1}\n                                                    disabled={values.appLimitBlock[index].mode !== 2}\n                                                    onChange={(e) => {\n                                                        setFieldValue(`appLimitBlock.${index}.limit`, e.target.value);\n                                                    }}\n                                                />\n                                            </td> */}\n                                        </tr>)\n                                    })}\n                                </table>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>Isi Tahap</label>\n                                {values.contentType === \"Artikel\" || \"Ujian\" ? (\n                                    <SunEditor \n                                    setOptions={{\n                                        buttonList: editorButtonList,\n                                        imageWidth: '360px'\n                                    }}\n                                    onChange={(content) => {\n                                        setFieldValue('contents', content);\n                                    }}\n                                    height='500px'/>\n                                    // <Editor\n                                    //     editorState={artikel}\n                                    //     toolbarClassName=\"toolbarClassName\"\n                                    //     wrapperClassName=\"wrapperClassName\"\n                                    //     editorClassName=\"editorClassName\"\n                                    //     onEditorStateChange={(editorState) => setArtikel(editorState)}\n                                    //     // onEditorStateChange={updateTextDescription}\n                                    //     // value={description.values}\n                                    //     value={draftToHtml(convertToRaw(artikel.getCurrentContent()))}\n                                    //     // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                    //     name=\"contents\"\n                                    //     toolbar={{\n                                    //         list: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         textAlign: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         image: {\n                                    //             uploadEnabled: true,\n                                    //             alignmentEnabled: true,\n                                    //             previewImage: true,\n                                    //             uploadCallback: uploadCallback,\n                                    //             inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         },\n                                    //         embedded:{\n                                    //             embedCallback: embedVideoCallBack,\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         }\n                                    //     }}\n                                    //     onChange={() => {\n                                    //         // setTextValue(editorState);\n                                    //         // setFieldValue(\"contentDescription\", description);\n                                    //         setFieldValue('contents', draftToHtml(convertToRaw(artikel.getCurrentContent())));\n                                    //         // // console.log(textDeskripsi);\n                                    //         // // console.log(values.contents)\n                                    //     }}\n\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    // <img src={conFromImgVid}></img>\n\n                                    <InputComponent\n                                        type=\"file\"\n                                        className=\"form-group__input\"\n                                        name=\"contents\"\n                                        onBlur={handleBlur}\n                                        // value={values.contents}\n                                        // onChange={handleChange}\n                                        onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            // console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contents\", file);\n                                        }\n                                    }}\n                                    />\n\n                                    // <InputComponent\n                                    //     type=\"text\"\n                                    //     name=\"contents\"\n                                    //     className=\"form-group__input form-group__input--fullwidth\" \n                                    //     placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    //     value={values.contents}\n                                    //     onChange={handleChange}\n                                    //     onBlur={handleBlur}\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Video\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Pdf URL... (just for pdf file)\"\n                                        // placeholder={values.contents}\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    // untuk internal masih diupdate\n                                    //url ok\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            <div>\n                            {responseCount === 0 ? \n                            <div className=\"form-group\">\n                                <label>{\"Jumlah Respon/Jawaban di Setiap Tahap\"}</label>\n                                <InputComponent \n                                    type=\"number\"\n                                    className=\"form-group__input\"\n                                    value={resCount}\n                                    min={1}\n                                    max={100}\n                                    onChange={(e) => {\n                                        // console.log(e.currentTarget.value);\n                                        e.currentTarget.value = e.currentTarget.value.replace(/^0+/, '');\n                                        // console.log('After', e.currentTarget.value);\n                                        if(e.currentTarget.value) {\n                                            // console.log('Yes masuk');\n                                            if(resCount > e.currentTarget.value) {\n                                                var y = values.response;\n                                                if(values.response.length > 0 && values.answerKey === values.response[values.response.length-1] && localStorage.getItem('programCategory') === 'Ujian') setFieldValue('answerKey', values.response[0])\n                                                y.splice(e.currentTarget.value-resCount, resCount-e.currentTarget.value);\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            else {\n                                                // // console.log(\"Nambah loh\");\n                                                var y = values.response;\n                                                for(var j = 0; j < e.currentTarget.value-resCount; j++) {\n                                                    // console.log(\"Ini nambah?\");\n                                                    y.push('');\n                                                }\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            setResCount(e.currentTarget.value)\n                                        }\n                                        else {\n                                            setResCount(0);\n                                            setFieldValue('response', []);\n                                        }\n                                    }}\n                                    disabled={false}\n                                />\n                            </div> : null\n                            }\n                            <div className=\"form-group\">\n                                <label>Respon/Jawaban</label>\n                                {values.response.map((res, index) => {\n                                    // console.log(\"Content response:\", res)\n                                    return <InputComponent\n                                        type=\"text\"\n                                        name=\"response\"\n                                        className=\"form-group__input form-group__input--halfwidth\"\n                                        placeholder=\"Example\"\n                                        value={res}\n                                        onChange={(e) => {\n                                            var x = '';\n                                            for(var i = 0; i < e.currentTarget.value.length; i++) {\n                                                if(e.currentTarget.value.charAt(i) !== '.') x += e.currentTarget.value.charAt(i);\n                                                else x += '․';\n                                            }\n                                            setFieldValue(`response.${index}`, x);\n                                        }}\n                                        onBlur={handleBlur}\n                                    />\n                                })}\n                            </div>\n                            {localStorage.getItem('programCategory') === 'Ujian' ? (\n                                <div className=\"form-group\">\n                                    <label>Kunci Jawaban</label>\n                                    <select\n                                        name=\"answerKey\"\n                                        value={values.answerKey}\n                                        onChange={(e) => {\n                                            setFieldValue('answerKey', e.currentTarget.value)\n                                        }}\n                                    >\n                                        <option value='-1' disabled>{\" \"}</option>\n                                        {\n                                            values.response.map((category) => {\n                                                return (\n                                                    <option value={category}>{category}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            ) : null} */}\n                                <button className=\"btn btn-submit\" type=\"submit\">\n                                    Simpan\n                                </button>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {/* {console.log(isLoading)} */}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    // console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChildControl: ( userEmail, isModeAsuh, appLimitBlock, modeAsuh, deviceSchedule, setReload, setPageLoading, history ) =>\n            dispatch(childControl( userEmail, isModeAsuh, appLimitBlock, modeAsuh, deviceSchedule, setReload, setPageLoading, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ChildControl)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}