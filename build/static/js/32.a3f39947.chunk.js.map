{"version":3,"sources":["components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/dashboard.js","containers/CoBrand/Program/AddProgram/AddProgram.js","components/API/dashboard.js","../node_modules/suneditor/src/lang sync /^/.//.*/.js$","components/UI/Heading/Heading.js","components/API/filter.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","userName","required","password","validationFormRegister","email","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","phone","validationCommunity","cobrandComunityName","partComunityName","validationGroupMitraAsuh","groupMitraAsuhName","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","result","programthumnail","j","length","push","data1","programAdd","response","console","log","data","programId","resultData","progrram","_id","contentPrograms1","i","x","respons","realContents","dataRaw","nomerUrutTahapan","contentType","status","contentAddAsync","response2","paramUser","whereKeyValues","userType","packageId","limit","Number","MAX_SAFE_INTEGER","getUserList","responseUser","users","userEmails","forEach","y","z","join","data2","notificationAdd","catch","error","editProgram","whereValues","newValues","programEdit","addStep","contentAdd","editStep","contentEdit","deleteProgram","retrieveList","deleting","programDelete","paramu","contentDelete","addContent","community","groupMitraAsuhId","topic","audi","map","e","getEmbedUrl","hasil","cobrandComunityId","r","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","loginData","localStorage","removeItem","setItem","token","JSON","stringify","user","addNotification","useSchedule","schedule","addAudience","audienceAdd","addNotifCategory","notifCategoryAdd","addProgCategory","programCategoryAdd","addStaff","userLevel","adminAdd","editStaff","getItem","newKeyValues","adminEdit","deleteStaff","staffId","adminDelete","addCommunity","partComunityId","communityAdd","addSchoolGroup","memberSekolah","schoolGroupAdd","deleteCommunity","communityId","communityDelete","deleteSchoolGroup","schoolGroupId","schoolGroupDelete","addContentTopic","contentTopicAdd","addScreenTime","unit","screenTimeAdd","editAppUser","gender","imagePhoto","appUserEdit","userCommunity","communityMemberDelete","param","communityMemberAddAsync","connect","state","isLoading","auth","onAddProgram","useHistory","parse","useState","isPageLoading","setPageLoading","categoryList","setCategoryList","audience","setAudience","isStepAdded","setStepAdded","responseCount","setResponseCount","editorButtonList","useEffect","promiseTopic","getProgramCategoryList","promiseAudience","getAudienceList","Promise","all","responseAll","topicRaw","audienceRaw","Data","label","headingName","routes","path","initialValues","Date","toISOString","split","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","isMulti","options","classNamePrefix","file","currentTarget","files","replace","splice","content","stepErrors","stepTouched","setOptions","buttonList","imageWidth","height","onClick","for","contentMedia","reader","FileReader","readAsDataURL","onloadend","base64data","res","index","p","charAt","conProg","newResponse","newStep","artikel","EditorState","createEmpty","steps","keys","alert","query","axios","method","url","headers","a","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","Heading","item","exact","to","getProgramList","getContentList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getContentTopicList","getAdminList","getCommunityList","getCommunityMemberList","getSchoolList","getSchoolGroupList"],"mappings":"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","file":"static/js/32.a3f39947.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    userName: yup.string('Enter your email').required('Email is required'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationCommunity = yup.object({\n    cobrandComunityName: yup.string('Enter your community name').required('Community name is required'),\n    partComunityName: yup.string('Enter your community name')\n})\n\nexport const validationGroupMitraAsuh = yup.object({\n    groupMitraAsuhName: yup.string('Enter your group name').required('Group name is required'),\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentAddAsync, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, adminEdit, adminDelete, contentTopicAdd, screenTimeAdd, appUserEdit, communityAdd, communityDelete, communityMemberAddAsync, communityMemberDelete,\n schoolGroupAdd, schoolGroupDelete} from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\nimport { getUserList } from '../../components/API/filter';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            // console.log(typeof result);\n            const programthumnail = result;\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data1 = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance\n            };\n\n            programAdd(data1)\n            .then(response => {\n                console.log('response:', response.data);\n                let programId = response.data.resultData.progrram._id;\n                let contentPrograms1 = [];\n                for(var i = 0; i < contentProg.length; i++) {\n                    let x = contentProg[i];\n                    let respons = {};\n                    for(var j = 0; j < x.response.length; j++) {\n                        respons[x.response[j]] = 0;\n                    }\n                    let realContents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                            + '<head>'\n                            + '<meta charset=\"utf-8\">'\n                            + '<style>'\n                            + '#contents {'\n                            + 'overflow-y: scroll;'\n                            + 'text-align: justify;'\n                            + 'font-family: Arial, Helvetica, sans-serif;'\n                            + 'padding: 1%;'\n                            + '}'\n                            + '#contents li {'\n                            + 'margin-left: 5%;'\n                            + '}'\n                            + '</style>'\n                            + '</head>'\n                            + '<body>'\n                            + '<div id=\"contents\">'\n                            + x.contents\n                            + '</div>'\n                            + '</body>'\n                            + '</html>';\n                    let dataRaw = {\n                        programId: programId,\n                        cobrandEmail: cobrandEmail,\n                        nomerUrutTahapan: x.nomerUrutTahapan,\n                        namaTahapan: x.namaTahapan,\n                        contentName: x.contentName,\n                        contentType: x.contentType,\n                        contentSource: x.contentSource,\n                        contents: realContents,\n                        startDate: x.startDate,\n                        endDate: x.endDate,\n                        topics: x.topics,\n                        targetAudiance: x.targetAudiance,\n                        status: 'active',\n                        respons: respons,\n                        answerKey: x.answerKey\n                    }\n\n                    contentPrograms1.push(contentAddAsync(dataRaw).then(response2 => {\n                        console.log('Respons ' + i, response2)\n                    }));\n                    console.log('content Program 1', contentPrograms1);\n                }\n                let paramUser = {\n                    whereKeyValues: {\n                        userType: \"parent\",\n                        packageId: \"com.byasia.ruangortu\"\n                    },\n                    limit: Number.MAX_SAFE_INTEGER\n                }\n                getUserList(paramUser)\n                .then(responseUser => {\n                    console.log(responseUser);\n                    var x = responseUser.data.users;\n                    var userEmails = [];\n                    x.forEach(y => {\n                        userEmails.push(y.emailUser);\n                    })\n                    var z = userEmails.join(',');\n                    if(contentPrograms1.length === contentProg.length) {\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                        let data2 = {\n                            cobrandEmail,\n                            destination: z,\n                            messageSubject: \"Program Baru Untuk Anak\",\n                            messageContent: \"Hi Papa mama Ada Program Baru Lho! Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, papa mama bisa bagikan program tersebut ke anak Anda. Yuk ikuti program barunya.\",\n                            scheduleTime: startDate,\n                            mediaType: \"Device\",\n                            category: \"Informasi\"\n                        }\n                        notificationAdd(data2).then(() => {\n                            data2.destination = targetAudiance.join(\", \");\n                            data2.messageSubject = \"Hi Adik-Adik Ada Program Baru Lho!\"\n                            data2.messageContent = \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, yuk adik-adik kita ikuti program baru nya, Seru Lho!\"\n                            history.push('/cms/program');\n                            dispatch(alertError('Program \"' + programName + '\" berhasil ditambahkan.'));\n                            dispatch(loadingStop());\n                        });;\n                    }\n                    else {\n                        let data2 = {\n                            cobrandEmail,\n                            destination: z,\n                            messageSubject: \"Hai Papa Mama Ada Program Baru Lho! \",\n                            messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, papa mama bisa bagikan program tersebut ke anak Anda. Yuk ikuti program barunya.\",\n                            scheduleTime: startDate,\n                            mediaType: \"Device\",\n                            category: \"Informasi\"\n                        }\n                        notificationAdd(data2).then(() => {\n                            data2.destination = targetAudiance.join(\", \");\n                            data2.messageSubject = \"Hi Adik-Adik Ada Program Baru Lho!\"\n                            data2.messageContent = \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, yuk adik-adik kita ikuti program baru nya, Seru Lho!\"\n                            history.push('/cms/program');\n                            dispatch(alertError('Program \"' + programName + '\" berhasil ditambahkan, namun beberapa tahap gagal ditambahkan.'));\n                            dispatch(loadingStop());\n                        });\n                    }})\n            })\n            .catch(error => {\n                console.log('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            })\n\n            // let contentPrograms = [];\n            // for(var i = 0; i < contentProg.length; i++) {\n            //     let x = contentProg[i];\n            //     let respons = {};\n            //     for(var j = 0; j < x.response.length; j++) {\n            //         respons[x.response[j]] = 0;\n            //     }\n            //     let realContents = '<!DOCTYPE html>'\n            //             + '<html lang=\"en\">'\n            //             + '<head>'\n            //             + '<meta charset=\"utf-8\">'\n            //             + '<style>'\n            //             + '#contents {'\n            //             + 'overflow-y: scroll;'\n            //             + 'text-align: justify;'\n            //             + 'font-family: Arial, Helvetica, sans-serif;'\n            //             + 'padding: 1%;'\n            //             + '}'\n            //             + '#contents li {'\n            //             + 'margin-left: 5%;'\n            //             + '}'\n            //             + '</style>'\n            //             + '</head>'\n            //             + '<body>'\n            //             + '<div id=\"contents\">'\n            //             + x.contents\n            //             + '</div>'\n            //             + '</body>'\n            //             + '</html>';\n            //     let dataRaw = {\n            //         nomerUrutTahapan: x.nomerUrutTahapan,\n            //         namaTahapan: x.namaTahapan,\n            //         contentName: x.contentName,\n            //         contentType: x.contentType,\n            //         contentSource: x.contentSource,\n            //         contents: realContents,\n            //         startDate: x.startDate,\n            //         endDate: x.endDate,\n            //         topics: x.topics,\n            //         targetAudiance: x.targetAudiance,\n            //         respons: respons,\n            //         answerKey: x.answerKey\n            //     }\n            //     contentPrograms.push(dataRaw);\n            // }\n\n            // let targetAudiance = [];\n            // for(var j = 0; j < targetAudience.length; j++) {\n            //     targetAudiance.push(targetAudience[j].value);\n            // }\n\n            // let data = {\n            //     cobrandEmail,\n            //     programName,\n            //     ProgramDescription,\n            //     programthumnail,\n            //     startDate,\n            //     endDate,\n            //     category,\n            //     targetAudiance,\n            //     contentPrograms\n            // };\n\n            // // console.log(data);\n            // //Call API ....\n\n            // // programAdd(data)\n            // programAddv2(data)\n            //     .then(response => {\n            //         // console.log('Success:', response.data);\n            //         history.push('/cms/program');\n            //         dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n            //         dispatch(loadingStop());\n            //     })\n            //     .catch((error) => {\n            //         console.error('Error:', error);\n            //         dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n            //         dispatch(loadingStop());\n            //     });\n            // // console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, startDate, endDate, category, targetAudiance, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                programName,\n                ProgramDescription,\n                startDate,\n                endDate,\n                category,\n                targetAudiance\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        programEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/program');\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const addStep = (programId, cobrandEmail, nomerUrutTahapan, namaTahapan, contentName, contentType, contentSource, contents, startDate, endDate, topics, targetAudiance, response, answerKey, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let respons = {};\n        for(var j = 0; j < response.length; j++) {\n            respons[response[j]] = 0;\n        }\n        let realContents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                            + '<head>'\n                            + '<meta charset=\"utf-8\">'\n                            + '<style>'\n                            + '#contents {'\n                            + 'overflow-y: scroll;'\n                            + 'text-align: justify;'\n                            + 'font-family: Arial, Helvetica, sans-serif;'\n                            + 'padding: 1%;'\n                            + '}'\n                            + '#contents li {'\n                            + 'margin-left: 5%;'\n                            + '}'\n                            + '</style>'\n                            + '</head>'\n                            + '<body>'\n                            + '<div id=\"contents\">'\n                            + contents\n                            + '</div>'\n                            + '</body>'\n                            + '</html>';\n        let data = {\n            programId,\n            cobrandEmail,\n            nomerUrutTahapan,\n            namaTahapan,\n            contentName,\n            contentType,\n            contentSource,\n            contents: realContents,\n            startDate,\n            endDate,\n            topics,\n            targetAudiance,\n            respons,\n            answerKey,\n            status: 'active'\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/program/edit/');\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const editStep = (_id, cobrandEmail, namaTahapan, contentName, contents, response, answerKey, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let respons = {};\n        for(var j = 0; j < response.length; j++) {\n            respons[response[j]] = 0;\n        }\n        let realContents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                            + '<head>'\n                            + '<meta charset=\"utf-8\">'\n                            + '<style>'\n                            + '#contents {'\n                            + 'overflow-y: scroll;'\n                            + 'text-align: justify;'\n                            + 'font-family: Arial, Helvetica, sans-serif;'\n                            + 'padding: 1%;'\n                            + '}'\n                            + '#contents li {'\n                            + 'margin-left: 5%;'\n                            + '}'\n                            + '</style>'\n                            + '</head>'\n                            + '<body>'\n                            + '<div id=\"contents\">'\n                            + contents\n                            + '</div>'\n                            + '</body>'\n                            + '</html>';\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                namaTahapan,\n                contentName,\n                contents: realContents,\n                respons,\n                answerKey\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        contentEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/program/view/step');\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                let paramu = {\n                    whereValues: {\n                        programId: programId[0]\n                    }\n                }\n                contentDelete(paramu)\n                .then(response2 => {\n                    // console.log(response2.data);\n                    dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                    dispatch(loadingStop());\n                    retrieveList();\n                })\n                .catch(error => {\n                    // console.log(error);\n                    dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus, namun tahap pada program gagal dihapus.'));\n                    dispatch(loadingStop());\n                    retrieveList();\n                });\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, community, groupMitraAsuhId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            // console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi,\n                            cobrandComunityId: community,\n                            groupMitraAsuhId\n                        };\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                let paramUser = {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\"\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                }\n                                getUserList(paramUser)\n                                .then(responseUser => {\n                                    console.log(responseUser);\n                                    var x = responseUser.data.users;\n                                    var userEmails = [];\n                                    x.forEach(y => {\n                                        userEmails.push(y.emailUser);\n                                    })\n                                    var z = userEmails.join(',');\n                                    let data2 = {\n                                        cobrandEmail,\n                                        destination: z,\n                                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                        scheduleTime: startDate,\n                                        mediaType: \"Device\",\n                                        category: \"Informasi\"\n                                    }\n                                    notificationAdd(data2).then(r => {\n                                        history.push('/cms/content');\n                                        dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                        dispatch(loadingStop());\n                                    });\n                                });\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        // console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi,\n                            cobrandComunityId: community,\n                            groupMitraAsuhId\n                        };\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                let paramUser = {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\"\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                }\n                                getUserList(paramUser)\n                                .then(responseUser => {\n                                    console.log(responseUser);\n                                    var x = responseUser.data.users;\n                                    var userEmails = [];\n                                    x.forEach(y => {\n                                        userEmails.push(y.emailUser);\n                                    })\n                                    var z = userEmails.join(',');\n                                    let data2 = {\n                                        cobrandEmail,\n                                        destination: z,\n                                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                        scheduleTime: startDate,\n                                        mediaType: \"Device\",\n                                        category: \"Informasi\"\n                                    }\n                                    notificationAdd(data2).then(r => {\n                                        history.push('/cms/content');\n                                        dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                        dispatch(loadingStop());\n                                    });\n                                });\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi,\n                            cobrandComunityId: community,\n                            groupMitraAsuhId\n                        };\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                let paramUser = {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\"\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                }\n                                getUserList(paramUser)\n                                .then(responseUser => {\n                                    console.log(responseUser);\n                                    var x = responseUser.data.users;\n                                    var userEmails = [];\n                                    x.forEach(y => {\n                                        userEmails.push(y.emailUser);\n                                    })\n                                    var z = userEmails.join(',');\n                                    let data2 = {\n                                        cobrandEmail,\n                                        destination: z,\n                                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                        scheduleTime: startDate,\n                                        mediaType: \"Device\",\n                                        category: \"Informasi\"\n                                    }\n                                    notificationAdd(data2).then(r => {\n                                        history.push('/cms/content');\n                                        dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                        dispatch(loadingStop());\n                                    });\n                                });\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            // console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi,\n                cobrandComunityId: community,\n                groupMitraAsuhId\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    // console.log('Success:', response.data);\n                    let paramUser = {\n                        whereKeyValues: {\n                            packageId: \"com.byasia.ruangortu\"\n                        },\n                        limit: Number.MAX_SAFE_INTEGER\n                    }\n                    getUserList(paramUser)\n                    .then(responseUser => {\n                        console.log(responseUser);\n                        var x = responseUser.data.users;\n                        var userEmails = [];\n                        x.forEach(y => {\n                            userEmails.push(y.emailUser);\n                        })\n                        var z = userEmails.join(',');\n                        let data2 = {\n                            cobrandEmail,\n                            destination: z,\n                            messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                            messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                            scheduleTime: startDate,\n                            mediaType: \"Device\",\n                            category: \"Informasi\"\n                        }\n                        notificationAdd(data2).then(r => {\n                            history.push('/cms/content');\n                            dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                            dispatch(loadingStop());\n                        });\n                    });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            // console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        // console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            // console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            // console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    // console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Artikel \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            // console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Artikel \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Artikel \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                // console.log('whereValues: ', whereValues);\n                // console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        // console.log('Success:', response.data);\n                        if (password) {\n                            // console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                // console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            // console.log('whereValues: ', whereValues);\n            // console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    // console.log('Success:', response.data);\n                    if (password) {\n                        // console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            // console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (cobrandEmail, destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            cobrandEmail, destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const editStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                _id: localStorage.getItem('staffSelected')\n            },\n            newKeyValues: {\n                userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        adminEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n                localStorage.removeItem('staffSelected');\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const deleteStaff = (cobrandEmail, staffId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                _id: staffId[0]\n            }\n        }\n        adminDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('User \"' + staffId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('User \"' + staffId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addCommunity = (cobrandComunityName, cobrandEmail, partComunityId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let partCom = cobrandComunityName + \"-\" + partComunityId\n        let data = {\n            cobrandComunityId: cobrandComunityName,\n            cobrandComunityName,\n            cobrandEmail,\n            partComunityId: partCom\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        communityAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/komunitas');\n                dispatch(alertSuccess('Komunitas \"' + cobrandComunityName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Komunitas \"' + cobrandComunityName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addSchoolGroup = (groupMitraAsuhName, cobrandEmail, memberSekolah, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            groupMitraAsuhId: groupMitraAsuhName,\n            groupMitraAsuhName,\n            cobrandEmail,\n            memberSekolah\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        schoolGroupAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/school-group');\n                dispatch(alertSuccess('Kelompok mitra asuh \"' + groupMitraAsuhName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kelompok mitra asuh \"' + groupMitraAsuhName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const deleteCommunity = (cobrandEmail, communityId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandComunityId: communityId[0]\n            }\n        }\n        communityDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Komunitas \"' + communityId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Komunitas \"' + communityId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const deleteSchoolGroup = (cobrandEmail, schoolGroupId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                groupMitraAsuhId: schoolGroupId[0]\n            }\n        }\n        schoolGroupDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Kelompok mitra asuh \"' + schoolGroupId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Kelompok mitra asuh \"' + schoolGroupId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber, community, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                let userCommunity = [];\n                communityMemberDelete({whereValues: {emailUser: oldEmail}})\n                .then(response2 => {\n                    console.log(response2.data);\n                    community.map(e => {\n                        let param = {\n                            cobrandComunityId: e.value,\n                            emailUser: emailUser\n                        }\n                        userCommunity.push(communityMemberAddAsync(param));\n                    })\n                    history.push('/cms/user');\n                        dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                });\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddProgram.scss';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { getProgramCategoryList, getAudienceList } from './../../../../components/API/filter'\nimport { addProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgram } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\nimport { getEmbedUrl } from '../../../../helpers/fileHelper/fileHelper'\n\nimport { ContentState, Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, convertFromRaw, current } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { stateToHTML } from 'draft-js-export-html'\n\nimport SunEditor, {buttonList} from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css';\n\nimport Select from 'react-select';\n\nfunction AddProgram({\n    onAddProgram,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).cobrandEmail;\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [categoryList, setCategoryList] = useState([]);\n    const [audience, setAudience] = useState([]);\n    const [isStepAdded, setStepAdded] = useState(false);\n    const [stepCount, setStepCount] = useState(0);\n    const [responseCount, setResponseCount] = useState(1);\n\n    const editorButtonList = [\n        ['undo', 'redo'],\n        ['font', 'fontSize', 'formatBlock'],\n        ['paragraphStyle', 'blockquote'],\n        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n        ['fontColor', 'hiliteColor', 'textStyle'],\n        ['removeFormat'],\n        ['outdent', 'indent'],\n        ['align', 'horizontalRule', 'list', 'lineHeight'],\n        ['table', 'link', 'image', 'video'], /** 'audio', 'math', */ // You must add the 'katex' library at options to use the 'math' plugin.\n        /** 'imageGallery', */ // You must add the \"imageGalleryUrl\".\n        // ['fullScreen', 'showBlocks', 'codeView'],\n        ['preview', 'print'], // 'save', 'template'\n        /** 'dir', 'dir_ltr', 'dir_rtl' */ // \"dir\": Toggle text direction, \"dir_ltr\": Right to Left, \"dir_rtl\": Left to Right\n    ];\n\n    const embedVideoCallBack = (link) =>{\n        \n        const asd = getEmbedUrl(link);\n        // console.log(\"Video embed \", asd);\n        return asd;\n    }\n\n    const uploadCallback = (file) => new Promise(\n        (resolve, reject) => {\n        const reader= new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            // console.log(reader.result);\n            resolve({data: {link: reader.result}});\n        }\n        reader.onerror = error => reject(error);\n        }\n    );\n\n    useEffect(() => {\n        let paramTopic = {};\n        let paramAudience = {};\n        const promiseTopic = getProgramCategoryList(paramTopic);\n        const promiseAudience = getAudienceList(paramAudience);\n\n        Promise.all([promiseTopic, promiseAudience]).then(responseAll => {\n            // console.log(responseAll[0]);\n            // console.log(responseAll[1]);\n            var topicRaw = [], audienceRaw = [];\n            responseAll[0].data.Data.map(e => {\n                topicRaw.push(e.category);\n            })\n            responseAll[1].data.Data.map(e => {\n                audienceRaw.push({value: e.audianceName, label: e.audianceName});\n            })\n            // console.log(\"Topic raw\", topicRaw);\n            // console.log(\"Audience raw\", audienceRaw);\n            setCategoryList(topicRaw);\n            setAudience(audienceRaw);\n            setPageLoading(false);\n        })\n    }, [])\n\n    if(isLoading || isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/cms/program', name: 'Program' },\n                { path: '/cms/program/add', name: 'Buat Program Baru' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: '',\n                    programDescription: '',\n                    programThumbnail: '',\n                    startDate: new Date().toISOString().split('T')[0],\n                    endDate: new Date().toISOString().split('T')[0],\n                    category: categoryList[0],\n                    targetAudiance: [],\n                    contentPrograms: []\n                }}\n                validationSchema = {validationProgram}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddProgram( cobrandEmail, values.programName, values.programDescription, values.programThumbnail, values.startDate, values.endDate, values.category, values.targetAudiance, values.contentPrograms, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddProgram\">\n                        <h1>Buat Program Baru</h1>\n                        <div className=\"form-group\">\n                            <label>Judul</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Kategori Program</label>\n                            <select\n                                name=\"category\"\n                                value={values.category}\n                                onChange={handleChange}\n                            >\n                                {\n                                    categoryList.map((category) => {\n                                        return (\n                                            <option value={category}>{category}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Target Pembaca</label>\n                            <Select\n                                isMulti\n                                value={values.targetAudiance}\n                                onChange={(e) => {\n                                    setFieldValue(\"targetAudiance\", e)\n                                }}\n                                name=\"targetAudience\"\n                                options={audience}\n                                className=\"basic-multi-select\"\n                                classNamePrefix=\"select\"\n                            />\n                            {touched.targetAudiance && <span className=\"message__error\">{errors.targetAudiance}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Deskripsi</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                           {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Thumbnail</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnail\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        // console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            { touched.programThumbnail && <span className=\"message__error\">{errors.programThumbnail}</span> }\n                        </div>\n                        <div className=\"form-group-row\">\n                            <div className=\"form-group\">\n                                <label>Tanggal Mulai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={new Date().toISOString().split('T')[0]}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div>\n                            {/* end date */}\n                            <div className=\"form-group\">\n                                <label>Tanggal Selesai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"endDate\"\n                                    value={values.endDate}\n                                    min={values.startDate}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.endDate && <span className=\"message__error\">{errors.endDate}</span>}\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>{\"Jumlah Respon/Jawaban di Setiap Tahap\"}</label>\n                            <InputComponent \n                                type=\"number\"\n                                className=\"form-group__input\"\n                                value={responseCount}\n                                min={1}\n                                onChange={(e) => {\n                                    // console.log(e.currentTarget.value);\n                                    // console.log(e.currentTarget.value);\n                                    e.currentTarget.value = e.currentTarget.value.replace(/^0+/, '');\n                                    // console.log('After', e.currentTarget.value);\n                                    if(e.currentTarget.value) {\n                                        // console.log('Yes masuk');\n                                        if(responseCount > e.currentTarget.value) {\n                                            values.contentPrograms.map((x, i) => {\n                                                var y = x.response;\n                                                if(x.answerKey === x.response[x.response.length-1] && values.category === 'Ujian') setFieldValue(`contentPrograms.${i}.answerKey`, x.response[0])\n                                                y.splice(e.currentTarget.value-responseCount, responseCount-e.currentTarget.value);\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue(`contentPrograms.${i}.response`, y);\n                                            })\n                                        }\n                                        else {\n                                            // // console.log(\"Nambah loh\");\n                                            values.contentPrograms.map((x, i) => {\n                                                var y = x.response;\n                                                for(var j = 0; j < e.currentTarget.value-responseCount; j++) {\n                                                    // console.log(\"Ini nambah?\");\n                                                    y.push('');\n                                                }\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue(`contentPrograms.${i}.response`, y);\n                                            })\n                                        }\n                                        setResponseCount(e.currentTarget.value)\n                                    }\n                                    else {\n                                        setResponseCount(0);\n                                        values.contentPrograms.map((x, i) => {\n                                            setFieldValue(`contentPrograms.${i}.response`, []);\n                                        })\n                                    }\n                                }}\n                                disabled={false}\n                            />\n                        </div>\n                        {values.contentPrograms.map((content, i) => {\n                            const stepErrors = errors.contentPrograms?.length && errors.contentPrograms[i] || {};\n                            const stepTouched = touched.contentPrograms?.length && touched.contentPrograms[i] || {};\n                            return (\n                                <div className=\"steps\">\n                                    <h2>Tahap {i+1}</h2>\n                                    <div className=\"form-group\">\n                                        <label>Nama Tahap</label>\n                                        <InputComponent\n                                            type=\"text\"\n                                            name=\"namaTahapan\"\n                                            className=\"form-group__input form-group__input--fullwidth\"\n                                            placeholder=\"Example\"\n                                            value={content.namaTahapan}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.namaTahapan`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                        {stepTouched.namaTahapan && <span className=\"message__error\">{stepErrors.namaTahapan}</span>}\n                                    </div>\n                                    {/* <div className=\"form-group\">\n                                        <label>Tipe Tahap</label>\n                                        <select\n                                            name=\"contentType\"\n                                            value={content.contentType}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.contentType`, e.currentTarget.value);\n                                                setFieldValue(`contentPrograms.${i}.contents`, '');\n                                            }}\n                                        >\n                                            <option value=\"Artikel\">Artikel</option>\n                                            <option value=\"Image\">Image</option>\n                                            <option value=\"Video\">Video</option>\n                                            <option value=\"Pdf\">File Pdf</option>\n                                        </select>\n                                    </div> */}\n                                    \n                                    <div className=\"form-group\">\n                                        <label>Judul Tahap</label>\n                                        <InputComponent\n                                            type=\"text\"\n                                            name=\"contentName\"\n                                            className=\"form-group__input form-group__input--fullwidth\"\n                                            placeholder=\"Example\"\n                                            value={content.contentName}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.contentName`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                        {stepTouched.contentName && <span className=\"message__error\">{stepErrors.contentName}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Isi Tahap</label>\n                                        {/* <p>*Untuk memasukkan video dengan URL, tekan tombol \"Embedded\" di sebelah kanan \"Link\".</p> */}\n                                        {content.contentType === \"Artikel\" || \"Ujian\" ? (\n                                            \n                                            <SunEditor \n                                            setOptions={{\n                                                buttonList: editorButtonList,\n                                                imageWidth: '360px'\n                                            }}\n                                            onChange={(content) => {\n                                                setFieldValue(`contentPrograms.${i}.contents`, content);\n                                            }}\n                                            \n                                            height='500px'/>\n                                            // <Editor\n                                            //     editorState={content.artikel}\n                                            //     toolbarClassName=\"toolbarClassName\"\n                                            //     wrapperClassName=\"wrapperClassName\"\n                                            //     editorClassName=\"editorClassName\"\n                                            //     onEditorStateChange={(editorState) => setFieldValue(`contentPrograms.${i}.artikel`, editorState)}\n                                            //     // onEditorStateChange={updateTextDescription}\n                                            //     // value={description.values}\n                                            //     value={draftToHtml(convertToRaw(content.artikel.getCurrentContent()))}\n                                            //     // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                            //     name=\"contents\"\n                                            //     toolbar={{\n                                            //         list: {\n                                            //             inDropdown: true,\n                                            //         },\n                                            //         textAlign: {\n                                            //             inDropdown: true,\n                                            //         },\n                                            //         image: {\n                                            //             uploadEnabled: true,\n                                            //             alignmentEnabled: true,\n                                            //             previewImage: true,\n                                            //             uploadCallback: uploadCallback,\n                                            //             inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                            //             defaultSize: {\n                                            //                 height: 'auto',\n                                            //                 width: '360px',\n                                            //             },\n                                            //         },\n                                            //         embedded:{\n                                            //             embedCallback: embedVideoCallBack,\n                                            //             defaultSize: {\n                                            //                 height: 'auto',\n                                            //                 width: '360px',\n                                            //             },\n                                            //         }\n                                            //     }}\n                                            //     onChange={() => {\n                                            //         // setTextValue(editorState);\n                                            //         // setFieldValue(\"contentDescription\", description);\n                                            //         setFieldValue(`contentPrograms.${i}.contents`, draftToHtml(convertToRaw(content.artikel.getCurrentContent())));\n                                            //         // // console.log(textDeskripsi);\n                                            //         // // console.log(values.contents)\n                                            //     }}\n\n                                            // />\n                                            \n                                        ) : null}\n                                        {content.contentType === \"Image\" ? (\n                                            <div>\n                                                <p>Pilih media yang ingin di upload :</p>\n                                                <form>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                        onClick={() => { setFieldValue(`contentPrograms.${i}.contentMedia`, 'internal') }}\n                                                    />\n                                                    <label for=\"internal\" >Media Internal Komputer</label>\n                                                    <br></br>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                        onClick={() => setFieldValue(`contentPrograms.${i}.contentMedia`, 'url')}\n                                                    />\n                                                    <label for=\"url\" >Alamat URL</label>\n                                                    <br></br>\n                                                </form>\n                                                \n\n                                                {content.contentMedia === 'internal' ?\n                                                    <InputComponent\n                                                        type=\"file\"\n                                                        className=\"form-group__input\"\n                                                        name=\"contents\"\n                                                        onBlur={handleBlur}\n                                                        onChange={(e) => {\n                                                            let file = e.currentTarget.files[0];\n                                                            if (file) {\n                                                                const reader = new FileReader();\n                                                                reader.readAsDataURL(file);\n                                                                reader.onloadend = function() {\n                                                                    var base64data = reader.result;                \n                                                                    setFieldValue(`contentPrograms.${i}.contents`, base64data);\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                    :\n                                                    <InputComponent\n                                                        type=\"text\"\n                                                        name=\"contents\"\n                                                        className=\"form-group__input form-group__input--fullwidth\"\n                                                        placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                                        value={content.contents}\n                                                        onChange={(e) => {\n                                                            setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                }\n\n                                            </div>\n\n                                        ) : null}\n                                        {content.contentType === \"Video\" ?\n                                            <InputComponent\n                                                type=\"text\"\n                                                name=\"contents\"\n                                                className=\"form-group__input form-group__input--fullwidth\"\n                                                placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                                value={content.contents}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            : null}\n                                        {content.contentType === \"Pdf\" ? (\n                                            <div>\n                                                <p>Pilih media yang ingin di upload :</p>\n                                                <form>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                        onClick={() => { setFieldValue(`contentPrograms.${i}.contentMedia`, 'internal') }}\n                                                    />\n                                                    <label for=\"internal\" >Media Internal - Maks 300kb</label>\n                                                    <br></br>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                        onClick={() => setFieldValue(`contentPrograms.${i}.contentMedia`, 'url')}\n                                                    />\n                                                    <label for=\"url\" >Alamat URL</label>\n                                                    <br></br>\n                                                </form>\n\n                                                {content.contentMedia === 'internal' ?\n                                                    <InputComponent\n                                                        type=\"file\"\n                                                        className=\"form-group__input\"\n                                                        name=\"contents\"\n                                                        onBlur={handleBlur}\n                                                        //   value={values.contents}\n                                                        //   onChange={handleChange}\n                                                        onChange={(e) => {\n                                                            let file = e.currentTarget.files[0];\n                                                            if (file) {\n                                                                const reader = new FileReader();\n                                                                reader.readAsDataURL(file);\n                                                                reader.onloadend = function() {\n                                                                    var base64data = reader.result;                \n                                                                    setFieldValue(`contentPrograms.${i}.contents`, base64data);\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                    :\n                                                    <InputComponent\n                                                        type=\"text\"\n                                                        name=\"contents\"\n                                                        className=\"form-group__input form-group__input--fullwidth\"\n                                                        placeholder=\"Type Pdf URL... (Pdf file)\"\n                                                        value={content.contents}\n                                                        onChange={(e) => {\n                                                            setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                }\n                                            </div>\n\n                                        ) : null}\n                                        {stepTouched.contents && <span className=\"message__error\">{stepErrors.contents}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Respon/Jawaban</label>\n                                        {content.response.map((res, index) => {\n                                            // console.log(\"Content response:\", content.response)\n                                            return <InputComponent\n                                                type=\"text\"\n                                                name=\"response\"\n                                                className=\"form-group__input form-group__input--halfwidth\"\n                                                placeholder=\"Example\"\n                                                value={res}\n                                                onChange={(e) => {\n                                                    var x = '';\n                                                    for(var p = 0; p < e.currentTarget.value.length; p++) {\n                                                        if(e.currentTarget.value.charAt(p) !== '.') x += e.currentTarget.value.charAt(p);\n                                                        else x += '․';\n                                                    }\n                                                    console.log(x);\n                                                    setFieldValue(`contentPrograms.${i}.response.${index}`, x);\n                                                    // setFieldValue(`contentPrograms.${i}.response.${index}`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                        })}\n                                    </div>\n                                    {values.category === 'Ujian' ? (\n                                        <div className=\"form-group\">\n                                            <label>Kunci Jawaban</label>\n                                            <select\n                                                name=\"category\"\n                                                value={content.answerKey}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.answerKey`, e.currentTarget.value)\n                                                }}\n                                            >\n                                                <option value='-1' disabled>{\" \"}</option>\n                                                {\n                                                    content.response.map((category) => {\n                                                        return (\n                                                            <option value={category}>{category}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    ) : null}\n                                    {/* <div className=\"form-group-row\">\n                                        <div className=\"form-group\">\n                                            <label>Tanggal Mulai</label>\n                                            <InputComponent\n                                                type=\"date\"\n                                                className=\"form-group__input\"\n                                                name=\"startDate\"\n                                                value={content.startDate}\n                                                min={new Date().toISOString().split('T')[0]}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.startDate`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            {stepTouched.startDate && <span className=\"message__error\">{stepErrors.startDate}</span>}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Tanggal Selesai</label>\n                                            <InputComponent\n                                                type=\"date\"\n                                                className=\"form-group__input\"\n                                                name=\"endDate\"\n                                                value={content.endDate}\n                                                min={content.startDate}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.endDate`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            {stepTouched.endDate && <span className=\"message__error\">{stepErrors.endDate}</span>}\n                                        </div>\n                                    </div> */}\n                                    <button id=\"add_program\" type=\"button\" onClick={() => {\n                                        let conProg = values.contentPrograms;\n                                        conProg.splice(i, 1);\n                                        if(conProg.length < 1) setStepAdded(false); \n                                        setFieldValue('contentPrograms', conProg);\n                                    }}>\n                                        <FiMinus className=\"IconDelete\" />\n                                        <span>Hapus Tahap Ini</span>  \n                                    </button>\n                                </div>\n                            )\n                        })}\n                        <button id=\"add_program\" type=\"button\" onClick={() => {\n                            if(!isStepAdded) setStepAdded(true);\n                            var newResponse = [];\n                            for(var x = 0; x < responseCount; x++) {\n                                newResponse.push('');\n                            }\n                            // console.log(\"New response\", newResponse);\n                            let newStep = {\n                                artikel: EditorState.createEmpty(),\n                                contentMedia: 'url',\n\n                                nomerUrutTahapan: values.contentPrograms.length + 1,\n                                namaTahapan: '',\n                                contentName: '',\n                                contentType: `${values.category} === 'Ujian' ? 'Ujian' : 'Artikel'`,\n                                contentSource: '',\n                                contents: '',\n                                startDate: values.startDate,\n                                endDate: values.endDate,\n                                topics: [],\n                                targetAudiance: [],\n                                response: newResponse,\n                                answerKey: '-1'\n                            }\n                            let steps = values.contentPrograms;\n                            steps.push(newStep);\n                            setFieldValue(\"contentPrograms\", steps);\n                        }}>\n                            <FiPlus className=\"IconAdd\" />\n                            <span>Tambah Tahap Program</span>  \n                        </button>\n                        <div>\n                            {/* {errors ? <p style={{'color' : 'red'}}>Ada kolom yang isinya belum sesuai. Silakan cek kembali.</p> : null} */}\n                            <button className=\"btn btn-submit\" type=\"submit\" onClick={() => {\n                                // console.log(\"Touched\", touched);\n                                // console.log(\"Error\", errors)\n                                if(Object.keys(errors).length > 0) alert('Ada kolom yang belum diisi atau Anda belum menambah tahap. Silakan cek kembali.');\n                            }}>\n                                Buat Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {/* {console.log(isLoading)} */}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    // console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddProgram: ( cobrandEmail, programName, programDescription, programThumbnail, startDate, endDate, category, targetAudiance, contentPrograms, history ) =>\n            dispatch(addProgram( cobrandEmail, programName, programDescription, programThumbnail, startDate, endDate, category, targetAudiance, contentPrograms, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProgram)\n","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAddAsync = async (query) => await axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityMemberAddAsync = async (query) => await axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityMemberDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const schoolGroupAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/groupMitraAsuhAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const schoolGroupDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/groupMitraAsuhRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","var map = {\n\t\"./ckb.js\": 202,\n\t\"./da.js\": 203,\n\t\"./de.js\": 204,\n\t\"./en.js\": 189,\n\t\"./es.js\": 205,\n\t\"./fr.js\": 206,\n\t\"./he.js\": 207,\n\t\"./index.js\": 254,\n\t\"./it.js\": 208,\n\t\"./ja.js\": 209,\n\t\"./ko.js\": 210,\n\t\"./lv.js\": 211,\n\t\"./nl.js\": 212,\n\t\"./pl.js\": 213,\n\t\"./pt_br.js\": 214,\n\t\"./ro.js\": 215,\n\t\"./ru.js\": 216,\n\t\"./se.js\": 217,\n\t\"./ua.js\": 218,\n\t\"./zh_cn.js\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 253;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getAdminList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getCommunityList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getCommunityMemberList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getSchoolList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/AlAzharSchoolFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getSchoolGroupList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/groupMitraAsuhList',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n"],"sourceRoot":""}