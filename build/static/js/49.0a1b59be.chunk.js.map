{"version":3,"sources":["components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","containers/CoBrand/Setting/KategoriNotifikasi/AddKateNotif.js","components/UI/Heading/Heading.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","contentAdd","query","axios","method","url","data","headers","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","result","console","log","programthumnail","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","editStep","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","editAppUser","gender","imagePhoto","connect","state","auth","isLoading","onAddNotifCategory","useHistory","parse","getItem","headingName","routes","path","initialValues","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","Heading","item","exact","to"],"mappings":"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","file":"static/js/49.0a1b59be.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons,\n                    answerKey: x.answerKey\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, startDate, endDate, category, targetAudiance, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                programName,\n                ProgramDescription,\n                startDate,\n                endDate,\n                category,\n                targetAudiance\n            }\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/program');\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const editStep = (_id, cobrandEmail, namaTahapan, contentName, contents, response, answerKey, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let respons = {};\n        for(var j = 0; j < response.length; j++) {\n            respons[response[j]] = 0;\n        }\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                namaTahapan,\n                contentName,\n                contents,\n                response,\n                answerKey\n            }\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/program/view/step');\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import React from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddKateNotif.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addNotifCategory } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationNotifCategory } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\n\nfunction AddNotifCategory({\n    onAddNotifCategory,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    if(isLoading) return <RKLoader/>\n\n    return (\n        <>\n            <Heading headingName=\"Kategori Notifikasi\" routes={[\n                { path: '/tools/setting/notification-category', name: 'Kategori Notifikasi' },\n                { path: '/tools/setting/notification-category/add', name: 'Tambah' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    category: '',\n                    description: ''\n                }}\n                validationSchema = {validationNotifCategory}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddNotifCategory( values.category, values.description, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddNotifCategory\">\n                        <h1>Tambah</h1>\n                        <div className=\"form-group\">\n                            <label>Nama Kategori Notifikasi</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"category\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.category}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.category && <span className=\"message__error\">{errors.category}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Deskripsi</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"description\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.description}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.description && <span className=\"message__error\">{errors.description}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Tambah\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddNotifCategory: ( category, description, history ) =>\n            dispatch(addNotifCategory( category, description, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddNotifCategory)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}