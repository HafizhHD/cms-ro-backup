{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","../node_modules/react-multi-email/commonjs/index.js","../node_modules/react-multi-email/commonjs/ReactMultiEmail.js","containers/CoBrand/Message/AddNotification/AddNotification.js","../node_modules/react-multi-email/commonjs/isEmail.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","Object","defineProperty","exports","isEmail_1","require","isEmail","default","ReactMultiEmail_1","ReactMultiEmail","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","React","_super","props","_this","call","state","focused","emails","inputValue","findEmailAddress","isEnter","validateEmail","validEmails","re","addEmails","i","l","length","push","arr","split","filter","n","undefined","shift","setState","concat","onChangeInputValue","removeEmail","index","prevState","slice","handleOnKeydown","e","which","preventDefault","currentTarget","handleOnKeyup","handleOnChange","handleOnBlur","handleOnFocus","emailInputRef","createRef","getDerivedStateFromProps","nextProps","propsEmails","render","_a","_b","style","getLabel","_c","noClass","createElement","onClick","current","focus","map","ref","onFocus","onKeyDown","onKeyUp","Component","connect","console","log","auth","isLoading","dispatch","onAddNotification","useSchedule","history","addNotification","useHistory","useState","Date","sche","setSche","JSON","parse","localStorage","getItem","emailList","setEmailList","notifContext","setNotifContext","isTargetChecked","setTargetChecked","isScheduleChecked","setScheduleChecked","targetList","setTargetList","categoryList","setCategoryList","isPageLoading","setPageLoading","useEffect","x","setTime","getTime","toISOString","removeItem","params","promiseAudience","promiseCategory","Promise","all","response","Data","headingName","routes","path","initialValues","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","checked","event","y","indexOf","splice","_emails","data-tag","data-tag-handle","__assign","assign","t","s","arguments","defaultFqdnOptions","requireTld","allowUnderscores","allowTrailingDot","defaultEmailOptions","allowDisplayName","requireDisplayName","allowUtf8LocalPart","displayName","emailUserPart","quotedEmailUser","emailUserUtf8Part","quotedEmailUserUtf8","isByteLength","str","options","len","encodeURI","Number","displayEmail","match","parts","domain","pop","lowerDomain","toLowerCase","user","join","replace","substring","tld","part","isFQDN","pattern","userParts","Heading","item","exact","to"],"mappings":"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","file":"static/js/19.2d529a91.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isEmail_1 = require(\"./isEmail\");\nexports.isEmail = isEmail_1.default;\nvar ReactMultiEmail_1 = require(\"./ReactMultiEmail\");\nexports.ReactMultiEmail = ReactMultiEmail_1.default;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar isEmail_1 = require(\"./isEmail\");\nvar ReactMultiEmail = /** @class */ (function (_super) {\n    __extends(ReactMultiEmail, _super);\n    function ReactMultiEmail(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            focused: false,\n            emails: [],\n            inputValue: '',\n        };\n        _this.findEmailAddress = function (value, isEnter) {\n            var validateEmail = _this.props.validateEmail;\n            var validEmails = [];\n            var inputValue = '';\n            var re = /[ ,;]/g;\n            var isEmail = validateEmail || isEmail_1.default;\n            var addEmails = function (email) {\n                var emails = _this.state.emails;\n                for (var i = 0, l = emails.length; i < l; i++) {\n                    if (emails[i] === email) {\n                        return false;\n                    }\n                }\n                validEmails.push(email);\n                return true;\n            };\n            if (value !== '') {\n                if (re.test(value)) {\n                    var arr = value.split(re).filter(function (n) {\n                        return n !== '' && n !== undefined && n !== null;\n                    });\n                    do {\n                        if (isEmail('' + arr[0])) {\n                            addEmails('' + arr.shift());\n                        }\n                        else {\n                            if (arr.length === 1) {\n                                /// 마지막 아이템이면 inputValue로 남겨두기\n                                inputValue = '' + arr.shift();\n                            }\n                            else {\n                                arr.shift();\n                            }\n                        }\n                    } while (arr.length);\n                }\n                else {\n                    if (isEnter) {\n                        if (isEmail(value)) {\n                            addEmails(value);\n                        }\n                        else {\n                            inputValue = value;\n                        }\n                    }\n                    else {\n                        inputValue = value;\n                    }\n                }\n            }\n            _this.setState({\n                emails: _this.state.emails.concat(validEmails),\n                inputValue: inputValue,\n            });\n            if (validEmails.length && _this.props.onChange) {\n                _this.props.onChange(_this.state.emails.concat(validEmails));\n            }\n        };\n        _this.onChangeInputValue = function (value) {\n            _this.findEmailAddress(value);\n        };\n        _this.removeEmail = function (index) {\n            _this.setState(function (prevState) {\n                return {\n                    emails: prevState.emails.slice(0, index).concat(prevState.emails.slice(index + 1)),\n                };\n            }, function () {\n                if (_this.props.onChange) {\n                    _this.props.onChange(_this.state.emails);\n                }\n            });\n        };\n        _this.handleOnKeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                case 9:\n                    e.preventDefault();\n                    break;\n                case 8:\n                    if (!e.currentTarget.value) {\n                        _this.removeEmail(_this.state.emails.length - 1);\n                    }\n                    break;\n                default:\n            }\n        };\n        _this.handleOnKeyup = function (e) {\n            switch (e.which) {\n                case 13:\n                case 9:\n                    _this.findEmailAddress(e.currentTarget.value, true);\n                    break;\n                default:\n            }\n        };\n        _this.handleOnChange = function (e) {\n            return _this.onChangeInputValue(e.currentTarget.value);\n        };\n        _this.handleOnBlur = function (e) {\n            _this.setState({ focused: false });\n            _this.findEmailAddress(e.currentTarget.value, true);\n        };\n        _this.handleOnFocus = function () {\n            return _this.setState({\n                focused: true,\n            });\n        };\n        _this.emailInputRef = React.createRef();\n        return _this;\n    }\n    ReactMultiEmail.getDerivedStateFromProps = function (nextProps, prevState) {\n        if (prevState.propsEmails !== nextProps.emails) {\n            return {\n                propsEmails: nextProps.emails || [],\n                emails: nextProps.emails || [],\n                inputValue: '',\n                focused: false,\n            };\n        }\n        return null;\n    };\n    ReactMultiEmail.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, focused = _a.focused, emails = _a.emails, inputValue = _a.inputValue;\n        var _b = this.props, style = _b.style, getLabel = _b.getLabel, _c = _b.className, className = _c === void 0 ? '' : _c, noClass = _b.noClass, placeholder = _b.placeholder;\n        // removeEmail\n        return (React.createElement(\"div\", { className: className + \" \" + (noClass ? '' : 'react-multi-email') + \" \" + (focused ? 'focused' : '') + \" \" + (inputValue === '' && emails.length === 0 ? 'empty' : ''), style: style, onClick: function () {\n                if (_this.emailInputRef.current) {\n                    _this.emailInputRef.current.focus();\n                }\n            } },\n            placeholder ? React.createElement(\"span\", { \"data-placeholder\": true }, placeholder) : null,\n            emails.map(function (email, index) {\n                return getLabel(email, index, _this.removeEmail);\n            }),\n            React.createElement(\"input\", { ref: this.emailInputRef, type: \"text\", value: inputValue, onFocus: this.handleOnFocus, onBlur: this.handleOnBlur, onChange: this.handleOnChange, onKeyDown: this.handleOnKeydown, onKeyUp: this.handleOnKeyup })));\n    };\n    return ReactMultiEmail;\n}(React.Component));\nexports.default = ReactMultiEmail;\n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddNotification.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addNotification } from '../../../../store/actions/dashboard';\nimport { getAudienceList, getNotificationCategoryList } from './../../../../components/API/filter'\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationNotification } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\n\nimport { ReactMultiEmail } from \"react-multi-email\";\nimport \"react-multi-email/style.css\";\n\nfunction AddNotification({\n    onAddNotification,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const [sche, setSche] = useState(new Date());\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const [emailList, setEmailList] = useState([]);\n    const [notifContext, setNotifContext] = useState('');\n    const [isTargetChecked, setTargetChecked] = useState(false);\n    const [isScheduleChecked, setScheduleChecked] = useState(false);\n\n    const [targetList, setTargetList] = useState([]);\n    const [categoryList, setCategoryList] = useState([]);\n\n    const [isPageLoading, setPageLoading] = useState(true);\n\n    useEffect(() => {\n        let x = sche;\n        x.setTime(x.getTime() + 7 * 60 * 60 * 1000);\n        setSche(x);\n        console.log(new Date().toISOString())\n        if(localStorage.getItem('emailTo')) {\n            setEmailList(localStorage.getItem('emailTo').split(','));\n            localStorage.removeItem('emailTo');\n        }\n        if(localStorage.getItem('notifContext')) {\n            setNotifContext(localStorage.getItem('notifContext'));\n            localStorage.removeItem('notifContext');\n        }\n        let params = {};\n        let promiseAudience = getAudienceList(params);\n        let promiseCategory = getNotificationCategoryList(params);\n        Promise.all([promiseAudience, promiseCategory])\n        .then(response => {\n            console.log(response[0].data.Data);\n            console.log(response[1].data.Data);\n            setTargetList(response[0].data.Data);\n            setCategoryList(response[1].data.Data);\n            setPageLoading(false);\n        })\n    }, []);\n\n    if(isPageLoading)\n        return <RKLoader />\n\n    return (\n        <>\n            <Heading headingName=\"Buat Notifikasi\" routes={[\n                { path: '/cms/notifications', name: 'Notifikasi' },\n                { path: '/cms/notifications/add', name: 'Buat Notifikasi Baru' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    destination: emailList, \n                    messageSubject: notifContext,\n                    messageContent: '',\n                    useSchedule: false,\n                    scheduleTime: sche.toISOString().slice(0, -8),\n                    mediaType: 'Semua',\n                    category: 'Umum',\n\n                }}\n                validationSchema = {validationNotification}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddNotification(values.destination, values.messageSubject, values.messageContent, values.useSchedule, values.scheduleTime, values.mediaType, values.category, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddNotification\">\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Tujuan</label>\n                            <label className=\"form-group-option\">\n                                <input type=\"checkbox\" onClick={(e) => {\n                                        setFieldValue(\"destination\", []);\n                                    if(e.currentTarget.checked) setTargetChecked(true);\n                                    else {\n                                        setFieldValue(\"destination\", emailList);\n                                        setTargetChecked(false);\n                                    }\n                                }}>\n                                        </input>\n                                <p>Pakai Target Pengguna</p>\n                            </label>\n                            {isTargetChecked ? (\n                                <div className=\"form-group-choice\"> \n                                    {targetList.map(e => {\n                                        return <label>\n                                            <input type=\"checkbox\" value={e.audianceName} onClick={(event) => {\n                                                if(event.currentTarget.checked) {\n                                                    let x = values.destination;\n                                                    x.push(e.audianceName);\n                                                    setFieldValue(\"destination\", x);\n                                                }\n                                                else {\n                                                    let x = values.destination;\n                                                    let y = x.indexOf(e.audianceName);\n                                                    if(y > -1) x.splice(y, 1);\n                                                    setFieldValue(\"destination\", x);\n                                                }\n                                            }}>\n                                            </input>\n                                        <p>{e.audianceName}</p></label>\n                                    })}\n                                </div>\n                            ) : (\n                                <ReactMultiEmail\n                                    placeholder=\"Masukkan email...\"\n                                    emails={values.destination}\n                                    onChange={(_emails) => {\n                                        setEmailList(_emails)\n                                        setFieldValue(\"destination\", _emails)\n                                    }}\n                                    getLabel={(\n                                        email,\n                                        index,\n                                        removeEmail\n                                    ) => {\n                                        return (\n                                            <div data-tag key={index}>\n                                                {email}\n                                                <span data-tag-handle onClick={() => removeEmail(index)}>\n                                                ×\n                                                </span>\n                                            </div>\n                                        );\n                                    }}\n                                />\n                            )}\n                            {touched.destination && <span className=\"message__error\">{errors.destination}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Judul Pesan</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"messageSubject\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.messageSubject}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Isi Pesan</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"messageContent\"\n                                placeholder=\"Ketik pesan...\"\n                                value={values.messageContent}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                           {touched.messageContent && <span className=\"message__error\">{errors.messageContent}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Pengaturan Jadwal</label>\n                            <label className=\"form-group-option\">\n                                <input type=\"checkbox\" onClick={(e) => {\n                                    if(e.currentTarget.checked) {\n                                        setScheduleChecked(true);\n                                        setFieldValue(\"useSchedule\", true);\n                                    }\n                                    else {\n                                        setScheduleChecked(false);\n                                        setFieldValue(\"useSchedule\", true);\n                                    }\n                                }}>\n                                        </input>\n                                <p>Jadwalkan</p>\n                            </label>\n                            <InputComponent\n                                type=\"datetime-local\"\n                                className=\"form-group__input\"\n                                name=\"scheduleTime\"\n                                min={new Date().toISOString().slice(0, -8)}\n                                value={values.scheduleTime}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                disabled={!isScheduleChecked}\n                            />\n                            {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Kirim Via</label>\n                            <select\n                                name=\"mediaType\"\n                                value={values.mediaType}\n                                onChange={(e) => {\n                                    setFieldValue(\"mediaType\", e.currentTarget.value);\n                                }}\n                            >\n                                <option value=\"Semua\">Semua</option>\n                                <option value=\"Email\">Email</option>\n                                <option value=\"Device\">Device</option>\n                            </select>\n                           {touched.messageContent && <span className=\"message__error\">{errors.messageContent}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Kategori</label>\n                            \n                            <div className=\"form-group-choice\"> \n                                {categoryList.map(e => {\n                                    return <label>\n                                        <input type=\"radio\" name=\"category\" value={e.category} checked={values.category === e.category} onChange={(event) => {\n                                            if(event.currentTarget.checked) {\n                                                setFieldValue(\"category\", event.currentTarget.value);\n                                            }\n                                        }}>\n                                        </input>\n                                    <p>{e.category}</p></label>\n                                })}\n                            </div>\n                            \n                            {touched.category && <span className=\"message__error\">{errors.category}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Kirim Notifikasi\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddNotification: ( destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history ) =>\n            dispatch(addNotification( destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddNotification)\n","\"use strict\";\n// forked from https://github.com/chriso/validator.js\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar defaultFqdnOptions = {\n    requireTld: true,\n    allowUnderscores: false,\n    allowTrailingDot: false,\n};\nvar defaultEmailOptions = {\n    allowDisplayName: false,\n    requireDisplayName: false,\n    allowUtf8LocalPart: true,\n    requireTld: true,\n};\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n    var min = 0;\n    var max;\n    var len = encodeURI(str).split(/%..|./).length - 1;\n    if (options) {\n        min = Number(options.min) || 0;\n        max = Number(options.max);\n    }\n    return len >= min && (typeof max === 'undefined' || len <= max);\n}\nfunction isFQDN(str, options) {\n    options = __assign({}, defaultFqdnOptions, options);\n    /* Remove the optional trailing dot before checking validity */\n    if (options.allowTrailingDot && str[str.length - 1] === '.') {\n        str = str.substring(0, str.length - 1);\n    }\n    var parts = str.split('.');\n    if (options.requireTld) {\n        var tld = '' + parts.pop();\n        if (!parts.length ||\n            !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n            return false;\n        }\n        // disallow spaces\n        if (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20]/.test(tld)) {\n            return false;\n        }\n    }\n    for (var part = void 0, i = 0; i < parts.length; i++) {\n        part = parts[i];\n        if (options.allowUnderscores) {\n            part = part.replace(/_/g, '');\n        }\n        if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n            return false;\n        }\n        // disallow full-width chars\n        if (/[\\uff01-\\uff5e]/.test(part)) {\n            return false;\n        }\n        if (part[0] === '-' || part[part.length - 1] === '-') {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isEmail(str, options) {\n    options = __assign({}, defaultEmailOptions, options);\n    if (options.requireDisplayName || options.allowDisplayName) {\n        var displayEmail = str.match(displayName);\n        if (displayEmail) {\n            str = displayEmail[1];\n        }\n        else if (options.requireDisplayName) {\n            return false;\n        }\n    }\n    var parts = str.split('@');\n    var domain = '' + parts.pop();\n    var lowerDomain = domain.toLowerCase();\n    var user = parts.join('@');\n    if (lowerDomain === 'gmail.com' || lowerDomain === 'googlemail.com') {\n        user = user.replace(/\\./g, '').toLowerCase();\n    }\n    if (!isByteLength(user, { max: 64 }) || !isByteLength(domain, { max: 254 })) {\n        return false;\n    }\n    if (!isFQDN(domain, { requireTld: options.requireTld })) {\n        return false;\n    }\n    if (user[0] === '\"') {\n        user = user.slice(1, user.length - 1);\n        return options.allowUtf8LocalPart\n            ? quotedEmailUserUtf8.test(user)\n            : quotedEmailUser.test(user);\n    }\n    var pattern = options.allowUtf8LocalPart\n        ? emailUserUtf8Part\n        : emailUserPart;\n    var userParts = user.split('.');\n    for (var i = 0; i < userParts.length; i++) {\n        if (!pattern.test(userParts[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.default = isEmail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}