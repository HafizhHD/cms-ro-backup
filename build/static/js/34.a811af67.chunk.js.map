{"version":3,"sources":["components/API/filter.js","components/UI/Table/TableFilter.js","components/UI/Table/TableWithFilter.js","containers/CoBrand/Dashboard/columns.js","containers/CoBrand/Dashboard/component/StackedChart.js","containers/CoBrand/Dashboard/component/BarChart.js","containers/CoBrand/Dashboard/component/DonutChart.js","containers/CoBrand/Dashboard/Dashboard.js","components/UI/RKLoaderSpinner/RKLoader.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","getAdminList","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","length","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","values","has","add","map","option","i","SelectArrayColumnFilter","console","log","Array","x","NumberRangeColumnFilter","min","max","Math","style","display","type","val","old","parseInt","width","marginRight","marginLeft","DateRangeColumnFilter","Date","toISOString","slice","fuzzyTextFilterFn","rows","matchSorter","keys","dateBetweenFilterFn","filterValues","sd","ed","filter","r","time","autoRemove","TableWithFilter","DATA","COLUMNS","renderRowSubComponent","showCheckbox","notifContext","filterTypes","fuzzyText","dateBetween","text","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","useTable","columns","initialState","hiddenColumns","useFilters","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","selectedRowIds","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","downloadAsCSV","currentRecords","data_to_download","record_to_download","colIndex","cells","Object","prototype","toString","call","isNaN","split","className","currentTarget","onClick","dataRaw","doc","jsPDF","setFontSize","content","startY","head","body","autoTable","save","to","localStorage","setItem","stringEmail","jsonData","original","emailUser","userType","includes","JSON","stringify","parentEmail","some","disabled","defaultValue","Number","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cell","getCellProps","isArray","isExpanded","colSpan","Columns","accessor","disableFilters","color","fontWeight","StackedChart","props","useState","series","colors","chart","height","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","position","offsetX","offsetY","plotOptions","bar","horizontal","xaxis","categories","label","decimalsInFloat","yaxis","labels","formatter","toFixed","fill","opacity","subsState","borderRadius","dataLabels","DonutChart","pie","donut","total","showAlways","tooltip","custom","seriesIndex","w","dataPointIndex","selected","config","Dashboard","isLoading","setLoading","isLoadingSpinner","setLoadingSpinner","localData","parse","getItem","absStart","today","setDate","getDate","period","setPeriod","startDate","setStartDate","endDate","setEndDate","userData","setUserData","countUser","setCountUser","conProgData","setConProgData","userDataLabel","setUserDataLabel","topUsageData","setTopUsageData","topUsageLabel","setTopUsageLabel","notifData","setNotifData","notifLabel","setNotifLabel","topicCountLabel","setTopicCountLabel","topicCountData","setTopicCountData","topicViewLabel","setTopicViewLabel","topicViewData","setTopicViewData","usageStudyLevelData","setUsageStudyLevelData","setColors","topUsageLabelDummy","notifLabelDummy","topicLabelDummy","userDummy","name","conProgDummy","topUsageDummy","notifDummy","topicCountDummy","topicViewDummy","usageStudyLevelDummy","tk","smp","sma","parent","coparent","countingUser","paramUser","whereKeyValues","packageId","dateCreated","orderKeyValues","nameUser","limit","MAX_SAFE_INTEGER","paramContent","cobrandEmail","programId","status","contentName","includeContentData","paramProgram","programName","includeThumbnailData","paramUsage","dateCreate","paramNotification","scheduleTime","paramNotificationCategory","promiseUser","promiseContent","promiseProgram","promiseUsage","promiseNotification","promiseNotificationCategory","Promise","all","then","responseAll","dataUser","users","childInfo","StudyLevel","userDataObj","contentLength","contents","programs","programLength","usageData","appUsages","usageLabel","usageFreq","j","y","usageHour","appName","indexOf","list","sort","a","b","age","k","notifCat","notifDat","Data","category","resultData","retrieveData","changedStartDate","changedEndDate","setTimeout","RKLoader","Heading","headingName","href","BarChart","routes","item","path","exact"],"mappings":"mIAAA,2hBAGaA,EAAiB,SAACC,GAAD,OAAWC,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXC,EAAiB,SAACN,GAAD,OAAWC,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXE,EAAc,SAACP,GAAD,OAAWC,IAAM,CACxCC,OAAQ,OACRC,IAAKA,IAAM,mBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXG,EAAiB,SAACR,GAAD,OAAWC,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXI,EAAkB,SAACT,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,uBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXK,EAAwB,SAACV,GAAD,OAAWC,IAAM,CAClDC,OAAQ,OACRC,IAAKA,IAAM,kCACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXM,EAAkB,SAACX,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXO,EAAkB,SAACZ,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXQ,EAAmB,SAACb,GAAD,OAAWC,IAAM,CAC7CC,OAAQ,OACRC,IAAKA,IAAM,sBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXS,EAAsB,SAACd,GAAD,OAAWC,IAAM,CAChDC,OAAQ,OACRC,IAAKA,IAAM,wBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXU,EAA8B,SAACf,GAAD,OAAWC,IAAM,CACxDC,OAAQ,OACRC,IAAKA,IAAM,kCACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXW,EAAkB,SAAChB,GAAD,OAAWC,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXY,EAAsB,SAACjB,GAAD,OAAWC,IAAM,CAChDC,OAAQ,OACRC,IAAKA,IAAM,0BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXa,EAAyB,SAAClB,GAAD,OAAWC,IAAM,CACnDC,OAAQ,OACRC,IAAKA,IAAM,6BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXc,EAAe,SAACnB,GAAD,OAAWC,IAAM,CACzCC,OAAQ,OACRC,IAAKA,IAAM,kBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,wB,kWClGf,SAASe,EAAT,GAEH,IAAD,IADDC,OAAUC,EACT,EADSA,YAAaC,EACtB,EADsBA,gBAAiBC,EACvC,EADuCA,UAE1BD,EAAgBE,OAE9B,OACE,uBACEC,MAAOJ,GAAe,GACtBK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAE9BC,YAAW,cAOV,SAASC,EAAT,GAEH,IAAD,IADDX,OAAUC,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBU,EAClD,EADkDA,GAI7CC,EAAUC,IAAMC,SAAQ,WAC5B,IAAMF,EAAU,IAAIG,IAIpB,OAHAd,EAAgBe,SAAQ,SAAAC,QACAT,IAAnBS,EAAIC,OAAOP,IAAsBC,EAAQO,IAAIF,EAAIC,OAAOP,KAAMC,EAAQQ,IAAIH,EAAIC,OAAOP,OAEnF,YAAIC,EAAQM,YAClB,CAACP,EAAIV,IAGR,OACE,yBACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAHhC,UAME,wBAAQJ,MAAM,GAAd,iBACCQ,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAgBnB,MAAOkB,EAAvB,SACGA,GADUC,SAUd,SAASC,EAAT,GAEH,IAAD,IADDzB,OAAUC,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBU,EAClD,EADkDA,GAI7CC,EAAUC,IAAMC,SAAQ,WAC5B,IAAMF,EAAU,IAAIG,IAYpB,OAXAd,EAAgBe,SAAQ,SAAAC,GAItB,GAHAQ,QAAQC,IAAI,UAAWT,EAAIC,OAAOP,IAClCc,QAAQC,IAAI,eAAgBT,EAAIC,OAAOP,aAAegB,OACtDF,QAAQC,IAAI,iBAAkBT,EAAIC,OAAOP,GAAIR,QAC1Cc,EAAIC,OAAOP,aAAegB,OAASV,EAAIC,OAAOP,GAAIR,OAAS,EAC5D,IAAI,IAAIoB,EAAI,EAAGA,EAAGN,EAAIC,OAAOP,GAAIR,OAAQoB,IAAK,CAC5C,IAAIK,EAAIX,EAAIC,OAAOP,GAAIY,QACdf,IAANoB,GAAoBhB,EAAQO,IAAIS,IAAIhB,EAAQQ,IAAIQ,OAIlD,YAAIhB,EAAQM,YAClB,CAACP,EAAIV,IAGR,OACE,yBACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAHhC,UAME,wBAAQJ,MAAM,GAAd,iBACCQ,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAgBnB,MAAOkB,EAAvB,SACGA,GADUC,SA8Cd,SAASM,EAAT,GAEH,IAAD,IADD9B,OACC,IADSC,mBACT,MADuB,GACvB,EAD2BC,EAC3B,EAD2BA,gBAAiBC,EAC5C,EAD4CA,UAAWS,EACvD,EADuDA,GAExD,EAAmBE,IAAMC,SAAQ,WAC/B,IAAIgB,EAAM7B,EAAgBE,OAASF,EAAgB,GAAGiB,OAAOP,GAAM,EAC/DoB,EAAM9B,EAAgBE,OAASF,EAAgB,GAAGiB,OAAOP,GAAM,EAKnE,OAJAV,EAAgBe,SAAQ,SAAAC,GACtBa,EAAME,KAAKF,IAAIb,EAAIC,OAAOP,GAAKmB,GAC/BC,EAAMC,KAAKD,IAAId,EAAIC,OAAOP,GAAKoB,MAE1B,CAACD,EAAKC,KACZ,CAACpB,EAAIV,IARR,mBAAO6B,EAAP,KAAYC,EAAZ,KAUA,OACE,sBACEE,MAAO,CACLC,QAAS,QAFb,UAKE,uBACE9B,MAAOJ,EAAY,IAAM,GACzBmC,KAAK,SACL9B,SAAU,SAAAC,GACR,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACD,EAAME,SAASF,EAAK,SAAM5B,EAAW6B,EAAI,QAEpEP,IAAKA,EACLrB,YAAW,eAAUqB,EAAV,KACXG,MAAO,CACLM,MAAO,OACPC,YAAa,YAhBnB,KAoBE,uBACEpC,MAAOJ,EAAY,IAAM,GACzBmC,KAAK,SACL9B,SAAU,SAAAC,GACR,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAID,EAAME,SAASF,EAAK,SAAM5B,OAE7DsB,IAAKA,EACLrB,YAAW,eAAUsB,EAAV,KACXE,MAAO,CACLM,MAAO,OACPE,WAAY,eAOf,SAASC,EAAT,GAEN,IAAD,IADE3C,OACF,IADYC,mBACZ,MAD0B,GAC1B,EAD8BC,EAC9B,EAD8BA,gBAAiBC,EAC/C,EAD+CA,UAAWS,EAC1D,EAD0DA,GAExD,EAAmBE,IAAMC,SAAQ,WAC7B,IAAIgB,EAAM,IAAIa,KAAK,cACfZ,EAAM,IAAIY,KAAK,cAKnB,OAJA1C,EAAgBe,SAAQ,SAAAC,GACpBa,EAAMb,EAAIC,OAAOP,IAAM,IAAIgC,KAAK1B,EAAIC,OAAOP,KAAQmB,EAAM,IAAIa,KAAK1B,EAAIC,OAAOP,IAAamB,EAC1FC,EAAMd,EAAIC,OAAOP,IAAM,IAAIgC,KAAK1B,EAAIC,OAAOP,KAAQoB,EAAM,IAAIY,KAAK1B,EAAIC,OAAOP,IAAaoB,KAEvF,CAACD,EAAKC,KACd,CAACpB,EAAIV,IARR,mBAAO6B,EAAP,KAAYC,EAAZ,KAUA,OACI,sBACIE,MAAO,CACHC,QAAS,QAFjB,UAKI,uBACI9B,MAAOJ,EAAY,IAAM8B,EAAIc,cAAcC,MAAM,EAAG,IACpDV,KAAK,OACLL,IAAKA,EAAIc,cAAcC,MAAM,EAAG,IAChCd,IAAK/B,EAAY,IAAM+B,EAAIa,cAAcC,MAAM,EAAG,IAClDxC,SAAU,SAAAC,GACN,IAAM8B,EAAM9B,EAAEC,OAAOH,MAErBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACD,QAAc5B,EAAW6B,EAAI,QAE1DJ,MAAO,CACHM,MAAO,QACPC,YAAa,YAjBzB,KAqBF,uBACUpC,MAAOJ,EAAY,IAAM+B,EAAIa,cAAcC,MAAM,EAAG,IACpDV,KAAK,OACLL,IAAK9B,EAAY,IAAM8B,EAAIc,cAAcC,MAAM,EAAG,IAClDd,IAAKA,EAAIa,cAAcC,MAAM,EAAG,IAChCxC,SAAU,SAAAC,GACN,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAID,QAAc5B,OAEnDyB,MAAO,CACHM,MAAO,QACPE,WAAY,eAqBvB,SAASK,EAAkBC,EAAMpC,EAAIX,GAC1C,OAAOgD,YAAYD,EAAM/C,EAAa,CAAEiD,KAAM,CAAC,SAAAhC,GAAG,OAAIA,EAAIC,OAAOP,OAM5D,SAASuC,EAAoBH,EAAMpC,EAAIwC,GAC5C,IAAIC,EAAK,IAAIT,KAAKQ,EAAa,IAC3BE,EAAK,IAAIV,KAAKQ,EAAa,IAE/B,OAAOJ,EAAKO,QAAO,SAAAC,GACf,IAAIC,EAAO,IAAIb,KAAKY,EAAErC,OAAOP,IAE7B,OAA4B,IAAxBwC,EAAahD,OAAqB4C,EAC9BS,GAAQJ,GAAMI,GAAQH,KAVpCP,EAAkBW,WAAa,SAAArB,GAAG,OAAKA,GAczCc,EAAoBO,WAAa,SAAArB,GAAG,OAAKA,I,kKCkE1BsB,IApWf,YAA6G,IAAlFC,EAAiF,EAAjFA,KAAMC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,sBAAkE,IAA3CC,oBAA2C,aAArBC,oBAAqB,MAAN,GAAM,EAClGC,EAAcnD,IAAMC,SACtB,iBAAO,CAELmD,UAAWnB,IACXoB,YAAahB,IAGbiB,KAAM,SAACpB,EAAMpC,EAAIX,GACf,OAAO+C,EAAKO,QAAO,SAAArC,GACjB,IAAMmD,EAAWnD,EAAIC,OAAOP,GAC5B,YAAoBH,IAAb4D,GACHC,OAAOD,GACJE,cACAC,WAAWF,OAAOrE,GAAasE,sBAK5C,IAGIE,EAAgB3D,IAAMC,SAC1B,iBAAO,CAEL2D,OAAQ3E,OAEV,IAGI4E,EAAwB7D,IAAM8D,YAClC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAalE,IAAMmE,SACnBC,EAAcL,GAAOG,EAM3B,OAJAlE,IAAMqE,WAAU,WACdD,EAAYE,QAAQN,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,mCACE,mCAAO1C,KAAK,WAAWyC,IAAKK,GAAiBH,SAMjDhG,EAAOgC,mBAAS,kBAAM6C,IAAO,CAACA,IAIpC,EAqBIyB,mBAAS,CACTC,QAASzB,EACT9E,KAAMA,EACN0F,gBACAR,cACAsB,aA5BiB,CAAEC,cAAe,CAAC,YAAa,cAAe,SA6BhEC,aACDC,kBACAC,YACAC,cACAC,gBACAC,gBACA,SAAAC,GACKhC,GAAcgC,EAAMC,eAAeC,MAAK,SAAAX,GAAO,OAEhD,CACE1E,GAAI,YAGJsF,OAAQ,gBAAGC,EAAH,EAAGA,8BAAH,OACN,8BACE,cAACxB,EAAD,eAA2BwB,SAK/BC,KAAM,gBAAGlF,EAAH,EAAGA,IAAH,OACJ,8BACE,cAACyD,EAAD,eAA2BzD,EAAImF,mCAfW,mBAmB7Cf,UApDLgB,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,WACAC,EALJ,EAKIA,KACA1D,EANJ,EAMIA,KACA2D,EAPJ,EAOIA,gBACAC,EARJ,EAQIA,YACAC,EATJ,EASIA,YACAC,EAVJ,EAUIA,UACAC,EAXJ,EAWIA,SACAC,EAZJ,EAYIA,SACAC,EAbJ,EAaIA,aACAC,EAdJ,EAcIA,YACAlB,EAfJ,EAeIA,eACAmB,EAhBJ,EAgBIA,iBAhBJ,KAiBIC,MAASC,eAjBb,EAkBID,OAAQE,EAlBZ,EAkBYA,UAAWC,EAlBvB,EAkBuBA,SACnBH,GAnBJ,EAkBiCI,SAlBjC,EAmBIJ,OACAK,EApBJ,EAoBIA,gBAqCIC,EAAiBN,EAAjBM,aAEFC,EAAgB,WAIlB,IAHA,IAAMC,EAAiB5E,EAEnB6E,EAAmB,GACdrG,EAAI,EAAGA,EAAIoG,EAAexH,OAAQoB,IAAK,CAC5C,IAAIsG,EAAqB,GACzBrB,EAAWmB,EAAepG,IAE1B,IAAK,IAAIuG,EAAW,EAAGA,EAAWH,EAAepG,GAAGwG,MAAM5H,OAAQ2H,IACX,cAAhDH,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOY,IACI,cAAhDgH,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOY,IACO,iBAAhDgH,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOY,KAClCgH,EAAepG,GAAGwG,MAAMD,GAAU1H,OAAqF,kBAA5E4H,OAAOC,UAAUC,SAASC,KAAKR,EAAepG,GAAGwG,MAAMD,GAAU1H,SAA+BgI,MAAMT,EAAepG,GAAGwG,MAAMD,GAAU1H,OAClLyH,EAAmBF,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOkG,QAC5D0B,EAAepG,GAAGwG,MAAMD,GAAU1H,MAAMwC,cAAcyF,MAAM,KAAK,GAChER,EAAmBF,EAAepG,GAAGwG,MAAMD,GAAU/H,OAAOkG,QAC7D0B,EAAepG,GAAGwG,MAAMD,GAAU1H,OAG9CwH,EAAiB5B,KAAK6B,GAE1B,OAAOD,GAgCX,OACI,qCACA,sBAAKU,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,2CAAcvF,EAAK5C,OAAnB,WACA,uBACIgC,KAAK,OACLmG,UAAU,oBACV7H,YAAY,SACZL,MAAQqH,GAAgB,GACxBpH,SAAU,SAACC,GACPkH,EAAgBlH,EAAEiI,cAAcnI,aAI5C,yBAAQkI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAA9B,IAAyC,cAAC,UAAD,CAASxJ,KAAM4I,IAAf,gCACzC,yBAAQY,UAAU,YAAYE,QA7ChB,WAClB,IAAMC,EAAUf,IAChB,GAAGe,EAAQtI,OAAS,EAAG,CACnB,IAKMuI,EAAM,IAAIC,UAHI,YAFP,KACA,MAMbD,EAAIE,YAAY,IAEhB,IAKIC,EAAU,CACVC,OAAQ,GACRC,KANY,CAACf,OAAO/E,KAAKwF,EAAQ,KAOjCO,KALSP,EAAQpH,KAAI,SAAAf,GAAC,OAAI0H,OAAO9G,OAAOZ,OAQ5CoI,EAAIvE,KAXU,SALK,GAgBS,IAC5BuE,EAAIO,UAAUJ,GACdH,EAAIQ,KAAK,gBAoBT,UAAsD,cAAC,IAAD,IAAtD,sBACCpF,EAAeoD,EAAiB/G,OAAS,EAAK,yBAAQmI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAAS,cAAC,IAAD,CAASa,GAAG,yBAAyBb,UAAU,YAAYE,QAAS,WAClJY,aAAaC,QAAQ,eAAgBtF,GAKrC,IAHA,IAAIuF,EAAc,GAEdC,EAAW,GACPhI,EAAI,EAAGA,EAAI2F,EAAiB/G,OAAQoB,IACxC+H,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,WACD,UAA1CvC,EAAiB3F,GAAGiI,SAASE,WACxBJ,EAAYK,SAASzC,EAAiB3F,GAAGiI,SAASC,YAAYH,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,YAGpHF,EAASvD,KAAKkB,EAAiB3F,GAAGiI,UAEtCJ,aAAaC,QAAQ,WAAYO,KAAKC,UAAUN,IAEhDH,aAAaC,QAAQ,UAAWC,EAAYpB,YAE5CkB,aAAaC,QAAQ,mBAAoB,UAlBqC,4CAoBjF,yBAAQf,UAAU,qBAAlB,UAAuC,cAAC,IAAD,IAAS,sBAAMA,UAAU,qBAAhB,4CAAmF,KACvIxE,EAAeoD,EAAiB/G,OAAS,EAAK,yBAAQmI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAAS,cAAC,IAAD,CAASa,GAAG,yBAAyBb,UAAU,YAAYE,QAAS,WAClJY,aAAaC,QAAQ,eAAgBtF,GAKrC,IAHA,IAAIuF,EAAc,GAEdC,EAAW,GACPhI,EAAI,EAAGA,EAAI2F,EAAiB/G,OAAQoB,SACQf,IAA7C0G,EAAiB3F,GAAGiI,SAASM,cACxBR,EAAYS,MAAK,SAAAxG,GAAC,OAAI2D,EAAiB3F,GAAGiI,SAASM,YAAYH,SAASpG,QAC3B,UAA1C2D,EAAiB3F,GAAGiI,SAASE,SAAsBJ,EAAYtD,KAAZ,MAAAsD,EAAW,YAASpC,EAAiB3F,GAAGiI,SAASM,cAClGR,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,aAI3DF,EAASvD,KAAKkB,EAAiB3F,GAAGiI,UAEtCJ,aAAaC,QAAQ,WAAYO,KAAKC,UAAUN,IAEhDH,aAAaC,QAAQ,UAAWC,EAAYpB,YAE5CkB,aAAaC,QAAQ,mBAAoB,WApBqC,6CAsBjF,yBAAQf,UAAU,qBAAlB,UAAuC,cAAC,IAAD,IAAS,sBAAMA,UAAU,qBAAhB,6CAAoF,KACxIxE,EAAeoD,EAAiB/G,OAAS,EAAK,yBAAQmI,UAAU,YAAlB,UAA8B,cAAC,IAAD,IAAS,cAAC,IAAD,CAASa,GAAG,yBAAyBb,UAAU,YAAYE,QAAS,WAClJY,aAAaC,QAAQ,eAAgBtF,GAKrC,IAHA,IAAIuF,EAAc,GAEdC,EAAW,GACPhI,EAAI,EAAGA,EAAI2F,EAAiB/G,OAAQoB,IACpC+H,EAAYK,SAASzC,EAAiB3F,GAAGiI,SAASC,YAAYH,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASC,gBAChEjJ,IAA7C0G,EAAiB3F,GAAGiI,SAASM,cACxBR,EAAYS,MAAK,SAAAxG,GAAC,OAAI2D,EAAiB3F,GAAGiI,SAASM,YAAYH,SAASpG,OAAK+F,EAAYtD,KAAKkB,EAAiB3F,GAAGiI,SAASM,cAGnIP,EAASvD,KAAKkB,EAAiB3F,GAAGiI,UAEtCJ,aAAaC,QAAQ,WAAYO,KAAKC,UAAUN,IAEhDH,aAAaC,QAAQ,UAAWC,EAAYpB,YAE5CkB,aAAaC,QAAQ,mBAAoB,QAlBqC,0CAoBjF,yBAAQf,UAAU,qBAAlB,UAAuC,cAAC,IAAD,IAAS,sBAAMA,UAAU,qBAAhB,0CAAiF,QAE1I,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,aAAf,UACI,wBAAQE,QAAS,kBAAM1B,EAAS,IAAIkD,UAAWtD,EAA/C,SACC,OAED,wBAAQ8B,QAAS,kBAAMxB,KAAgBgD,UAAWtD,EAAlD,SACC,MAED,wBAAQ8B,QAAS,kBAAMzB,KAAYiD,UAAWrD,EAA9C,SACC,MAED,wBAAQ6B,QAAS,kBAAM1B,EAASD,EAAY,IAAImD,UAAWrD,EAA3D,SACC,OAED,yCACM,IACN,mCACKU,EAAY,EADjB,OACwBT,EAAYzG,aAGpC,iDAEI,uBACIgC,KAAK,SACL8H,aAAc5C,EAAY,EAC1BhH,SAAU,SAAAC,GACN,IAAMmG,EAAOnG,EAAEC,OAAOH,MAAQ8J,OAAO5J,EAAEC,OAAOH,OAAS,EAAI,EAC3D0G,EAASL,SAIrB,wBACArG,MAAOkH,EACPjH,SAAU,SAAAC,GACN2G,EAAYiD,OAAO5J,EAAEC,OAAOH,SAHhC,SAMC,CAAC,GAAI,GAAI,IAAIiB,KAAI,SAAAiG,GAAQ,OACtB,yBAAuBlH,MAAOkH,EAA9B,kBACUA,IADGA,aAOzB,qBAAKgB,UAAU,kBAAf,SACD,kDAAWjC,KAAX,cACI,gCACKE,EAAalF,KAAI,SAAA8I,GAAW,OACzB,qCACA,8CAAQA,EAAYC,uBAApB,aACKD,EAAYpL,QAAQsC,KAAI,SAAAtB,GAAM,OAC3B,+CAAQA,EAAOsK,eAAetK,EAAOuK,yBAArC,cACKvK,EAAOwK,OAAO,UACd,+BACKxK,EAAOyK,SACNzK,EAAO0K,aACF,cAAC,IAAD,IACA,cAAC,IAAD,IACL,eAKnB,6BACMN,EAAYpL,QAAQsC,KAAI,SAAAtB,GAAM,OAC3B,6BAAKA,EAAO2K,UAAY3K,EAAOwK,OAAO,UAAY,oBAMnE,iDAAWjE,KAAX,aACMG,EAAKpF,KAAI,SAACJ,EAAKM,GAEZ,OADAiF,EAAWvF,GAEP,eAAC,WAAD,2BAAcA,EAAI0J,eAAlB,cACI,6BACK1J,EAAI8G,MAAM1G,KAAI,SAAAuJ,GAEX,OAAO,+CAAQA,EAAKC,gBAAb,IAA6BvC,WAAYsC,EAAKxK,QAAUuB,MAAMmJ,QAAQF,EAAKxK,QAAYuB,MAAMmJ,QAAQF,EAAKxK,QAAUwK,EAAKxK,MAAMD,OAAS,GAAyB,cAAnByK,EAAK7K,OAAOY,IAC9JiK,EAAK7K,OAAOY,GAAqB,QAD7B,cACmE,cAAnBiK,EAAK7K,OAAOY,GAC9DiK,EAAKL,OAAO,QACXhJ,EAAI,EAAK8F,EAAYC,EAHpB,aAMdrG,EAAI8J,WACD,6BACI,oBAAIC,QAASjF,EAAe5F,OAA5B,SAQK0D,EAAsB,CAAE5C,YAGjC,0B,oGCrMjBgK,EA9JC,CACZ,CACIhF,OAAQ,aACRiF,SAAU,aACVC,gBAAgB,GAEpB,CACIlF,OAAQ,cACRiF,SAAU,aACVC,gBAAgB,GAEpB,CACIlF,OAAQ,uCACRiF,SAAU,iBACVC,gBAAgB,EAChBhF,KAAM,YAAc,IAAZ/F,EAAW,EAAXA,MACJ,OAAO,mBAAG6B,MAAO,CAAEmJ,MAAO,MAAOC,WAAY,QAAtC,SAAiDjL,MAIhE,CACI6F,OAAQ,4BACRiF,SAAU,eACVC,gBAAgB,EAChBhF,KAAM,YAAc,IAAZ/F,EAAW,EAAXA,MACJ,OAAO,mBAAG6B,MAAO,CAAEmJ,MAAO,MAAOC,WAAY,QAAtC,SAAiDjL,MAIhE,CACI6F,OAAQ,gCACRiF,SAAU,gBACVC,gBAAgB,GAGpB,CACIlF,OAAQ,mCACRiF,SAAU,kBACVC,gBAAgB,EAChBhF,KAAM,YAAc,IAAZ/F,EAAW,EAAXA,MACJ,OAAO,mBAAG6B,MAAO,CAAEmJ,MAAO,OAAQC,WAAY,QAAvC,SAAkDjL,MAGjE,CACI6F,OAAQ,4BACRiF,SAAU,gBACVC,gBAAgB,EAChBhF,KAAM,YAAc,IAAZ/F,EAAW,EAAXA,MACJ,OAAO,mBAAG6B,MAAO,CAAEmJ,MAAO,OAAQC,WAAY,QAAvC,SAAkDjL,O,oDCetDkL,EA9DM,SAACC,GAElB,MAAoBC,mBAAS,CACzBC,OAAQF,EAAMzM,KACd8B,QAAS,CACL8K,OAAQH,EAAMG,OACdC,MAAO,CACHxJ,KAAM,MACNyJ,OAAQL,EAAMK,OACdC,SAAS,EACTC,QAAS,CACLC,MAAM,GAEVC,KAAM,CACFC,SAAS,IAGjBC,WAAY,CACR,CACIC,WAAY,IACZvL,QAAS,CACLwL,OAAQ,CACRC,SAAU,SACVC,SAAU,GACVC,QAAS,MAKrBC,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBC,MAAO,CACHxK,KAAM,WACNyK,WAAYrB,EAAMsB,MAClBC,gBAAiB,GAErBC,MAAO,CACH,CACIC,OAAQ,CACJC,UAAW,SAAS7K,GAChB,OAAOA,EAAI8K,QAAQ,OAKnCd,OAAQ,CACJC,SAAU,SACVC,SAAU,IAEda,KAAM,CACFC,QAAS,MAnDdC,EAAP,oBAwDA,OAAyB,IAAtB9B,EAAMzM,KAAKqB,OAAqB,yCAC5B,cAAC,IAAD,CAAYS,QAASyM,EAAUzM,QAAS6K,OAAQ4B,EAAU5B,OAAQtJ,KAAMkL,EAAUzM,QAAQ+K,MAAMxJ,KAAMyJ,OAAQyB,EAAUzM,QAAQ+K,MAAMC,UCvBlIN,EApCM,SAACC,GAElB,MAAoBC,mBAAS,CACzBC,OAAQF,EAAMzM,KACd8B,QAAS,CACL+K,MAAO,CACLxJ,KAAM,MACNyJ,OAAQL,EAAMK,OACdE,QAAS,CACPC,MAAM,GAERC,KAAM,CACFC,SAAS,IAGfO,YAAa,CACXC,IAAK,CACHa,aAAc,EACdZ,YAAY,IAGhBa,WAAY,CACVtL,MAAO,CACLyJ,OAAQ,CAAC,aAGbiB,MAAO,CACHC,WAAYrB,EAAMsB,UAzBvBQ,EAAP,oBA8BA,OAAyB,IAAtB9B,EAAMzM,KAAKqB,OAAqB,yCAC5B,cAAC,IAAD,CAAYS,QAASyM,EAAUzM,QAAS6K,OAAQ4B,EAAU5B,OAAQtJ,KAAMkL,EAAUzM,QAAQ+K,MAAMxJ,KAAMyJ,OAAQyB,EAAUzM,QAAQ+K,MAAMC,U,SCwBlI4B,EAzDI,SAACjC,GAEhB,MAAoBC,mBAAS,CACzBC,OAAQF,EAAMzM,KACd8B,QAAS,CACL8K,OAAQH,EAAMG,OACdC,MAAO,CACHpJ,MAAOgJ,EAAMhJ,MACbJ,KAAM,QACN2J,QAAS,CACPC,MAAM,IAGZS,YAAa,CACTiB,IAAK,CACDC,MAAO,CACHV,OAAQ,CACJjB,MAAM,EACN4B,MAAO,CACHC,YAAY,EACZ7B,MAAM,OAM1BiB,OAAQzB,EAAMsB,MACdgB,QAAS,CACL5B,SAAS,EACT6B,OAAQ,YAAiD,IAAD,EAA7CrC,EAA6C,EAA7CA,OAAQsC,EAAqC,EAArCA,YAA6BC,GAAQ,EAAxBC,eAAwB,EAARD,GACxCL,EAAQ,EADwC,cAEtClC,GAFsC,IAEpD,2BAAsB,CAAEkC,GAAF,SAF8B,8BAGpD,IAAIO,EAAWzC,EAAOsC,GACtB,MAAO,wDAA0DxC,EAAMG,OAAOqC,GAAe,uBAAyBC,EAAEG,OAAOnB,OAAOe,GAAe,KAAOG,EAAW,MAAQA,EAAWP,EAAQ,KAAKT,QAAQ,GAAxM,aAGfhB,WAAY,CAAC,CACTC,WAAY,IACZvL,QAAS,CACL+K,MAAO,CACHpJ,MAAO,KAEX6J,OAAQ,CACJC,SAAU,gBAzCvBgB,EAAP,oBAmDA,OAAyB,IAAtB9B,EAAMzM,KAAKqB,OAAqB,yCAC5B,cAAC,IAAD,CAAYS,QAASyM,EAAUzM,QAAS6K,OAAQ4B,EAAU5B,OAAQtJ,KAAMkL,EAAUzM,QAAQ+K,MAAMxJ,QC2nB5FiM,UAlqBf,WAEI,MAAgC5C,oBAAS,GAAzC,mBAAO6C,EAAP,KAAkBC,EAAlB,KACA,EAA8C9C,oBAAS,GAAvD,mBAAO+C,EAAP,KAAyBC,EAAzB,KAEMC,EAAY7E,KAAK8E,MAAMtF,aAAauF,QAAQ,aAE5CC,EAAW,IAAIjM,KAAK,cACpBkM,EAAQ,IAAIlM,KAClBkM,EAAMC,QAAQD,EAAME,UAAY,GAEhC,MAA4BvD,mBAAS,SAArC,mBAAOwD,EAAP,KAAeC,EAAf,KACA,EAAkCzD,mBAAS,IAAI7I,MAA/C,mBAAOuM,EAAP,KAAkBC,EAAlB,KACA,EAA8B3D,mBAAS,IAAI7I,MAA3C,mBAAOyM,EAAP,KAAgBC,EAAhB,KACA,EAAgC7D,mBAAS,IAAzC,mBAAO8D,EAAP,KAAiBC,EAAjB,KACA,EAAkC/D,mBAAS,CAAC,EAAE,EAAE,IAAhD,mBAAOgE,EAAP,KAAkBC,EAAlB,KACA,EAAsCjE,mBAAS,IAA/C,mBAAOkE,EAAP,KAAoBC,EAApB,KACA,EAA0CnE,mBAAS,CAAC,eAAgB,YAApE,mBAAOoE,EAAP,KAAsBC,EAAtB,KAEA,EAAwCrE,mBAAS,IAAjD,mBAAOsE,GAAP,KAAqBC,GAArB,KACA,GAA0CvE,mBAAS,IAAnD,qBAAOwE,GAAP,MAAsBC,GAAtB,MACA,GAAkCzE,mBAAS,IAA3C,qBAAO0E,GAAP,MAAkBC,GAAlB,MACA,GAAoC3E,mBAAS,IAA7C,qBAAO4E,GAAP,MAAmBC,GAAnB,MACA,GAA8C7E,mBAAS,IAAvD,qBAAO8E,GAAP,MAAwBC,GAAxB,MACA,GAA4C/E,mBAAS,IAArD,qBAAOgF,GAAP,MAAuBC,GAAvB,MACA,GAA4CjF,mBAAS,IAArD,qBAAOkF,GAAP,MAAuBC,GAAvB,MACA,GAA0CnF,mBAAS,IAAnD,qBAAOoF,GAAP,MAAsBC,GAAtB,MACA,GAAsDrF,mBAAS,IAA/D,qBAAOsF,GAAP,MAA4BC,GAA5B,MACA,GAA4BvF,mBAAS,IAArC,qBAAOE,GAAP,MAAesF,GAAf,MAEMC,GAAqB,CAAC,UAAW,SAAU,WAAY,UAAW,SAAU,WAAY,SAAU,iBAAkB,QAAS,aAC7HC,GAAkB,CAAC,aAAc,gBAAiB,UAAW,WAC7DC,GAAkB,CAAC,QAAS,aAAc,YAAa,WAAY,kBAAmB,kBAAmB,eAAgB,sBAAuB,YAAa,QAE7JC,GAAY,CACd,CACIC,KAAM,KACNvS,KAAM,CAAC,EAAG,KAEd,CACIuS,KAAM,KACNvS,KAAM,CAAC,EAAG,KAEd,CACIuS,KAAM,MACNvS,KAAM,CAAC,EAAG,MAEd,CACIuS,KAAM,MACNvS,KAAM,CAAC,EAAG,KAEd,CACIuS,KAAM,SACNvS,KAAM,CAAC,IAAK,IAEhB,CACIuS,KAAM,YACNvS,KAAM,CAAC,GAAI,KAGbwS,GAAe,CAAC,CAACxS,KAAM,CAAC,IAAK,MAC7ByS,GAAgB,CAAC,IAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,MAC/EC,GAAa,CAAC,CAAC1S,KAAK,CAAC,IAAK,IAAK,EAAG,OAClC2S,GAAkB,CAAC,CAAC3S,KAAM,CAAC,GAC7B,IACA,GACA,IACA,GACA,GACA,GACA,IACA,GACA,MACE4S,GAAiB,CAAC,CAAC5S,KAAK,CAAC,KAC3B,KACA,IACA,KACA,KACA,IACA,IACA,MACA,KACA,QAqBE6S,GAAuB,CACzB,CAAC,WAAc,KAAM,WAAc,GAAI,eAAkB,GAAI,aAAgB,GAAI,cAAiB,GAAI,gBAAmB,GAAI,cAAiB,GAC9I,CAAC,WAAc,MAAO,WAAc,IAAK,eAAkB,IAAK,aAAgB,GAAI,cAAiB,GAAI,gBAAmB,GAAI,cAAiB,IACjJ,CAAC,WAAc,MAAO,WAAc,GAAI,eAAkB,GAAI,aAAgB,GAAI,cAAiB,GAAI,gBAAmB,GAAI,cAAiB,KAkSnJ,OAxDAzM,qBAAU,YAtOV,WACI,IAAI0M,EAAK,CAAC,EAAE,GACZxO,EAAK,CAAC,EAAG,GACTyO,EAAM,CAAC,EAAE,GACTC,EAAM,CAAC,EAAE,GACTC,EAAS,CAAC,EAAE,GACZC,EAAW,CAAC,EAAE,GAEVC,EAAe,CAAC,EAAE,EAAE,GAEpBC,EAAY,CACZC,eAAgB,CACZC,UAAW,oBACXC,YAAa,CACT,KAAQnD,EAAUtM,cAAcyF,MAAM,KAAK,GAC3C,KAAQ+G,EAAQxM,cAAcyF,MAAM,KAAK,KAGjDiK,eAAgB,CACZC,SAAU,GAEdC,MAAOtI,OAAOuI,kBAGdC,EAAe,CACfP,eAAgB,CACZQ,aAAclE,EAAUkE,aACxBC,UAAW,GACXC,OAAQ,CAAC,IAAQ,CAAC,SAAU,aAC5BR,YAAa,CACT,KAAQnD,EAAUtM,cAAcyF,MAAM,KAAK,GAC3C,KAAQ+G,EAAQxM,cAAcyF,MAAM,KAAK,KAGjDiK,eAAgB,CACZQ,YAAa,GAEjBC,oBAAoB,EACpBP,MAAOtI,OAAOuI,kBAGdO,EAAe,CACfb,eAAgB,CACZQ,aAAclE,EAAUkE,aACxBN,YAAa,CACT,KAAQnD,EAAUtM,cAAcyF,MAAM,KAAK,GAC3C,KAAQ+G,EAAQxM,cAAcyF,MAAM,KAAK,KAGjDiK,eAAgB,CACZW,YAAa,GAEjBC,sBAAsB,EACtBV,MAAOtI,OAAOuI,kBAGdU,EAAa,CACbhB,eAAgB,CACZiB,WAAY,CACR,KAAQlE,EAAUtM,cAAcyF,MAAM,KAAK,GAC3C,KAAQ+G,EAAQxM,cAAcyF,MAAM,KAAK,KAGjDmK,MAAOtI,OAAOuI,kBAGdY,EAAoB,CACpBlB,eAAgB,CACZmB,aAAc,CACV,KAAQpE,EAAUtM,cAAcyF,MAAM,KAAK,GAC3C,KAAQ+G,EAAQxM,cAAcyF,MAAM,KAAK,KAGjDmK,MAAOtI,OAAOuI,kBAGdc,EAA4B,CAC5Bf,MAAOtI,OAAOuI,kBAGZe,EAAcvU,YAAYiT,GAC1BuB,EAAiBzU,YAAe0T,GAChCgB,EAAiBjV,YAAeuU,GAChCW,EAAexU,YAAgBgU,GAC/BS,EAAsBpU,YAAoB6T,GAC1CQ,EAA8BpU,YAA4B8T,GAEhEO,QAAQC,IAAI,CAACP,EAAaC,EAAgBC,EAAgBC,EAAcC,EAAqBC,IAA8BG,MAAK,SAAAC,GAE5H,IAAMC,EAAWD,EAAY,GAAGnV,KAAKqV,MACrClC,EAAa,GAAKiC,EAAS/T,OAE3B,IAAI,IAAIoB,EAAI,EAAGA,EAAI2S,EAAS/T,OAAQoB,IAAK,CACrC,IAAIK,EAAIsS,EAAS3S,GACC,WAAfK,EAAE8H,UACDuI,EAAa,UAEQzR,IAAlBoB,EAAEkI,YAA2BiI,EAAO,KAClCC,EAAS,MAEK,UAAfpQ,EAAE8H,WACNuI,EAAa,KACiB,OAA3BrQ,EAAEwS,UAAUC,WAAqBzC,EAAG,KACJ,OAA3BhQ,EAAEwS,UAAUC,WAAqBjR,EAAG,KACT,QAA3BxB,EAAEwS,UAAUC,WAAsBxC,EAAI,KACX,QAA3BjQ,EAAEwS,UAAUC,YAAsBvC,EAAI,MAGtD,IAAMwC,EAAc,CAChB,CACIjD,KAAM,KACNvS,KAAM8S,GAEV,CACIP,KAAM,KACNvS,KAAMsE,GAEV,CACIiO,KAAM,MACNvS,KAAM+S,GAEV,CACIR,KAAM,MACNvS,KAAMgT,GAEV,CACIT,KAAM,SACNvS,KAAMiT,GAEV,CACIV,KAAM,YACNvS,KAAMkT,IAKdvC,EAAawC,GACb1C,EAAY+E,GACZzE,EAAiB,CAAC,cAAgBoC,EAAa,GAAI,SAAWA,EAAa,KAE3E,IAAMsC,EAAgBN,EAAY,GAAGnV,KAAK0V,SAASrU,OACnDsB,QAAQC,IAAI,WAAYuS,EAAY,GAAGnV,KAAK0V,UAC5C/S,QAAQC,IAAI,UAAWuS,EAAY,GAAGnV,KAAK2V,UAC3C,IAAMC,EAAgBT,EAAY,GAAGnV,KAAK2V,SAAStU,OAOnDwP,EAHmB,CAAC,CAChB7Q,KAHgB,CAACyV,EAAeG,MASpC,IAAMC,EAAYV,EAAY,GAAGnV,KAAK8V,UAElCC,EAAa,GAAIC,EAAY,GACjC,IAAQvT,EAAI,EAAGA,EAAIoT,EAAUxU,OAAQoB,IAGjC,IAFA,IAAIK,EAAI+S,EAAUpT,GAAGqT,UAEbG,EAAI,EAAGA,EAAInT,EAAEzB,OAAQ4U,IAAK,CAC9B,IAAIC,EAAIpT,EAAEmT,QAESvU,IAAhBwU,EAAEC,WAA2BD,EAAEC,UAAU9U,OAAS,IAC7C0U,EAAWlL,SAASqL,EAAEE,WACtBL,EAAW7O,KAAKgP,EAAEE,SAClBJ,EAAU9O,KAAK,IAGnB8O,EADUD,EAAWM,QAAQH,EAAEE,WACbF,EAAEC,UAAU9U,QAM1C,IAAIiV,EAAO,GACX,IAASL,EAAI,EAAGA,EAAIF,EAAW1U,OAAQ4U,IACnCK,EAAKpP,KAAK,CAAC,KAAQ6O,EAAWE,GAAI,IAAOD,EAAUC,KAGvDK,EAAKC,MAAK,SAASC,EAAGC,GAClB,OAASD,EAAEE,IAAMD,EAAEC,IAAO,EAAMF,EAAEE,KAAOD,EAAEC,IAAO,GAAK,KAM3D,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAKjV,OAAQsV,IAC7BZ,EAAWY,GAAKL,EAAKK,GAAGpE,KACxByD,EAAUW,GAAKL,EAAKK,GAAGD,IAK3BzF,GAAgB+E,EAAUjS,MAAM,EAAE,KAClCoN,GAAiB4E,EAAWhS,MAAM,EAAE,KAIpC,IAAI6S,EAAW,GACXC,EAAW,GACf1B,EAAY,GAAGnV,KAAK8W,KAAKvU,KAAI,SAAAf,GACzBoV,EAAS1P,KAAK1F,EAAEuV,UAChBF,EAAS3P,KAAK,MAElBiO,EAAY,GAAGnV,KAAKgX,WAAWzU,KAAI,SAAAf,GAC/B,IAAI,IAAIiB,EAAI,EAAGA,EAAIoU,EAASxV,OAAQoB,IAChC,GAAGjB,EAAEuV,WAAaH,EAASnU,GAAI,CAC3BoU,EAASpU,KACT,UAIZ4O,GAAa,CAAC,CAACrR,KAAM6W,KACrBtF,GAAcqF,GACdnF,GAAmB,IACnBE,GAAkB,IAClBE,GAAkB,IAClBE,GAAiB,IACjBE,GAAuB,IAEpB1C,EAAWC,GAAW,GACjBC,IACJC,GAAkB,GAClBF,GAAW,GACXA,GAAW,OAMnByH,KAED,CAAC,CAAE3G,IAENlK,qBAAU,WAON8L,GALc,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,cAMnH,IAEH9L,qBAAU,WACN,IAAI8Q,EAAmB,IAAIrT,KACvBsT,EAAiBpH,EACrB,OAAOG,GACH,IAAK,QACDG,EAAa6G,GACb3G,EAAW4G,GACX,MACJ,IAAK,YACDD,EAAiBlH,QAAQkH,EAAiBjH,UAAY,GACtDkH,EAAenH,QAAQD,EAAME,UAAY,GACzCI,EAAa6G,GACb3G,EAAW4G,GACX,MACJ,IAAK,OACDD,EAAiBlH,QAAQkH,EAAiBjH,UAAY,GACtDM,EAAWR,GACXM,EAAa6G,GACb,MACJ,IAAK,QACDA,EAAiBlH,QAAQkH,EAAiBjH,UAAY,IACtDM,EAAWR,GACXM,EAAa6G,GACb,MACJ,IAAK,OACDA,EAAiBlH,QAAQkH,EAAiBjH,UAAY,KACtDM,EAAWR,GACXM,EAAa6G,GACb,MACJ,IAAK,MACD3G,EAAWR,GACXM,EAAaP,GACb,MACJ,IAAK,QA/STa,EAAa,CAAC,IAAK,IAAK,MACxBI,EAAiB,CAAC,iBAAkB,cACpCN,EAAY6B,IACZzB,EAAe2B,IACfrB,GAAiBgB,IACjBlB,GAAgBwB,IAChBlB,GAAca,IACdf,GAAaqB,IACbjB,GAAmBY,IACnBV,GAAkBgB,IAClBd,GAAkBQ,IAClBN,GAAiBa,IACjBX,GAAuBY,IACvBnD,GAAkB,GAClB0H,YAAW,WAAO5H,GAAW,KAAO,IACpC4H,YAAW,WAAO5H,GAAW,KAAS,OAsSvC,CAACU,IAEDX,EACQ,cAAC8H,EAAA,EAAD,IAIP,qCACC5H,EAAmB,cAAC,IAAD,IAAqB,KACzC,sBAAKjG,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,cAAC8N,EAAA,EAAD,CAASC,YAAY,cACrB,oBAAG/N,UAAU,MAAMgO,KAAK,4BAA4B/V,OAAO,SAA3D,UAAoE,cAAC,IAAD,CAAY+H,UAAU,aAA1F,gCAGJ,sBAAKA,UAAU,wBAAf,UACI,wBAAQA,UAAsB,UAAX0G,EAAqB,sCAAwC,+BAC5ExG,QAAS,WACS,UAAXwG,IACCR,GAAkB,GAClBS,EAAU,WAJtB,mBAOA,wBAAQ3G,UAAsB,cAAX0G,EAAyB,sCAAwC,+BAChFxG,QAAS,WACS,cAAXwG,IACCR,GAAkB,GAClBS,EAAU,eAJtB,uBAOA,wBAAQ3G,UAAsB,SAAX0G,EAAoB,sCAAwC,+BAC3ExG,QAAS,WACS,SAAXwG,IACCR,GAAkB,GAClBS,EAAU,UAJtB,oBAOA,wBAAQ3G,UAAsB,UAAX0G,EAAqB,sCAAwC,+BAC5ExG,QAAS,WACS,UAAXwG,IACCR,GAAkB,GAClBS,EAAU,WAJtB,qBAOA,wBAAQ3G,UAAsB,SAAX0G,EAAoB,sCAAwC,+BAC3ExG,QAAS,WACS,SAAXwG,IACCR,GAAkB,GAClBS,EAAU,UAJtB,sBAOA,wBAAQ3G,UAAsB,QAAX0G,EAAmB,sCAAwC,+BAC1ExG,QAAS,WACS,QAAXwG,IACCR,GAAkB,GAClBS,EAAU,SAJtB,sBAOA,wBAAQ3G,UAAsB,UAAX0G,EAAqB,sCAAwC,+BAC5ExG,QAAS,WACS,UAAXwG,IACCR,GAAkB,GAClBS,EAAU,WAJtB,sBAWJ,sBAAK3G,UAAU,cAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,6BAAK,yBAA2BkH,EAAU,GAAK,QAInD,cAAC,EAAD,CACQ1Q,KAAMwQ,EACNzC,MAAO+C,EACPhE,OAAQ,IACRF,OAAQA,KAGhB,qBAAKpD,UAAU,sCAAf,SACI,6BAMZ,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,wDAIJ,cAAC,EAAD,CACQxJ,KAAMgR,GACNjD,MAAOmD,GACPzN,MAAO,IACPmJ,OAAQA,KAGhB,qBAAKpD,UAAU,sCAAf,SACI,yCAIZ,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,wFAIJ,cAACiO,EAAD,CACQzX,KAAM0R,GACN3D,MAAOyD,GACP1E,OAAQ,MAGhB,qBAAKtD,UAAU,sCAAf,SACI,4CAuBhB,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,2DAIJ,cAACiO,EAAD,CACQzX,KAAM4Q,EACN7C,MAthBP,CAAC,UAAW,WAuhBLjB,OAAQ,MAGhB,qBAAKtD,UAAU,sCAAf,SACI,yCAIZ,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,2DAIJ,cAACiO,EAAD,CACQzX,KAAMoR,GACNrD,MAAOuD,GACPxE,OAAQ,MAGhB,qBAAKtD,UAAU,sCAAf,SACI,yCAIZ,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,sCAAf,SACI,uFAIJ,cAACiO,EAAD,CACQzX,KAAM8R,GACN/D,MAAO6D,GACP9E,OAAQ,MAGhB,qBAAKtD,UAAU,sCAAf,SACI,+CAQpB,qBAAKA,UAAU,kBAAf,SACI,cAAC,IAAD,CACI1E,QAASyB,EACT1B,KAAMmN,e,iCC9mB1B,iCAYeqF,IARf,YACI,OADyC,EAAzBhS,KAEZ,qBAAKmE,UAAU,uBAAf,SACI,cAAC,IAAD,Q,4ECPZ,+BAsBe8N,IAlBf,YAAgD,IAA7BC,EAA4B,EAA5BA,YAA4B,IAAfG,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAKlO,UAAU,UAAf,UACI,6BAAK+N,IACL,oBAAI/N,UAAU,qBAAd,SACKkO,EAAOrW,OAAS,GAAKqW,EAAOnV,KAAI,SAACoV,EAAMlV,GACpC,OAAGkV,EAAKC,KACG,qBAAIpO,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASqO,OAAK,EAACxN,GAAIsN,EAAKC,KAAxB,SAA+BD,EAAKpF,OAApF,MAA6C9P,GAE7C,qBAAI+G,UAAU,0BAAd,cAAiD,+BAAOmO,EAAKpF,OAA7D,MAA6C9P,a","file":"static/js/34.a811af67.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport url from \"./urlApi\";\r\n\r\nexport const getProgramList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/programFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const getContentList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/contentFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const getUserList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/userFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getRedzoneList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/redZoneFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAppUsageList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/appUsageFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getDeviceScheduleList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/deviceUsageScheduleFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAppLimitList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/appUsageLimitFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getModeAsuhList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/childModeAsuhFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAppDetailList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/appIconFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getNotificationList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/broadcastFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getNotificationCategoryList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/notificationCategoryFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAudienceList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/audianceTargetFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getContentTopicList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/contentTopicFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\nexport const getProgramCategoryList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/programCategoryFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\nexport const getAdminList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/userFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const getHKBPList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/HKBPDataFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\n","import React from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\r\n// A great library for fuzzy filtering/sorting items\r\nimport {matchSorter} from 'match-sorter'\r\n\r\nexport function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n      setGlobalFilter(value || undefined)\r\n    }, 200)\r\n  \r\n    return (\r\n      <span>\r\n        Search:{' '}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={e => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n          style={{\r\n            fontSize: '1.1rem',\r\n            border: '0',\r\n          }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n  \r\n  // Define a default UI for filtering\r\n  export function DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n  }) {\r\n    const count = preFilteredRows.length\r\n  \r\n    return (\r\n      <input\r\n        value={filterValue || ''}\r\n        onChange={e => {\r\n          setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n        }}\r\n        placeholder={`Search...`}\r\n      />\r\n    )\r\n  }\r\n  \r\n  // This is a custom filter UI for selecting\r\n  // a unique option from a list\r\n  export function SelectColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    const options = React.useMemo(() => {\r\n      const options = new Set()\r\n      preFilteredRows.forEach(row => {\r\n        if(row.values[id] !== undefined && !options.has(row.values[id])) options.add(row.values[id])\r\n      })\r\n      return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n  \r\n    // Render a multi-select box\r\n    return (\r\n      <select\r\n        value={filterValue}\r\n        onChange={e => {\r\n          setFilter(e.target.value || undefined)\r\n        }}\r\n      >\r\n        <option value=\"\">All</option>\r\n        {options.map((option, i) => (\r\n          <option key={i} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n\r\n  // This is a custom filter UI for selecting\r\n  // a unique option from a list\r\n  export function SelectArrayColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    const options = React.useMemo(() => {\r\n      const options = new Set()\r\n      preFilteredRows.forEach(row => {\r\n        console.log('ini row', row.values[id]);\r\n        console.log('ini tipe row', row.values[id] instanceof Array)\r\n        console.log('ini length row', row.values[id].length);\r\n        if(row.values[id] instanceof Array && row.values[id].length > 0) {\r\n          for(var i = 0; i< row.values[id].length; i++) {\r\n            var x = row.values[id][i]\r\n            if(x !== undefined && !options.has(x)) options.add(x)\r\n          }\r\n        }\r\n      })\r\n      return [...options.values()]\r\n    }, [id, preFilteredRows])\r\n  \r\n    // Render a multi-select box\r\n    return (\r\n      <select\r\n        value={filterValue}\r\n        onChange={e => {\r\n          setFilter(e.target.value || undefined)\r\n        }}\r\n      >\r\n        <option value=\"\">All</option>\r\n        {options.map((option, i) => (\r\n          <option key={i} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n  \r\n  // This is a custom filter UI that uses a\r\n  // slider to set the filter value between a column's\r\n  // min and max values\r\n  export function SliderColumnFilter({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) {\r\n    // Calculate the min and max\r\n    // using the preFilteredRows\r\n  \r\n    const [min, max] = React.useMemo(() => {\r\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n      preFilteredRows.forEach(row => {\r\n        min = Math.min(row.values[id], min)\r\n        max = Math.max(row.values[id], max)\r\n      })\r\n      return [min, max]\r\n    }, [id, preFilteredRows])\r\n  \r\n    return (\r\n      <>\r\n        <input\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={filterValue || min}\r\n          onChange={e => {\r\n            setFilter(parseInt(e.target.value, 10))\r\n          }}\r\n        />\r\n        <button onClick={() => setFilter(undefined)}>Off</button>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  // This is a custom UI for our 'between' or number range\r\n  // filter. It uses two number boxes and filters rows to\r\n  // ones that have values between the two\r\n  export function NumberRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id },\r\n  }) {\r\n    const [min, max] = React.useMemo(() => {\r\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n      preFilteredRows.forEach(row => {\r\n        min = Math.min(row.values[id], min)\r\n        max = Math.max(row.values[id], max)\r\n      })\r\n      return [min, max]\r\n    }, [id, preFilteredRows])\r\n  \r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <input\r\n          value={filterValue[0] || ''}\r\n          type=\"number\"\r\n          onChange={e => {\r\n            const val = e.target.value\r\n            setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n          }}\r\n          min={min}\r\n          placeholder={`Min (${min})`}\r\n          style={{\r\n            width: '70px',\r\n            marginRight: '0.5rem',\r\n          }}\r\n        />\r\n        to\r\n        <input\r\n          value={filterValue[1] || ''}\r\n          type=\"number\"\r\n          onChange={e => {\r\n            const val = e.target.value\r\n            setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n          }}\r\n          min={min}\r\n          placeholder={`Max (${max})`}\r\n          style={{\r\n            width: '70px',\r\n            marginLeft: '0.5rem',\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export function DateRangeColumnFilter({\r\n    column: { filterValue = [], preFilteredRows, setFilter, id }}) \r\n  {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = new Date('2020-01-01')\r\n        let max = new Date('2099-12-31')\r\n        preFilteredRows.forEach(row => {\r\n            min = row.values[id] ? new Date(row.values[id]) <= min ? new Date(row.values[id]) : min : min\r\n            max = row.values[id] ? new Date(row.values[id]) >= max ? new Date(row.values[id]) : max : max\r\n        });\r\n        return [min, max];\r\n    }, [id, preFilteredRows]);\r\n    // console.log(min, max)\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\"\r\n            }}\r\n        >\r\n            <input\r\n                value={filterValue[0] || min.toISOString().slice(0, 10)}\r\n                type=\"date\"\r\n                min={min.toISOString().slice(0, 10)}\r\n                max={filterValue[1] || max.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value;\r\n                    // console.log(e.target.value);\r\n                    setFilter((old = []) => [val ? (val) : undefined, old[1]]);\r\n                }}\r\n                style={{\r\n                    width: \"130px\",\r\n                    marginRight: \"0.2rem\"\r\n                }}\r\n            />\r\n            to\r\n      <input\r\n                value={filterValue[1] || max.toISOString().slice(0, 10)}\r\n                type=\"date\"\r\n                min={filterValue[0] || min.toISOString().slice(0, 10)}\r\n                max={max.toISOString().slice(0, 10)}\r\n                onChange={e => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [old[0], val ? (val) : undefined]);\r\n                }}\r\n                style={{\r\n                    width: \"130px\",\r\n                    marginLeft: \"0.2rem\"\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n  export function filterGreaterThanOrEqual(rows, id, filterValue) {\r\n    return rows.filter(row => {\r\n      const rowValue = row.values[id]\r\n      return rowValue >= filterValue\r\n    })\r\n  }\r\n\r\n  export function filterLessThanOrEqual(rows, id, filterValue) {\r\n    return rows.filter(row => {\r\n      const rowValue = row.values[id]\r\n      return rowValue <= filterValue\r\n    })\r\n  }\r\n  \r\n  export function fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n  }\r\n  \r\n  // Let the table remove the filter if the string is empty\r\n  fuzzyTextFilterFn.autoRemove = val => !val\r\n\r\n  export function dateBetweenFilterFn(rows, id, filterValues) {\r\n    let sd = new Date(filterValues[0]);\r\n    let ed = new Date(filterValues[1]);\r\n    // console.log(rows, id, filterValues)\r\n    return rows.filter(r => {\r\n        var time = new Date(r.values[id]);\r\n        // console.log(time, ed, sd)\r\n        if (filterValues.length === 0) return rows;\r\n        return (time >= sd && time <= ed);\r\n    });\r\n}\r\n\r\ndateBetweenFilterFn.autoRemove = val => !val;\r\n  ","import React, { useMemo, useEffect, Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter, useFilters, useRowSelect } from 'react-table';\r\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\r\nimport './Table.scss';\r\nimport { DefaultColumnFilter, fuzzyTextFilterFn, dateBetweenFilterFn } from './TableFilter'\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport { FaFilePdf, FaTable, FaBell } from \"react-icons/fa\";\r\n\r\nfunction TableWithFilter({ DATA, COLUMNS, renderRowSubComponent, showCheckbox = false, notifContext = '' }) {\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n          // Add a new fuzzyTextFilterFn filter type.\r\n          fuzzyText: fuzzyTextFilterFn,\r\n          dateBetween: dateBetweenFilterFn,\r\n          // Or, override the default text filter to use\r\n          // \"startWith\"\r\n          text: (rows, id, filterValue) => {\r\n            return rows.filter(row => {\r\n              const rowValue = row.values[id]\r\n              return rowValue !== undefined\r\n                ? String(rowValue)\r\n                    .toLowerCase()\r\n                    .startsWith(String(filterValue).toLowerCase())\r\n                : true\r\n            })\r\n          },\r\n        }),\r\n        []\r\n      )\r\n    \r\n      const defaultColumn = React.useMemo(\r\n        () => ({\r\n          // Let's set up our default Filter UI\r\n          Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n      )\r\n\r\n      const IndeterminateCheckbox = React.forwardRef(\r\n        ({ indeterminate, ...rest }, ref) => {\r\n          const defaultRef = React.useRef()\r\n          const resolvedRef = ref || defaultRef\r\n      \r\n          React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate\r\n          }, [resolvedRef, indeterminate])\r\n      \r\n          return (\r\n            <>\r\n              <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n          )\r\n        }\r\n      )\r\n\r\n    const data = useMemo( () => DATA , [DATA]);\r\n\r\n    const initialState = { hiddenColumns: ['emailUser', 'parentEmail', '_id'] };\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        rows,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        visibleColumns,\r\n        selectedFlatRows,\r\n        state: { selectedRowIds },\r\n        state: {pageIndex, pageSize, expanded},\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable({\r\n        columns: COLUMNS,\r\n        data: data,\r\n        defaultColumn, // Be sure to pass the defaultColumn option\r\n        filterTypes,\r\n        initialState\r\n    }, useFilters\r\n    , useGlobalFilter\r\n    , useSortBy\r\n    , useExpanded\r\n    , usePagination\r\n    , useRowSelect\r\n    , hooks => {\r\n        if(showCheckbox) hooks.visibleColumns.push(columns => [\r\n          // Let's make a column for selection\r\n          {\r\n            id: 'selection',\r\n            // The header can use the table's getToggleAllRowsSelectedProps method\r\n            // to render a checkbox\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            // The cell can use the individual row's getToggleRowSelectedProps method\r\n            // to the render a checkbox\r\n            Cell: ({ row }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n            ),\r\n          },\r\n          ...columns,\r\n        ])\r\n      })\r\n\r\n    const { globalFilter } = state;\r\n\r\n    const downloadAsCSV = () => {\r\n        const currentRecords = rows;\r\n        // console.log(currentRecords);\r\n        var data_to_download = [];\r\n        for (var i = 0; i < currentRecords.length; i++) {\r\n            let record_to_download = {};\r\n            prepareRow(currentRecords[i]);\r\n            // console.log(currentRecords[i].cells);\r\n            for (var colIndex = 0; colIndex < currentRecords[i].cells.length; colIndex++) {\r\n                if(currentRecords[i].cells[colIndex].column.id !== 'rowNumber' &&\r\n                currentRecords[i].cells[colIndex].column.id !== 'selection' &&\r\n                currentRecords[i].cells[colIndex].column.id !== 'buttonStatus') {\r\n                    if(currentRecords[i].cells[colIndex].value && Object.prototype.toString.call(currentRecords[i].cells[colIndex].value) === \"[object Date]\" && !isNaN(currentRecords[i].cells[colIndex].value))\r\n                        record_to_download[currentRecords[i].cells[colIndex].column.Header] =\r\n                        currentRecords[i].cells[colIndex].value.toISOString().split('T')[0];\r\n                    else record_to_download[currentRecords[i].cells[colIndex].column.Header] =\r\n                        currentRecords[i].cells[colIndex].value;\r\n                }\r\n            }\r\n            data_to_download.push(record_to_download);\r\n        }\r\n        return data_to_download;\r\n    }\r\n\r\n    const downloadAsPDF = () => {\r\n        const dataRaw = downloadAsCSV();\r\n        if(dataRaw.length > 0) {\r\n            const unit = \"pt\";\r\n            const size = \"A4\"; // Use A1, A2, A3 or A4\r\n            const orientation = \"landscape\"; // portrait or landscape\r\n\r\n            const marginLeft = 40;\r\n            const doc = new jsPDF(orientation, unit, size);\r\n\r\n            doc.setFontSize(15);\r\n\r\n            const title = \"Report\";\r\n            const headers = [Object.keys(dataRaw[0])];\r\n\r\n            const data = dataRaw.map(e => Object.values(e));\r\n\r\n            let content = {\r\n                startY: 50,\r\n                head: headers,\r\n                body: data\r\n            };\r\n\r\n            doc.text(title, marginLeft, 40);\r\n            doc.autoTable(content);\r\n            doc.save(\"report.pdf\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"tools\">\r\n            <div className=\"table_props\">\r\n                <span>Total: {rows.length} Data</span>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"table_props_input\"\r\n                    placeholder=\"Search\"\r\n                    value={ globalFilter || '' }\r\n                    onChange={(e) => {\r\n                        setGlobalFilter(e.currentTarget.value);\r\n                    }}\r\n                />\r\n            </div>\r\n            <button className=\"btn_tools\"><FaTable/> <CSVLink data={downloadAsCSV()}>Download as CSV</CSVLink></button>\r\n            <button className=\"btn_tools\" onClick={downloadAsPDF}><FaFilePdf/> Download as PDF</button>\r\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\r\n                    localStorage.setItem('notifContext', notifContext);\r\n                    // console.log(localStorage.getItem('notifContext'));\r\n                    var stringEmail = [];\r\n                    // console.log(selectedFlatRows);\r\n                    var jsonData = [];\r\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\r\n                        stringEmail.push(selectedFlatRows[i].original.emailUser);\r\n                        if(selectedFlatRows[i].original.userType === 'child') {\r\n                            if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\r\n                        }\r\n                        // console.log(stringEmail);\r\n                        jsonData.push(selectedFlatRows[i].original);\r\n                    }\r\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\r\n                    // console.log(localStorage.getItem('jsonData'));\r\n                    localStorage.setItem('emailTo', stringEmail.toString());\r\n                    // console.log(localStorage.getItem('emailTo'));\r\n                    localStorage.setItem('selectedUserType', 'child');\r\n                }}>Send Notifications to Child</NavLink></button>\r\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to Child</span></button> : null}\r\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\r\n                    localStorage.setItem('notifContext', notifContext);\r\n                    // console.log(localStorage.getItem('notifContext'));\r\n                    var stringEmail = [];\r\n                    // console.log(selectedFlatRows);\r\n                    var jsonData = [];\r\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\r\n                        if(selectedFlatRows[i].original.parentEmail !== undefined) {\r\n                            if(!stringEmail.some(r => selectedFlatRows[i].original.parentEmail.includes(r))) {\r\n                                if(selectedFlatRows[i].original.userType === 'child') stringEmail.push(...selectedFlatRows[i].original.parentEmail);\r\n                                else stringEmail.push(selectedFlatRows[i].original.emailUser);\r\n                            }\r\n                        }\r\n                        // console.log(stringEmail);\r\n                        jsonData.push(selectedFlatRows[i].original);\r\n                    }\r\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\r\n                    // console.log(localStorage.getItem('jsonData'));\r\n                    localStorage.setItem('emailTo', stringEmail.toString());\r\n                    // console.log(localStorage.getItem('emailTo'));\r\n                    localStorage.setItem('selectedUserType', 'parent');\r\n                }}>Send Notifications to Parent</NavLink></button>\r\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to Parent</span></button> : null}\r\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\r\n                    localStorage.setItem('notifContext', notifContext);\r\n                    // console.log(localStorage.getItem('notifContext'));\r\n                    var stringEmail = [];\r\n                    // console.log(selectedFlatRows);\r\n                    var jsonData = [];\r\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\r\n                        if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\r\n                        if(selectedFlatRows[i].original.parentEmail !== undefined) {\r\n                            if(!stringEmail.some(r => selectedFlatRows[i].original.parentEmail.includes(r))) stringEmail.push(selectedFlatRows[i].original.parentEmail);\r\n                        }\r\n                        // console.log(stringEmail);\r\n                        jsonData.push(selectedFlatRows[i].original);\r\n                    }\r\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\r\n                    // console.log(localStorage.getItem('jsonData'));\r\n                    localStorage.setItem('emailTo', stringEmail.toString());\r\n                    // console.log(localStorage.getItem('emailTo'));\r\n                    localStorage.setItem('selectedUserType', 'all');\r\n                }}>Send Notifications to All</NavLink></button>\r\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to All</span></button> : null}\r\n        </div>\r\n        <div className=\"utils\">\r\n            <div className=\"pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                {'<<'}\r\n                </button>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                {'<'}\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                {'>'}\r\n                </button>\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                {'>>'}\r\n                </button>\r\n                <span>\r\n                Page {' '}\r\n                <strong>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                </strong>\r\n                </span>\r\n                <span>\r\n                | Go to page:\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue={pageIndex + 1}\r\n                        onChange={e => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                            gotoPage(page)\r\n                        }}\r\n                    />\r\n                </span>\r\n                <select\r\n                value={pageSize}\r\n                onChange={e => {\r\n                    setPageSize(Number(e.target.value))\r\n                }}\r\n                >\r\n                {[10, 15, 20].map(pageSize => (\r\n                    <option key={pageSize} value={pageSize}>\r\n                        Show {pageSize}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div className=\"table_container\">\r\n       <table {...getTableProps()}>\r\n           <thead>\r\n               {headerGroups.map(headerGroup => (\r\n                   <>\r\n                   <tr {...headerGroup.getHeaderGroupProps()}>\r\n                       {headerGroup.headers.map(column => (\r\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                               {column.render('Header')}\r\n                                <span>\r\n                                    {column.isSorted\r\n                                    ? column.isSortedDesc\r\n                                        ? (<BiCaretDown/>)\r\n                                        : (<BiCaretUp/>)\r\n                                    : ''}\r\n                                </span>\r\n                            </th>\r\n                       ))}\r\n                   </tr>\r\n                   <tr>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th>{column.canFilter ? column.render('Filter') : null}</th>\r\n                        ))}\r\n                   </tr>\r\n                   </>\r\n               ))}\r\n           </thead>\r\n           <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <Fragment {...row.getRowProps()}>\r\n                            <tr>\r\n                                {row.cells.map(cell => {\r\n                                    // console.log(cell);\r\n                                    return <td {...cell.getCellProps()} className={(cell.value && !Array.isArray(cell.value)) || (Array.isArray(cell.value) && cell.value.length > 0) || cell.column.id === 'selection'\r\n                                    || cell.column.id === 'rowNumber' ? \"cell\" : \"cell\"}> {cell.column.id !== 'rowNumber' ? \r\n                                         cell.render('Cell')\r\n                                        : i + 1 + (pageIndex * pageSize)} </td>\r\n                                })}\r\n                            </tr>\r\n                            {row.isExpanded ? (\r\n                                <tr>\r\n                                    <td colSpan={visibleColumns.length}>\r\n                                        {/*\r\n                                            Inside it, call our renderRowSubComponent function. In reality,\r\n                                            you could pass whatever you want as props to\r\n                                            a component like this, including the entire\r\n                                            table instance. But for this example, we'll just\r\n                                            pass the row\r\n                                            */}\r\n                                        {renderRowSubComponent({ row })}\r\n                                    </td>\r\n                                </tr>\r\n                            ) : null}\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n           </tbody>\r\n       </table>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default TableWithFilter\r\n","\r\n\r\nconst Columns = [\r\n    {\r\n        Header: 'Pendidikan',\r\n        accessor: 'studyLevel',\r\n        disableFilters: true\r\n    },\r\n    {\r\n        Header: 'Jumlah Anak',\r\n        accessor: 'totalChild',\r\n        disableFilters: true\r\n    },\r\n    {\r\n        Header: 'Jumlah Anak Pemakaian Anak Tak Wajar',\r\n        accessor: 'totalChildOver',\r\n        disableFilters: true,\r\n        Cell: ({value}) => {\r\n            return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\r\n        }\r\n    },\r\n\r\n    {\r\n        Header: 'Rata-Rata Waktu Pemakaian',\r\n        accessor: 'avgChildOver',\r\n        disableFilters: true,\r\n        Cell: ({value}) => {\r\n            return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\r\n        }\r\n    },\r\n\r\n    {\r\n        Header: 'Standar Waktu Pemakaian Wajar',\r\n        accessor: 'standardUsage',\r\n        disableFilters: true\r\n    },\r\n\r\n    {\r\n        Header: 'Jumlah Anak Pemakaian Anak Wajar',\r\n        accessor: 'totalChildUnder',\r\n        disableFilters: true,\r\n        Cell: ({value}) => {\r\n            return <p style={{ color: 'blue', fontWeight: 'bold' }}>{value}</p>\r\n        }\r\n    },\r\n    {\r\n        Header: 'Rata-Rata Waktu Pemakaian',\r\n        accessor: 'avgChildUnder',\r\n        disableFilters: true,\r\n        Cell: ({value}) => {\r\n            return <p style={{ color: 'blue', fontWeight: 'bold' }}>{value}</p>\r\n        }\r\n    },\r\n];\r\n\r\n// const Columns = [\r\n//     {\r\n//         name: 'No.',\r\n//         options: {\r\n//             filter: false,\r\n//             customBodyRender: (value, meta) => {\r\n//                 return (\r\n//                     meta.rowIndex + 1\r\n//                 );\r\n//             },\r\n//             setCellProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\r\n//             setCellHeaderProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Nama',\r\n//         name: 'nameUser',\r\n//         options: {\r\n//             filter: false,\r\n//             sort: true,\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Nama Orangtua',\r\n//         name: 'parentName',\r\n//         options: {\r\n//             filter: false,\r\n//             sort: true,\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Sekolah',\r\n//         name: 'childInfo.schoolName',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Pendidikan',\r\n//         name: 'childInfo',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//             customBodyRender: (value, tableMeta, updateValue) => {\r\n//                 // console.log(value);\r\n//                 if(value != null) return value.StudyLevel;\r\n//                 else return ' '\r\n//             },\r\n\r\n//             setCellProps: () => ({ style: { minWidth: \"100px\", maxWidth: \"100px\" }}),\r\n//             setCellHeaderProps: () => ({ style: { minWidth: \"100px\", maxWidth: \"100px\" }}),\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Screen Time Status',\r\n//         name:'screenTimeStatus',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Status Mode Asuh',\r\n//         name:'modeAsuh',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Aplikasi yang Diblokir',\r\n//         name: 'blockedApps',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//             filterType: 'textField'\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Aplikasi yang Dibatasi',\r\n//         name: 'limitedApps',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//             filterType: 'textField'\r\n//         }\r\n//     },\r\n//     {\r\n//         label: 'Status Jadwal Penggunaan',\r\n//         name: 'usageScheduleStatus',\r\n//         options: {\r\n//             filter: true,\r\n//             sort: true,\r\n//         }\r\n//     },\r\n//     // {\r\n//     //     label: 'Tgl. Registrasi',\r\n//     //     name: 'dateCreated',\r\n//     //     Cell: ({ value }) => {\r\n//     //         return <p>{value.split('T')[0]}</p>\r\n//     //     }\r\n//     // },\r\n// ];\r\n\r\nexport default Columns;","import React, { useState } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\nconst StackedChart = (props) => {\r\n\r\n    const [subsState] = useState({\r\n        series: props.data,\r\n        options: {\r\n            colors: props.colors,\r\n            chart: {\r\n                type: \"bar\",\r\n                height: props.height,\r\n                stacked: true,\r\n                toolbar: {\r\n                    show: true\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        legend: {\r\n                        position: \"bottom\",\r\n                        offsetX: -10,\r\n                        offsetY: 0\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: \"category\",\r\n                categories: props.label,\r\n                decimalsInFloat: 0\r\n            },\r\n            yaxis: [\r\n                {\r\n                    labels: {\r\n                        formatter: function(val) {\r\n                            return val.toFixed(0);\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            legend: {\r\n                position: \"bottom\",\r\n                offsetX: -10\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            }\r\n        }\r\n    });\r\n\r\n    if(props.data.length === 0) return <h2>No Data</h2>\r\n    return <ApexCharts options={subsState.options} series={subsState.series} type={subsState.options.chart.type} height={subsState.options.chart.height} />\r\n}\r\n\r\nexport default StackedChart;\r\n","import React, { useState } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\nconst StackedChart = (props) => {\r\n\r\n    const [subsState] = useState({\r\n        series: props.data,\r\n        options: {\r\n            chart: {\r\n              type: 'bar',\r\n              height: props.height,\r\n              toolbar: {\r\n                show: true\r\n              },\r\n              zoom: {\r\n                  enabled: true\r\n              }\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                borderRadius: 4,\r\n                horizontal: true,\r\n              }\r\n            },\r\n            dataLabels: {\r\n              style: {\r\n                colors: ['#DDDDDD']\r\n              }\r\n            },\r\n            xaxis: {\r\n                categories: props.label\r\n            },\r\n        }\r\n    });\r\n\r\n    if(props.data.length === 0) return <h2>No Data</h2>\r\n    return <ApexCharts options={subsState.options} series={subsState.series} type={subsState.options.chart.type} height={subsState.options.chart.height} />\r\n}\r\n\r\nexport default StackedChart;\r\n","import React, { useState } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\nconst DonutChart = (props) => {\r\n\r\n    const [subsState] = useState({\r\n        series: props.data,\r\n        options: {\r\n            colors: props.colors,\r\n            chart: {\r\n                width: props.width,\r\n                type: 'donut',\r\n                toolbar: {\r\n                  show: true\r\n                },\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    donut: {\r\n                        labels: {\r\n                            show: true,\r\n                            total: {\r\n                                showAlways: true,\r\n                                show: true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            labels: props.label,\r\n            tooltip: {\r\n                enabled: true,\r\n                custom: ({ series, seriesIndex, dataPointIndex, w }) => {\r\n                    let total = 0;\r\n                    for (let x of series) { total += x; }\r\n                    let selected = series[seriesIndex];\r\n                    return '<div style=\"color:white;padding:5px;background-color:' + props.colors[seriesIndex] + ';font-weight:bold\" >' + w.config.labels[seriesIndex] + \": \" + selected + \" (\" + (selected / total * 100).toFixed(1) + \"%)\" + '</div>';\r\n                }\r\n            },\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n          \r\n          \r\n        \r\n    });\r\n\r\n    if(props.data.length === 0) return <h2>No Data</h2>\r\n    return <ApexCharts options={subsState.options} series={subsState.series} type={subsState.options.chart.type} />\r\n}\r\n\r\nexport default DonutChart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Dashboard.scss';\r\nimport Table from './../../../components/UI/Table/TableWithFilter'\r\nimport { FiArrowRightCircle, FiAlertCircle } from 'react-icons/fi';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Heading from '../../../components/UI/Heading/Heading';\r\nimport axios from 'axios';\r\nimport columns from'./columns';\r\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\r\nimport RKLoaderSpinner from '../../../components/UI/RKLoaderSpinner/RKLoader';\r\nimport { useHistory } from 'react-router';\r\nimport { getContentList, getProgramList, getUserList, getAppUsageList, getNotificationCategoryList, getNotificationList } from '../../../components/API/filter';\r\nimport {FaWhatsapp} from 'react-icons/fa'\r\n\r\nimport StackedChart from './component/StackedChart'\r\nimport BarChart from './component/BarChart'\r\nimport DonutChart from './component/DonutChart'\r\n\r\nfunction Dashboard() {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [isLoadingSpinner, setLoadingSpinner] = useState(false);\r\n\r\n    const localData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    const absStart = new Date(\"2021-01-01\");\r\n    const today = new Date();\r\n    today.setDate(today.getDate() + 1);\r\n\r\n    const [period, setPeriod] = useState('today');\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [userData, setUserData] = useState([]);\r\n    const [countUser, setCountUser] = useState([0,0,0]);\r\n    const [conProgData, setConProgData] = useState([]);\r\n    const [userDataLabel, setUserDataLabel] = useState([\"Orang tua: 0\", \"Anak: 0\"]);\r\n    const conProgDataLabel = [\"Artikel\", \"Program\"];\r\n    const [topUsageData, setTopUsageData] = useState([]);\r\n    const [topUsageLabel, setTopUsageLabel] = useState([]);\r\n    const [notifData, setNotifData] = useState([]);\r\n    const [notifLabel, setNotifLabel] = useState([]);\r\n    const [topicCountLabel, setTopicCountLabel] = useState([]);\r\n    const [topicCountData, setTopicCountData] = useState([]);\r\n    const [topicViewLabel, setTopicViewLabel] = useState([]);\r\n    const [topicViewData, setTopicViewData] = useState([]);\r\n    const [usageStudyLevelData, setUsageStudyLevelData] = useState([]);\r\n    const [colors, setColors] = useState([]);\r\n\r\n    const topUsageLabelDummy = [\"Youtube\", \"Google\", \"Facebook\", \"Twitter\", \"Chrome\", \"Telegram\", \"TikTok\", \"Mobile Legends\", \"Chess\", \"Minecraft\"];\r\n    const notifLabelDummy = [\"Pembayaran\", \"Pemberitahuan\", \"Promosi\", \"Laporan\"];\r\n    const topicLabelDummy = [\"Agama\", \"Pendidikan\", \"Kesehatan\", \"Keluarga\", \"Berita Internal\", \"Berita Nasional\", \"Berita Dunia\", \"Informasi Teknologi\", \"Olah Raga\", \"Umum\"];\r\n    \r\n    const userDummy = [\r\n        {\r\n            name: \"TK\",\r\n            data: [0, 12]\r\n        },\r\n        {\r\n            name: \"SD\",\r\n            data: [0, 50]\r\n        },\r\n        {\r\n            name: \"SMP\",\r\n            data: [0, 121]\r\n        },\r\n        {\r\n            name: \"SMA\",\r\n            data: [0, 68]\r\n        },\r\n        {\r\n            name: \"Parent\",\r\n            data: [250, 0]\r\n        },\r\n        {\r\n            name: \"Co-Parent\",\r\n            data: [99, 0]\r\n        }\r\n    ];\r\n    const conProgDummy = [{data: [200, 50]}];\r\n    const topUsageDummy = [500000, 153258, 67384, 53321, 39212, 19030, 4239, 3990, 3218, 1089];\r\n    const notifDummy = [{data:[100, 231, 8 ,300]}];\r\n    const topicCountDummy = [{data: [20,\r\n        230,\r\n        87,\r\n        121,\r\n        66,\r\n        34,\r\n        22,\r\n        312,\r\n        97,\r\n        38]}];\r\n    const topicViewDummy = [{data:[23000,\r\n        18000,\r\n        10000,\r\n        9500,\r\n        8700,\r\n        6000,\r\n        4000,\r\n        21500,\r\n        4200,\r\n        1200]}];\r\n\r\n    function retrieveDummy() {\r\n        setCountUser([500, 349, 151]);\r\n        setUserDataLabel(['Orang tua: 349', 'Anak: 151']);\r\n        setUserData(userDummy);\r\n        setConProgData(conProgDummy);\r\n        setTopUsageLabel(topUsageLabelDummy);\r\n        setTopUsageData(topUsageDummy);\r\n        setNotifLabel(notifLabelDummy);\r\n        setNotifData(notifDummy);\r\n        setTopicCountLabel(topicLabelDummy);\r\n        setTopicCountData(topicCountDummy);\r\n        setTopicViewLabel(topicLabelDummy);\r\n        setTopicViewData(topicViewDummy);\r\n        setUsageStudyLevelData(usageStudyLevelDummy);\r\n        setLoadingSpinner(false);\r\n        setTimeout(() => {setLoading(true)},50);\r\n        setTimeout(() => {setLoading(false)}, 80);\r\n    }\r\n\r\n    const usageStudyLevelDummy = [\r\n        {\"studyLevel\": 'SD', \"totalChild\": 50, \"totalChildOver\": 35, \"avgChildOver\": 14, \"standardUsage\": 10, \"totalChildUnder\": 15, \"avgChildUnder\": 8},\r\n        {\"studyLevel\": 'SMP', \"totalChild\": 121, \"totalChildOver\": 108, \"avgChildOver\": 16, \"standardUsage\": 12, \"totalChildUnder\": 13, \"avgChildUnder\": 11},\r\n        {\"studyLevel\": 'SMA', \"totalChild\": 68, \"totalChildOver\": 54, \"avgChildOver\": 15, \"standardUsage\": 14, \"totalChildUnder\": 14, \"avgChildUnder\": 10},\r\n    ]\r\n    \r\n\r\n    function retrieveData() {\r\n        var tk = [0,0],\r\n        sd = [0, 0],\r\n        smp = [0,0],\r\n        sma = [0,0],\r\n        parent = [0,0],\r\n        coparent = [0,0];\r\n\r\n        var countingUser = [0,0,0];\r\n\r\n        let paramUser = {\r\n            whereKeyValues: {\r\n                packageId: \"com.roi.ruangortu\",\r\n                dateCreated: {\r\n                    \"$gte\": startDate.toISOString().split('T')[0],\r\n                    \"$lte\": endDate.toISOString().split('T')[0]\r\n                }\r\n            },\r\n            orderKeyValues: {\r\n                nameUser: 1\r\n            },\r\n            limit: Number.MAX_SAFE_INTEGER\r\n        }\r\n\r\n        let paramContent = {\r\n            whereKeyValues: {\r\n                cobrandEmail: localData.cobrandEmail,\r\n                programId: \"\",\r\n                status: {\"$in\" : [\"active\", \"inactive\"]},\r\n                dateCreated: {\r\n                    \"$gte\": startDate.toISOString().split('T')[0],\r\n                    \"$lte\": endDate.toISOString().split('T')[0]\r\n                }\r\n            },\r\n            orderKeyValues: {\r\n                contentName: 1\r\n            },\r\n            includeContentData: false,\r\n            limit: Number.MAX_SAFE_INTEGER\r\n        }\r\n\r\n        let paramProgram = {\r\n            whereKeyValues: {\r\n                cobrandEmail: localData.cobrandEmail,\r\n                dateCreated: {\r\n                    \"$gte\": startDate.toISOString().split('T')[0],\r\n                    \"$lte\": endDate.toISOString().split('T')[0]\r\n                }\r\n            },\r\n            orderKeyValues: {\r\n                programName: 1\r\n            },\r\n            includeThumbnailData: false,\r\n            limit: Number.MAX_SAFE_INTEGER\r\n        }\r\n\r\n        let paramUsage = {\r\n            whereKeyValues: {\r\n                dateCreate: {\r\n                    \"$gte\": startDate.toISOString().split('T')[0],\r\n                    \"$lte\": endDate.toISOString().split('T')[0]\r\n                }\r\n            },\r\n            limit: Number.MAX_SAFE_INTEGER\r\n        }\r\n\r\n        let paramNotification = {\r\n            whereKeyValues: {\r\n                scheduleTime: {\r\n                    \"$gte\": startDate.toISOString().split('T')[0],\r\n                    \"$lte\": endDate.toISOString().split('T')[0]\r\n                }\r\n            },\r\n            limit: Number.MAX_SAFE_INTEGER\r\n        }\r\n\r\n        let paramNotificationCategory = {\r\n            limit: Number.MAX_SAFE_INTEGER\r\n        }\r\n\r\n        const promiseUser = getUserList(paramUser);\r\n        const promiseContent = getContentList(paramContent);\r\n        const promiseProgram = getProgramList(paramProgram);\r\n        const promiseUsage = getAppUsageList(paramUsage);\r\n        const promiseNotification = getNotificationList(paramNotification);\r\n        const promiseNotificationCategory = getNotificationCategoryList(paramNotificationCategory);\r\n\r\n        Promise.all([promiseUser, promiseContent, promiseProgram, promiseUsage, promiseNotification, promiseNotificationCategory]).then(responseAll => {\r\n            // console.log(responseAll[0]);\r\n            const dataUser = responseAll[0].data.users;\r\n            countingUser[0] = dataUser.length;\r\n            // // console.log(dataUser);\r\n            for(var i = 0; i < dataUser.length; i++) {\r\n                let x = dataUser[i];\r\n                if(x.userType === 'parent') {\r\n                    countingUser[1]++;\r\n                    // // console.log(\"Parent email: \" + x.parentEmail);\r\n                    if(x.parentEmail === undefined) parent[0]++;\r\n                    else coparent[0]++;\r\n                }\r\n                else if(x.userType === 'child') {\r\n                    countingUser[2]++;\r\n                    if(x.childInfo.StudyLevel === 'TK') tk[1]++;\r\n                    else if(x.childInfo.StudyLevel === 'SD') sd[1]++;\r\n                    else if(x.childInfo.StudyLevel === 'SMP') smp[1]++;\r\n                    else if(x.childInfo.StudyLevel === 'SMA') sma[1]++;\r\n                }\r\n            }\r\n            const userDataObj = [\r\n                {\r\n                    name: \"TK\",\r\n                    data: tk\r\n                },\r\n                {\r\n                    name: \"SD\",\r\n                    data: sd\r\n                },\r\n                {\r\n                    name: \"SMP\",\r\n                    data: smp\r\n                },\r\n                {\r\n                    name: \"SMA\",\r\n                    data: sma\r\n                },\r\n                {\r\n                    name: \"Parent\",\r\n                    data: parent\r\n                },\r\n                {\r\n                    name: \"Co-Parent\",\r\n                    data: coparent\r\n                }\r\n            ]\r\n            \r\n            // console.log(\"Colors length: \" + colors.length);\r\n            setCountUser(countingUser);\r\n            setUserData(userDataObj);\r\n            setUserDataLabel(['Orang tua: ' + countingUser[1], 'Anak: ' + countingUser[2]]);\r\n\r\n            const contentLength = responseAll[1].data.contents.length;\r\n            console.log('Contents', responseAll[1].data.contents);\r\n            console.log('Program', responseAll[2].data.programs);\r\n            const programLength = responseAll[2].data.programs.length;\r\n\r\n            const dataConProg = [contentLength, programLength];\r\n            // // console.log(dataConProg);\r\n            const conProgObj = [{\r\n                data: dataConProg\r\n            }];\r\n            setConProgData(conProgObj);\r\n\r\n            // // console.log(responseAll[3].data);\r\n\r\n            const usageData = responseAll[3].data.appUsages;\r\n            // // console.log(usageData);\r\n            var usageLabel = [], usageFreq = [];\r\n            for(var i = 0; i < usageData.length; i++) {\r\n                let x = usageData[i].appUsages;\r\n                // // console.log(x);\r\n                for(var j = 0; j < x.length; j++) {\r\n                    let y = x[j];\r\n                    // // console.log(y);\r\n                    if(y.usageHour !== undefined && y.usageHour.length > 0) {\r\n                        if(!usageLabel.includes(y.appName)) {\r\n                            usageLabel.push(y.appName);\r\n                            usageFreq.push(0);\r\n                        }\r\n                        let idx = usageLabel.indexOf(y.appName);\r\n                        usageFreq[idx] += y.usageHour.length;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //1) combine the arrays:\r\n            var list = [];\r\n            for (var j = 0; j < usageLabel.length; j++) \r\n                list.push({'name': usageLabel[j], 'age': usageFreq[j]});\r\n\r\n            //2) sort:\r\n            list.sort(function(a, b) {\r\n                return ((a.age < b.age) ? 1 : ((a.age == b.age) ? 0 : -1));\r\n                //Sort could be modified to, for example, sort on the age \r\n                // if the name is the same.\r\n            });\r\n\r\n            //3) separate them back out:\r\n            for (var k = 0; k < list.length; k++) {\r\n                usageLabel[k] = list[k].name;\r\n                usageFreq[k] = list[k].age;\r\n            }\r\n            // // console.log(usageLabel.slice(0,10));\r\n            // // console.log(usageFreq.slice(0,10));\r\n\r\n            setTopUsageData(usageFreq.slice(0,10));\r\n            setTopUsageLabel(usageLabel.slice(0,10));\r\n\r\n            // console.log(responseAll[4].data);\r\n            // console.log(responseAll[5].data);\r\n            var notifCat = [];\r\n            var notifDat = [];\r\n            responseAll[5].data.Data.map(e => {\r\n                notifCat.push(e.category);\r\n                notifDat.push(0);\r\n            });\r\n            responseAll[4].data.resultData.map(e => {\r\n                for(var i = 0; i < notifDat.length; i++) {\r\n                    if(e.category === notifCat[i]) {\r\n                        notifDat[i]++;\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            setNotifData([{data: notifDat}]);\r\n            setNotifLabel(notifCat);\r\n            setTopicCountLabel([]);\r\n            setTopicCountData([]);\r\n            setTopicViewLabel([]);\r\n            setTopicViewData([]);\r\n            setUsageStudyLevelData([]);\r\n\r\n            if(isLoading) setLoading(false);\r\n            else if(isLoadingSpinner) {\r\n                setLoadingSpinner(false);\r\n                setLoading(true);\r\n                setLoading(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveData();\r\n\r\n    }, [, endDate]);\r\n\r\n    useEffect(() => {\r\n\r\n        var colors2 = ['#44a6cc', '#cc44a6', '#a6cc44', '#44cca6', '#cca644', '#a644cc', '#117399', '#991173', '#739911', '#119973'];\r\n        // for(var i = 0; i < 10; i++) {\r\n        //     const colorPallete = \"#\" + ('00000'+(Math.random()*(1<<24)|0).toString(16)).slice(-3);\r\n        //     colors2.push(colorPallete);\r\n        // }\r\n        setColors(colors2);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        var changedStartDate = new Date();\r\n        var changedEndDate = today;\r\n        switch(period) {\r\n            case 'today':\r\n                setStartDate(changedStartDate);\r\n                setEndDate(changedEndDate);\r\n                break;\r\n            case 'yesterday': \r\n                changedStartDate.setDate(changedStartDate.getDate() - 1);\r\n                changedEndDate.setDate(today.getDate() - 1);\r\n                setStartDate(changedStartDate);\r\n                setEndDate(changedEndDate);\r\n                break;\r\n            case 'week': \r\n                changedStartDate.setDate(changedStartDate.getDate() - 7);\r\n                setEndDate(today);\r\n                setStartDate(changedStartDate);\r\n                break;\r\n            case 'month': \r\n                changedStartDate.setDate(changedStartDate.getDate() - 30);\r\n                setEndDate(today);\r\n                setStartDate(changedStartDate);\r\n                break;\r\n            case 'year': \r\n                changedStartDate.setDate(changedStartDate.getDate() - 365);\r\n                setEndDate(today);\r\n                setStartDate(changedStartDate);\r\n                break;\r\n            case 'all': \r\n                setEndDate(today);\r\n                setStartDate(absStart);\r\n                break;\r\n            case 'dummy':\r\n                retrieveDummy();\r\n                break;\r\n            default:\r\n                break;           \r\n        }\r\n    }, [period]);\r\n\r\n    if(isLoading) {\r\n        return <RKLoader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {isLoadingSpinner ? <RKLoaderSpinner/> : null}\r\n        <div className=\"Dashboard\">\r\n            <div className='div1'>\r\n                <Heading headingName=\"DASHBOARD\" />\r\n                <a className='wa2' href='http://wa.me/628119004410' target=\"_blank\"><FaWhatsapp className='whatshap'/> Need Help? Click Here!</a>\r\n            </div>\r\n\r\n            <div className=\"Dashboard_real_period\">\r\n                <button className={period === 'today' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'today') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('today');\r\n                        }\r\n                    }}>Today</button>\r\n                <button className={period === 'yesterday' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'yesterday') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('yesterday');\r\n                        }\r\n                    }}>Yesterday</button>\r\n                <button className={period === 'week' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'week') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('week');\r\n                        }\r\n                    }}>7 Days</button>\r\n                <button className={period === 'month' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'month') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('month');\r\n                        }\r\n                    }}>30 Days</button>\r\n                <button className={period === 'year' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'year') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('year');\r\n                        }\r\n                    }}>365 Days</button>\r\n                <button className={period === 'all' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'all') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('all');\r\n                        }\r\n                    }}>All Time</button>\r\n                <button className={period === 'dummy' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\r\n                    onClick={() => {\r\n                        if(period !== 'dummy') {\r\n                            setLoadingSpinner(true);\r\n                            setPeriod('dummy');\r\n                        }\r\n                    }}>Dummy</button>\r\n            </div>\r\n            \r\n\r\n            {/* Dashboard Cards  */}\r\n            <div className=\"Dashboard_1\">\r\n                <div className=\"Dashboard_1_cards\">\r\n                    <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>{'Populasi User (Total: ' + countUser[0] + ')'}</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <StackedChart\r\n                                    data={userData}\r\n                                    label={userDataLabel}\r\n                                    height={400}\r\n                                    colors={colors}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p></p>\r\n                                {/* <p>{'Orangtua: ' + countUser[1]}</p>\r\n                                <p>{'Anak: ' + countUser[2]}</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>Top 10 Apps by Usage</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <DonutChart\r\n                                    data={topUsageData}\r\n                                    label={topUsageLabel}\r\n                                    width={380}\r\n                                    colors={colors}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>Jumlah Postingan Artikel &amp; Program Berdasarkan Topik</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <BarChart\r\n                                    data={topicCountData}\r\n                                    label={topicCountLabel}\r\n                                    height={400}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>User Population</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <StackedChart\r\n                                    data={userData}\r\n                                    label={userDataLabel}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"Dashboard_1_cards\">\r\n                    <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>Total Artikel &amp; Program</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <BarChart\r\n                                    data={conProgData}\r\n                                    label={conProgDataLabel}\r\n                                    height={200}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>Jumlah Kirim Notifikasi</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <BarChart\r\n                                    data={notifData}\r\n                                    label={notifLabel}\r\n                                    height={350}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Dashboard_1_cards_card\">\r\n                        <div className=\"Dashboard_1_cards_card_item\">\r\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\r\n                                <h3>Jumlah Pageview Artikel &amp; Program Berdasarkan Topik</h3>\r\n                            </div>\r\n                            \r\n\r\n                            <BarChart\r\n                                    data={topicViewData}\r\n                                    label={topicViewLabel}\r\n                                    height={600}\r\n                            />\r\n                            \r\n                            <div className=\"Dashboard_1_cards_card_item-details\">\r\n                                <p> </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End Dashboard Cards  */}\r\n\r\n            <div className=\"Dashboard_table\">\r\n                <Table\r\n                    COLUMNS={columns}\r\n                    DATA={usageStudyLevelData}\r\n                />\r\n            </div>\r\n\r\n            {/* Dashboard Cards  */}\r\n            {/* <div className=\"Dashboard_1_cards\">\r\n                <div className=\"Dashboard_1_cards_item\">\r\n                    <div className=\"Dashboard_1_cards_item-heading\">\r\n                        <h3>Total Program Views</h3>\r\n                        <select\r\n                            name=\"programTotalSelect\"\r\n                            value={programTotalSelect}\r\n                            onChange={(e) => {\r\n                                // console.log('bruh');\r\n                                // console.log(e.currentTarget.value);\r\n                                setProgramTotalSelect(e.currentTarget.value);\r\n                                setUpdatingActive(true);\r\n                            }}>\r\n                            <option value=\"1\">Today</option>\r\n                            <option value=\"2\">Last 7 Days</option>\r\n                            <option value=\"3\">Last 30 Days</option>\r\n                            <option value=\"4\">Last 365 Days</option>\r\n                            <option value=\"5\">All Time</option>\r\n                        </select>\r\n                    </div>\r\n                    <h1>{programTotal}</h1>\r\n                    \r\n                    \r\n                    <div className=\"Dashboard_1_cards_item-details\">\r\n                        <NavLink to=\"/program\">Lihat Detail \r\n                            <FiArrowRightCircle className=\"Dashboard_1_cards_item-icon\" />\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Dashboard_1_cards_item\">\r\n                    <div className=\"Dashboard_1_cards_item-heading\">\r\n                        <h3>Total Content Views</h3>\r\n                        <select\r\n                            name=\"contentTotalSelect\"\r\n                            value={contentTotalSelect}\r\n                            onChange={(e) => {\r\n                                // console.log('bruh');\r\n                                // console.log(e.currentTarget.value);\r\n                                setContentTotalSelect(e.currentTarget.value);\r\n                                setUpdatingActive(true);\r\n                            }}>\r\n                            <option value=\"1\">Today</option>\r\n                            <option value=\"2\">Last 7 Days</option>\r\n                            <option value=\"3\">Last 30 Days</option>\r\n                            <option value=\"4\">Last 365 Days</option>\r\n                            <option value=\"5\">All Time</option>\r\n                        </select>\r\n                    </div>\r\n                    <h1>{contentTotal}</h1>\r\n                    <div className=\"Dashboard_1_cards_item-details\">\r\n                        <NavLink to=\"/content\">Lihat Detail \r\n                            <FiArrowRightCircle className=\"Dashboard_1_cards_item-icon\" />\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            {/* End Dashboard Cards  */}\r\n\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport Spinner from '../Loader/Spinner/Spinner';\r\nimport './RKLoader.scss';\r\n\r\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\r\n    return (\r\n        <div className=\"LoadingFullRkSpinner\">\r\n            <Spinner />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RKLoader\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Heading.scss';\r\n\r\nfunction Heading({ headingName, routes = [] }) {\r\n    \r\n    return (\r\n        <div className=\"Heading\">\r\n            <h1>{headingName}</h1>\r\n            <ul className=\"Heading__breadcumb\">\r\n                {routes.length > 0 && routes.map((item, i) => {\r\n                    if(item.path){\r\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\r\n                    }else{\r\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\r\n                    }\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n"],"sourceRoot":""}