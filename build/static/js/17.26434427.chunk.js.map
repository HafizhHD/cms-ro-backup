{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","containers/CoBrand/Program/EditProgram/EditProgram.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","../node_modules/webpack/buildin/module.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError","Heading","headingName","routes","className","length","map","item","i","path","exact","to","name","Input","placeholder","type","onChange","onBlur","value","message","min","disabled","isError","id","max","memo","_iterableToArray","iter","Symbol","iterator","Object","from","connect","state","console","log","auth","isLoading","dispatch","onEditProgram","_id","cobrandEmail","programName","programDescription","programThumbnailEdit","startDate","history","editProgram","useState","isPageLoading","setPageLoading","program","setProgram","programStartDate","setProgramStartDate","useHistory","JSON","parse","localStorage","getItem","email","useEffect","params","whereKeyValues","axios","method","url","data","headers","then","response","programs","date","split","catch","error","initialValues","ProgramDescription","validationSchema","validationProgramEdit","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","Date","toISOString","PhoneRegex","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programThumbnail","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","endDate","isActive","topics","targetAudience","validationContentEdit","programEdit","query","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","photo","ALERT_CLOSE","toBase64","result","programthumnail","push","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","topic","audi","e","status","getEmbedUrl","hasil","targetAudiance","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","assign","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user","module","exports","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","key","_createClass","protoProps","staticProps","prototype"],"mappings":"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","file":"static/js/17.26434427.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import React, {useEffect, useState} from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgramEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nfunction EditProgram({\n    onEditProgram,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [program, setProgram] = useState();\n    const [programStartDate, setProgramStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('programSelected');\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if(_id) {\n            const params = {\n                whereKeyValues: {\n                    cobrandEmail: cobrandEmail,\n                    _id: _id\n                }\n            };\n\n            axios({\n                method: 'post',\n                url: 'https://as01.prod.ruangortu.id:8080/api/cobrand/programFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setProgram(response.data.programs[0]);\n                console.log(\"This is \", program);\n                let date = response.data.programs[0].startDate.split('T')[0];\n                console.log(date);\n                setProgramStartDate(date);\n                setPageLoading(false);;\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n        }\n    }, []);\n\n    if(isPageLoading || isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/cms/program', name: 'On Going Program' },\n                { path: '/cms/program/edit', name: 'Edit Selected Program' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: program.programName,\n                    programDescription: program.ProgramDescription,\n                    startDate: programStartDate\n                }}\n                validationSchema = {validationProgramEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onEditProgram( _id, cobrandEmail, values.programName, values.programDescription, '', values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditProgram\">\n                        <h1>Edit Selected Program: {program.programName}</h1>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        {/*<div className=\"form-group\">\n                            <label>New Photo (Optional)</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnailEdit\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnailEdit\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.programThumbnailEdit}</span>\n                        </div>*/}\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                min={new Date().toISOString().split('T')[0]}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Update Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProgram: ( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ) =>\n            dispatch(editProgram( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditProgram)","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}"],"sourceRoot":""}