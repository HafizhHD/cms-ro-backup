{"version":3,"sources":["components/UI/Table/Table.js","components/API/filter.js","containers/CoBrand/User/columns.js","containers/CoBrand/User/User.js","components/UI/Heading/Heading.js"],"names":["Table","DATA","COLUMNS","renderRowSubComponent","data","useMemo","useTable","columns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","className","onClick","disabled","length","type","defaultValue","onChange","e","target","value","Number","map","placeholder","currentTarget","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","getProgramList","query","axios","method","url","getContentList","getUserList","getRedzoneList","Columns","Header","accessor","Cell","split","style","color","id","getToggleRowExpandedProps","User","useState","isLoading","setLoading","userData","setUserData","useEffect","params","whereKeyValues","packageId","limit","MAX_SAFE_INTEGER","console","log","then","response","users","catch","error","RKLoader","Heading","headingName","routes","name","path","item","exact","to"],"mappings":"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","file":"static/js/26.850fead9.chunk.js","sourcesContent":["import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","\nimport { Modal, Button } from 'react-bootstrap'\n\n\nconst Columns = [\n    {\n        Header: 'Email',\n        accessor: 'emailUser'\n    },\n    {\n        Header: 'Nama',\n        accessor: 'nameUser'\n    },\n    {\n        Header: 'No Telepon',\n        accessor: 'phoneNumber'\n    },\n    {\n        Header: 'Tgl. Registrasi',\n        accessor: 'dateCreated',\n        Cell: ({ value }) => {\n            return <p>{value.split('T')[0]}</p>\n        }\n    },\n    // {\n    //     Header: 'Nama Gereja',\n    //     accessor: 'namaHkbp'\n    // },\n    {\n        Header: 'Tipe User',\n        accessor: 'userType'\n    },\n    {\n        Header: 'User status',\n        accessor: 'status',\n        Cell: ({ value }) => {\n            let style = {\n                color: 'green'\n            };\n            if (value !== 'active') {\n                style = {\n                    color: 'red'\n                }\n            }\n\n            return <p style={style}>{value}</p>\n        }\n    },\n    {\n        Header: 'User Details',\n        id: 'expander',\n        Cell: ({ row }) => {\n            return (\n                /*<Link\n                    to=\"/helpdesk/pengguna/detail\"\n                    className=\"link-action\"\n                    onClick={() => {\n                        console.log(cell.row.values.emailUser);\n                        localStorage.setItem('userSelected', cell.row.values.emailUser);\n                    }}\n                    >Detail\n                </Link >*/\n                <span {...row.getToggleRowExpandedProps()}>\n                    {row.isExpanded ? '- Hide' : '+ Show'}\n                </span>\n            )\n        }\n    },\n];\n\nexport default Columns;","import React, { useState, useEffect, useCallback } from 'react';\nimport TablePengguna from './../../../components/UI/Table/Table';\nimport columns from './columns';\nimport Heading from './../../../components/UI/Heading/Heading'\nimport RKLoader from './../../../components/UI/RKLoader/RKLoader.js';\nimport './User.scss';\nimport { getUserList } from './../../../components/API/filter'\n\nconst User = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [userData, setUserData] = useState();\n\n    useEffect(() => {\n        let params={\n            whereKeyValues: {},\n            packageId: \"com.byasia.ruangortu\",\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        console.log(params);\n        getUserList(params)\n        .then(response => {\n            console.log(response.data);\n            setUserData(response.data.users);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        })\n    }, []);\n\n    // const renderRowSubComponent = useCallback(\n    //     ({ row }) => (\n    //         <Detail userSelected={row.values.emailUser}/>\n    //         /*<pre\n    //             style={{\n    //             fontSize: '10px',\n    //             }}\n    //         >\n    //             <code>{JSON.stringify({ values: row.values }, null, 2)}</code>\n    //         </pre>*/\n    //     ),\n    //     []\n    // );\n\n    if(isLoading) {\n        return <RKLoader />;\n    }\n    return (\n        <div className=\"Pengguna\">\n            <Heading\n                headingName=\"Helpdesk\"\n                routes={[\n                    { name: 'Helpdesk', path: '/helpdesk' },\n                    { name: 'Pengguna' }\n                ]}\n            />\n            <div className=\"Pengguna_table\">\n                <TablePengguna\n                    COLUMNS={columns}\n                    DATA={userData}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default User;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}