{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","containers/CoBrand/Program/AddProgram/AddProgram.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","programEdit","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","result","console","log","programthumnail","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","editAppUser","gender","imagePhoto","connect","state","auth","isLoading","onAddProgram","useHistory","parse","getItem","useState","isPageLoading","setPageLoading","categoryList","setCategoryList","audience","setAudience","isStepAdded","setStepAdded","responseCount","setResponseCount","embedVideoCallBack","link","asd","uploadCallback","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","onerror","useEffect","promiseTopic","promiseAudience","all","responseAll","topicRaw","audienceRaw","Data","label","headingName","routes","path","initialValues","Date","toISOString","split","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","isMulti","options","classNamePrefix","currentTarget","files","splice","content","stepErrors","stepTouched","editorState","artikel","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","toolbar","image","uploadEnabled","alignmentEnabled","previewImage","inputAccept","embedded","embedCallback","onClick","for","contentMedia","base64data","res","index","conProg","newResponse","newStep","EditorState","createEmpty","steps","Heading","item","exact","to"],"mappings":"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","file":"static/js/34.09da5d47.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons,\n                    answerKey: x.answerKey\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddProgram.scss';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { getProgramCategoryList, getAudienceList } from './../../../../components/API/filter'\nimport { addProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgram } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\nimport { getEmbedUrl } from '../../../../helpers/fileHelper/fileHelper'\n\nimport { ContentState, Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, convertFromRaw, current } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { stateToHTML } from 'draft-js-export-html'\n\nimport Select from 'react-select';\n\nfunction AddProgram({\n    onAddProgram,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [categoryList, setCategoryList] = useState([]);\n    const [audience, setAudience] = useState([]);\n    const [isStepAdded, setStepAdded] = useState(false);\n    const [stepCount, setStepCount] = useState(0);\n    const [responseCount, setResponseCount] = useState(1);\n\n    const embedVideoCallBack = (link) =>{\n        \n        const asd = getEmbedUrl(link);\n        console.log(\"Video embed \", asd);\n        return asd;\n    }\n\n    const uploadCallback = (file) => new Promise(\n        (resolve, reject) => {\n        const reader= new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            console.log(reader.result);\n            resolve({data: {link: reader.result}});\n        }\n        reader.onerror = error => reject(error);\n        }\n    );\n\n    useEffect(() => {\n        let paramTopic = {};\n        let paramAudience = {};\n        const promiseTopic = getProgramCategoryList(paramTopic);\n        const promiseAudience = getAudienceList(paramAudience);\n\n        Promise.all([promiseTopic, promiseAudience]).then(responseAll => {\n            console.log(responseAll[0]);\n            console.log(responseAll[1]);\n            var topicRaw = [], audienceRaw = [];\n            responseAll[0].data.Data.map(e => {\n                topicRaw.push(e.category);\n            })\n            responseAll[1].data.Data.map(e => {\n                audienceRaw.push({value: e.audianceName, label: e.audianceName});\n            })\n            console.log(\"Topic raw\", topicRaw);\n            console.log(\"Audience raw\", audienceRaw);\n            setCategoryList(topicRaw);\n            setAudience(audienceRaw);\n            setPageLoading(false);\n        })\n    }, [])\n\n    if(isLoading || isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/cms/program', name: 'Program' },\n                { path: '/cms/program/add', name: 'Buat Program Baru' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: '',\n                    programDescription: '',\n                    programThumbnail: '',\n                    startDate: new Date().toISOString().split('T')[0],\n                    endDate: new Date().toISOString().split('T')[0],\n                    category: categoryList[0],\n                    targetAudiance: [],\n                    contentPrograms: []\n                }}\n                validationSchema = {validationProgram}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddProgram( cobrandEmail, values.programName, values.programDescription, values.programThumbnail, values.startDate, values.endDate, values.category, values.targetAudiance, values.contentPrograms, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddProgram\">\n                        <h1>Buat Program Baru</h1>\n                        <div className=\"form-group\">\n                            <label>Judul</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Kategori Program</label>\n                            <select\n                                name=\"category\"\n                                value={values.category}\n                                onChange={handleChange}\n                            >\n                                {\n                                    categoryList.map((category) => {\n                                        return (\n                                            <option value={category}>{category}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Target Pembaca</label>\n                            <Select\n                                isMulti\n                                value={values.targetAudiance}\n                                onChange={(e) => {\n                                    setFieldValue(\"targetAudiance\", e)\n                                }}\n                                name=\"targetAudience\"\n                                options={audience}\n                                className=\"basic-multi-select\"\n                                classNamePrefix=\"select\"\n                            />\n                            {touched.targetAudiance && <span className=\"message__error\">{errors.targetAudiance}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Deskripsi</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                           {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Thumbnail</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnail\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            { touched.programThumbnail && <span className=\"message__error\">{errors.programThumbnail}</span> }\n                        </div>\n                        <div className=\"form-group-row\">\n                            <div className=\"form-group\">\n                                <label>Tanggal Mulai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={new Date().toISOString().split('T')[0]}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div>\n                            {/* end date */}\n                            <div className=\"form-group\">\n                                <label>Tanggal Selesai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"endDate\"\n                                    value={values.endDate}\n                                    min={values.startDate}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.endDate && <span className=\"message__error\">{errors.endDate}</span>}\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>{\"Jumlah Respon/Jawaban di Setiap Tahap\"}</label>\n                            <InputComponent \n                                type=\"number\"\n                                className=\"form-group__input\"\n                                value={responseCount}\n                                min={1}\n                                onChange={(e) => {\n                                    console.log(e.currentTarget.value);\n                                    if(responseCount > e.currentTarget.value) {\n                                        values.contentPrograms.map((x) => {\n                                            if(x.answerKey === x.response[x.response.length-1]) x.answerKey = x.response[0]\n                                            x.response.splice(-1, 1)\n                                        })\n                                    }\n                                    else {\n                                        values.contentPrograms.map((x) => {\n                                            x.response.push('');\n                                        })\n                                    }\n                                    setResponseCount(e.currentTarget.value)\n                                }}\n                                disabled={false}\n                            />\n                        </div>\n                        {values.contentPrograms.map((content, i) => {\n                            const stepErrors = errors.contentPrograms?.length && errors.contentPrograms[i] || {};\n                            const stepTouched = touched.contentPrograms?.length && touched.contentPrograms[i] || {};\n                            return (\n                                <div className=\"steps\">\n                                    <h2>Tahap {i+1}</h2>\n                                    <div className=\"form-group\">\n                                        <label>Nama Tahap</label>\n                                        <InputComponent\n                                            type=\"text\"\n                                            name=\"namaTahapan\"\n                                            className=\"form-group__input form-group__input--fullwidth\"\n                                            placeholder=\"Example\"\n                                            value={content.namaTahapan}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.namaTahapan`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                        {stepTouched.namaTahapan && <span className=\"message__error\">{stepErrors.namaTahapan}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Tipe Tahap</label>\n                                        <select\n                                            name=\"contentType\"\n                                            value={content.contentType}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.contentType`, e.currentTarget.value);\n                                                setFieldValue(`contentPrograms.${i}.contents`, '');\n                                            }}\n                                        >\n                                            <option value=\"Artikel\">Artikel</option>\n                                            <option value=\"Image\">Image</option>\n                                            <option value=\"Video\">Video</option>\n                                            <option value=\"Pdf\">File Pdf</option>\n                                        </select>\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                        <label>Judul Tahap</label>\n                                        <InputComponent\n                                            type=\"text\"\n                                            name=\"contentName\"\n                                            className=\"form-group__input form-group__input--fullwidth\"\n                                            placeholder=\"Example\"\n                                            value={content.contentName}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.contentName`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                        {stepTouched.contentName && <span className=\"message__error\">{stepErrors.contentName}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Isi Tahap</label>\n                                        {content.contentType === \"Artikel\" ? (\n                                            <Editor\n                                                editorState={content.artikel}\n                                                toolbarClassName=\"toolbarClassName\"\n                                                wrapperClassName=\"wrapperClassName\"\n                                                editorClassName=\"editorClassName\"\n                                                onEditorStateChange={(editorState) => setFieldValue(`contentPrograms.${i}.artikel`, editorState)}\n                                                // onEditorStateChange={updateTextDescription}\n                                                // value={description.values}\n                                                value={draftToHtml(convertToRaw(content.artikel.getCurrentContent()))}\n                                                // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                                name=\"contents\"\n                                                toolbar={{\n                                                    image: {\n                                                        uploadEnabled: true,\n                                                        alignmentEnabled: true,\n                                                        previewImage: true,\n                                                        uploadCallback: uploadCallback,\n                                                        inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                                    },\n                                                    embedded:{\n                                                        embedCallback: embedVideoCallBack\n                                                    }\n                                                }}\n                                                onChange={() => {\n                                                    // setTextValue(editorState);\n                                                    // setFieldValue(\"contentDescription\", description);\n                                                    setFieldValue(`contentPrograms.${i}.contents`, draftToHtml(convertToRaw(content.artikel.getCurrentContent())));\n                                                    // console.log(textDeskripsi);\n                                                    // console.log(values.contents)\n                                                }}\n\n                                            />\n                                        ) : null}\n                                        {content.contentType === \"Image\" ? (\n                                            <div>\n                                                <p>Pilih media yang ingin di upload :</p>\n                                                <form>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                        onClick={() => { setFieldValue(`contentPrograms.${i}.contentMedia`, 'internal') }}\n                                                    />\n                                                    <label for=\"internal\" >Media Internal Komputer</label>\n                                                    <br></br>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                        onClick={() => setFieldValue(`contentPrograms.${i}.contentMedia`, 'url')}\n                                                    />\n                                                    <label for=\"url\" >Alamat URL</label>\n                                                    <br></br>\n                                                </form>\n\n                                                {content.contentMedia === 'internal' ?\n                                                    <InputComponent\n                                                        type=\"file\"\n                                                        className=\"form-group__input\"\n                                                        name=\"contents\"\n                                                        onBlur={handleBlur}\n                                                        onChange={(e) => {\n                                                            let file = e.currentTarget.files[0];\n                                                            if (file) {\n                                                                const reader = new FileReader();\n                                                                reader.readAsDataURL(file);\n                                                                reader.onloadend = function() {\n                                                                    var base64data = reader.result;                \n                                                                    setFieldValue(`contentPrograms.${i}.contents`, base64data);\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                    :\n                                                    <InputComponent\n                                                        type=\"text\"\n                                                        name=\"contents\"\n                                                        className=\"form-group__input form-group__input--fullwidth\"\n                                                        placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                                        value={content.contents}\n                                                        onChange={(e) => {\n                                                            setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                }\n\n                                            </div>\n\n                                        ) : null}\n                                        {content.contentType === \"Video\" ?\n                                            <InputComponent\n                                                type=\"text\"\n                                                name=\"contents\"\n                                                className=\"form-group__input form-group__input--fullwidth\"\n                                                placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                                value={content.contents}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            : null}\n                                        {content.contentType === \"Pdf\" ? (\n                                            <div>\n                                                <p>Pilih media yang ingin di upload :</p>\n                                                <form>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                        onClick={() => { setFieldValue(`contentPrograms.${i}.contentMedia`, 'internal') }}\n                                                    />\n                                                    <label for=\"internal\" >Media Internal - Maks 300kb</label>\n                                                    <br></br>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                        onClick={() => setFieldValue(`contentPrograms.${i}.contentMedia`, 'url')}\n                                                    />\n                                                    <label for=\"url\" >Alamat URL</label>\n                                                    <br></br>\n                                                </form>\n\n                                                {content.contentMedia === 'internal' ?\n                                                    <InputComponent\n                                                        type=\"file\"\n                                                        className=\"form-group__input\"\n                                                        name=\"contents\"\n                                                        onBlur={handleBlur}\n                                                        //   value={values.contents}\n                                                        //   onChange={handleChange}\n                                                        onChange={(e) => {\n                                                            let file = e.currentTarget.files[0];\n                                                            if (file) {\n                                                                const reader = new FileReader();\n                                                                reader.readAsDataURL(file);\n                                                                reader.onloadend = function() {\n                                                                    var base64data = reader.result;                \n                                                                    setFieldValue(`contentPrograms.${i}.contents`, base64data);\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                    :\n                                                    <InputComponent\n                                                        type=\"text\"\n                                                        name=\"contents\"\n                                                        className=\"form-group__input form-group__input--fullwidth\"\n                                                        placeholder=\"Type Pdf URL... (Pdf file)\"\n                                                        value={content.contents}\n                                                        onChange={(e) => {\n                                                            setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                }\n                                            </div>\n\n                                        ) : null}\n                                        {stepTouched.contents && <span className=\"message__error\">{stepErrors.contents}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Respon/Jawaban</label>\n                                        {content.response.map((res, index) => {\n                                            console.log(\"Content response:\", content.response)\n                                            return <InputComponent\n                                                type=\"text\"\n                                                name=\"response\"\n                                                className=\"form-group__input form-group__input--halfwidth\"\n                                                placeholder=\"Example\"\n                                                value={res}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.response.${index}`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                        })}\n                                    </div>\n                                    {values.category === 'Ujian' ? (\n                                        <div className=\"form-group\">\n                                            <label>Kunci Jawaban</label>\n                                            <select\n                                                name=\"category\"\n                                                value={content.answerKey}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.answerKey`, e.currentTarget.value)\n                                                }}\n                                            >\n                                                {\n                                                    content.response.map((category) => {\n                                                        return (\n                                                            <option value={category}>{category}</option>\n                                                        )\n                                                    })\n                                                }\n                                            </select>\n                                        </div>\n                                    ) : null}\n                                    {/* <div className=\"form-group-row\">\n                                        <div className=\"form-group\">\n                                            <label>Tanggal Mulai</label>\n                                            <InputComponent\n                                                type=\"date\"\n                                                className=\"form-group__input\"\n                                                name=\"startDate\"\n                                                value={content.startDate}\n                                                min={new Date().toISOString().split('T')[0]}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.startDate`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            {stepTouched.startDate && <span className=\"message__error\">{stepErrors.startDate}</span>}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Tanggal Selesai</label>\n                                            <InputComponent\n                                                type=\"date\"\n                                                className=\"form-group__input\"\n                                                name=\"endDate\"\n                                                value={content.endDate}\n                                                min={content.startDate}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.endDate`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            {stepTouched.endDate && <span className=\"message__error\">{stepErrors.endDate}</span>}\n                                        </div>\n                                    </div> */}\n                                    <button id=\"add_program\" type=\"button\" onClick={() => {\n                                        let conProg = values.contentPrograms;\n                                        conProg.splice(i, 1);\n                                        if(conProg.length < 1) setStepAdded(false); \n                                        setFieldValue('contentPrograms', conProg);\n                                    }}>\n                                        <FiMinus className=\"IconDelete\" />\n                                        <span>Hapus Tahap Ini</span>  \n                                    </button>\n                                </div>\n                            )\n                        })}\n                        <button id=\"add_program\" type=\"button\" onClick={() => {\n                            if(!isStepAdded) setStepAdded(true);\n                            var newResponse = [];\n                            for(var x = 0; x < responseCount; x++) {\n                                newResponse.push('');\n                            }\n                            console.log(\"New response\", newResponse);\n                            let newStep = {\n                                artikel: EditorState.createEmpty(),\n                                contentMedia: 'url',\n\n                                nomerUrutTahapan: values.contentPrograms.length + 1,\n                                namaTahapan: '',\n                                contentName: '',\n                                contentType: 'Artikel',\n                                contentSource: '',\n                                contents: '',\n                                startDate: values.startDate,\n                                endDate: values.endDate,\n                                topics: [],\n                                targetAudiance: [],\n                                response: newResponse,\n                                answerKey: newResponse[0]\n                            }\n                            let steps = values.contentPrograms;\n                            steps.push(newStep);\n                            setFieldValue(\"contentPrograms\", steps);\n                        }}>\n                            <FiPlus className=\"IconAdd\" />\n                            <span>Tambah Tahap Program</span>  \n                        </button>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\" onClick={() => {\n                                console.log(\"Touched\", touched);\n                                console.log(\"Error\", errors)\n                            }}>\n                                Buat Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddProgram: ( cobrandEmail, programName, programDescription, programThumbnail, startDate, endDate, category, targetAudiance, contentPrograms, history ) =>\n            dispatch(addProgram( cobrandEmail, programName, programDescription, programThumbnail, startDate, endDate, category, targetAudiance, contentPrograms, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProgram)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}