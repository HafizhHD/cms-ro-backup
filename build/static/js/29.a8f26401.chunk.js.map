{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","containers/CoBrand/Program/EditProgram/columns.js","containers/CoBrand/Program/EditProgram/EditProgram.js","components/UI/Table/Table.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","result","console","log","programthumnail","i","length","x","respons","j","response","realContents","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","editStep","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","editAppUser","gender","imagePhoto","Columns","setStepDeleting","Header","accessor","Cell","cell","to","title","onClick","row","values","replace","connect","state","auth","isLoading","onEditProgram","programThumbnailEdit","useState","isPageLoading","setPageLoading","program","setProgram","useHistory","parse","getItem","categoryList","setCategoryList","audience","setAudience","steps","setSteps","audienceVal","setAudienceVal","useEffect","params2","whereKeyValues","orderKeyValues","promiseTopic","promiseAudience","promiseStep","Promise","all","responseAll","topicRaw","audienceRaw","Data","label","params","programs","audienceValRaw","RKLoader","Heading","headingName","routes","path","initialValues","split","validationSchema","validateOnChange","onSubmit","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","isMulti","options","classNamePrefix","Table","COLUMNS","columns","DATA","renderRowSubComponent","useMemo","useTable","initialState","hiddenColumns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","defaultValue","target","Number","currentTarget","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","getCellProps","isExpanded","colSpan","item","exact"],"mappings":"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","file":"static/js/29.a8f26401.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let realContents = '<!DOCTYPE html>'\n                        + '<html lang=\"en\">'\n                        + '<head>'\n                        + '<meta charset=\"utf-8\">'\n                        + '<style>'\n                        + '#contents {'\n                        + 'overflow-y: scroll;'\n                        + 'text-align: justify;'\n                        + 'white-space: pre-line;'\n                        + 'font-family: Arial, Helvetica, sans-serif;'\n                        + 'padding: 1%;'\n                        + '}'\n                        + '#contents li {'\n                        + 'margin-left: 5%;'\n                        + '}'\n                        + '</style>'\n                        + '</head>'\n                        + '<body>'\n                        + '<div id=\"contents\">'\n                        + x.contents\n                        + '</div>'\n                        + '</body>'\n                        + '</html>';\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: realContents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons,\n                    answerKey: x.answerKey\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, startDate, endDate, category, targetAudiance, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                programName,\n                ProgramDescription,\n                startDate,\n                endDate,\n                category,\n                targetAudiance\n            }\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/program');\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const editStep = (_id, cobrandEmail, namaTahapan, contentName, contents, response, answerKey, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let respons = {};\n        for(var j = 0; j < response.length; j++) {\n            respons[response[j]] = 0;\n        }\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                namaTahapan,\n                contentName,\n                contents,\n                response,\n                answerKey\n            }\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/program/view/step');\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom'\n\n\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = (setStepDeleting) => {\n    return [\n        // {\n        //     Header: 'Nomor',\n        //     accessor: 'index + 1'\n        // },\n    {\n        Header: 'ID Content',\n        accessor: '_id'\n    },\n    {\n        Header: 'No. Urut Tahap',\n        accessor: 'nomerUrutTahapan'\n    },\n    {\n        Header: 'Nama Tahap',\n        accessor: 'namaTahapan'\n    },\n    {\n        Header: 'Judul Tahap',\n        accessor: 'contentName'\n    },\n    // {\n    //     Header: 'Jenis Tahap',\n    //     accessor: 'contentType'\n    // },\n    // {\n    //     Header: 'Topik Artikel',\n    //     accessor: 'topics',\n    //     Cell: ({value}) => value.join(', ')\n    // },\n    // {\n    //     Header: 'Target Pembaca',\n    //     accessor: 'targetAudiance',\n    //     Cell: ({value}) => value.join(', ')\n    // },\n    // {\n    //     Header: 'Tanggal Mulai',\n    //     accessor: 'startDate',\n    //     Cell: ({value}) => (\n    //         <>\n    //             {value !== undefined ? new Date(value).toLocaleDateString(\"id-ID\", dateFormat) : ''}\n    //         </>\n    //     )\n    // },\n    // {\n    //     Header: 'Tanggal Berakhir',\n    //     accessor: 'endDate',\n    //     Cell: ({value}) => (\n    //         <>\n    //             {value !== undefined ? new Date(value).toLocaleDateString(\"id-ID\", dateFormat) : ''}\n    //         </>\n    //     )\n    // },\n    // {\n    //     Header: 'Status',\n    //     accessor: 'status',\n    //     Cell: ({ value }) => {\n    //         if(value === 'active') return <p style={{ color: 'green', fontWeight: 'bold' }}>{value}</p>\n    //         else return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\n    //     }\n    // },\n    {\n        Header: 'Action',\n        // accessor: '_id',\n        // disableSortBy: true,\n        // disableGlobalFilter: true,\n        Cell: ({cell}) => (\n            <>\n                <NavLink\n                    to=\"/cms/program/edit/step\"\n                    className=\"nav_btn\"\n                    title=\"Edit Tahap\"\n                    onClick={() => {\n                        localStorage.setItem('stepSelected', cell.row.values._id)\n                    }}\n                >\n                    <button \n                    className=\"btn_action\">\n                        <div>\n                            <FiEdit2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n                \n                <NavLink to=\"/cms/program/edit\"\n                    className=\"nav_btn\"\n                    title=\"Hapus Tahap\"\n                    onClick={() => {\n                        setStepDeleting([cell.row.values._id, cell.row.values.contentName]);\n                    }}\n                    replace>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiTrash2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n            </>\n        )\n    }\n]\n};\nexport default Columns;","import React, {useEffect, useState} from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editProgram } from '../../../../store/actions/dashboard';\nimport { getProgramCategoryList, getAudienceList, getContentList, getProgramList } from './../../../../components/API/filter'\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgramEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nimport TableProgram from './../../../../components/UI/Table/Table';\nimport columns from './columns'\n\nimport Select from 'react-select';\n\nfunction EditProgram({\n    onEditProgram,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [program, setProgram] = useState();\n    const [programStartDate, setProgramStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('programSelected');\n\n    const [categoryList, setCategoryList] = useState([]);\n    const [audience, setAudience] = useState([]);\n    const [steps, setSteps] = useState([]);\n    const [stepDeleting, setStepDeleting] = useState(null);\n    const [audienceVal, setAudienceVal] = useState([]);\n    // const [isStepAdded, setStepAdded] = useState(false);\n    // const [stepCount, setStepCount] = useState(0);\n    // const [responseCount, setResponseCount] = useState(1);\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if(_id) {\n            let paramTopic = {};\n            let paramAudience = {};\n            const params2 = {\n                whereKeyValues: {\n                    programId: _id\n                },\n                orderKeyValues: {\n                    nomerUrutTahapan: 1\n                }\n            };\n            const promiseTopic = getProgramCategoryList(paramTopic);\n            const promiseAudience = getAudienceList(paramAudience);\n            const promiseStep = getContentList(params2);\n\n            Promise.all([promiseTopic, promiseAudience, promiseStep]).then(responseAll => {\n                console.log(responseAll[0]);\n                console.log(responseAll[1]);\n                var topicRaw = [], audienceRaw = [];\n                responseAll[0].data.Data.map(e => {\n                    topicRaw.push(e.category);\n                })\n                responseAll[1].data.Data.map(e => {\n                    audienceRaw.push({value: e.audianceName, label: e.audianceName});\n                })\n                console.log(\"Topic raw\", topicRaw);\n                console.log(\"Audience raw\", audienceRaw);\n                setCategoryList(topicRaw);\n                setAudience(audienceRaw);\n                console.log(\"This is \", responseAll[2]);\n                setSteps(responseAll[2].data.contents);\n\n                const params = {\n                    whereKeyValues: {\n                        cobrandEmail: cobrandEmail,\n                        _id: _id\n                    }\n                };\n\n                getProgramList(params)\n                .then(response => {\n                    console.log(\"Response data: \", response.data);\n                    setProgram(response.data.programs[0]);\n                    localStorage.setItem('programCategory', response.data.programs[0].category);\n                    var audienceValRaw = [];\n                    response.data.programs[0].targetAudiance.map(e => {\n                        audienceValRaw.push({value: e, label: e});\n                    })\n                    setAudienceVal(audienceValRaw);\n                    setPageLoading(false);\n                    \n                })\n                .catch(error => {\n                    console.log(error);\n                    setPageLoading(false);\n                });\n            })\n        }\n    }, []);\n\n    if(isPageLoading || isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/cms/program', name: 'Program' },\n                { path: '/cms/program/edit', name: 'Ubah Program Terpilih' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: program.programName,\n                    programDescription: program.ProgramDescription,\n                    startDate: program.startDate.split('T')[0],\n                    endDate: program.endDate.split('T')[0],\n                    category: program.category,\n                    targetAudiance: program.targetAudiance\n                }}\n                validationSchema = {validationProgramEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onEditProgram( _id, cobrandEmail, values.programName, values.programDescription, values.startDate, values.endDate, values.category, values.targetAudiance, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditProgram\">\n                        <h1>Ubah Program Terpilih: {program.programName}</h1>\n                        <div className=\"form-group\">\n                            <label>Judul</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Kategori Program</label>\n                            <select\n                                name=\"category\"\n                                value={values.category}\n                                onChange={handleChange}\n                            >\n                                {\n                                    categoryList.map((category) => {\n                                        return (\n                                            <option value={category}>{category}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Target Pembaca</label>\n                            <Select\n                                isMulti\n                                value={audienceVal}\n                                onChange={(e) => {\n                                    setFieldValue(\"targetAudiance\", e)\n                                }}\n                                name=\"targetAudience\"\n                                options={audience}\n                                className=\"basic-multi-select\"\n                                classNamePrefix=\"select\"\n                            />\n                            {touched.targetAudiance && <span className=\"message__error\">{errors.targetAudiance}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Deskripsi</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        {/*<div className=\"form-group\">\n                            <label>New Photo (Optional)</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnailEdit\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnailEdit\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.programThumbnailEdit}</span>\n                        </div>*/}\n                        <div className=\"form-group-row\">\n                            <div className=\"form-group\">\n                                <label>Tanggal Mulai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={\"2020-01-01\"}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div>\n                            {/* end date */}\n                            <div className=\"form-group\">\n                                <label>Tanggal Selesai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"endDate\"\n                                    value={values.endDate}\n                                    min={values.startDate}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.endDate && <span className=\"message__error\">{errors.endDate}</span>}\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"Program__table\">\n                                <TableProgram \n                                    COLUMNS={columns(setStepDeleting)} \n                                    DATA={steps}  \n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Update Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProgram: ( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, endDate, category, targetAudiance, history ) =>\n            dispatch(editProgram( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, endDate, category, targetAudiance, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditProgram)","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n\n    const initialState = { hiddenColumns: ['_id'] };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        initialState\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}