{"version":3,"sources":["containers/CoBrand/Program/Program.js"],"names":["connect","state","isCurrentlyLoading","auth","isLoading","dispatch","onDeleteProgram","email","deletingProgram","retrieveList","deleteProgram","useState","setLoading","programList","setProgramList","programDeleting","setProgramDeleting","userData","JSON","parse","localStorage","getItem","params","whereKeyValues","cobrandEmail","limit","Number","MAX_SAFE_INTEGER","getProgramList","then","response","data","console","log","catch","error","useEffect","removeItem","className","to","id","COLUMNS","columns","DATA","programs"],"mappings":"+PAoHeA,uBAZS,SAAAC,GACpB,MAAO,CACHC,mBAAoBD,EAAME,KAAKC,cAIZ,SAACC,GACxB,MAAO,CACHC,gBAAiB,SAACC,EAAOC,EAAiBC,GAAzB,OAA0CJ,EAASK,YAAcH,EAAOC,EAAiBC,QAInGT,EArGf,YAGI,IAFAE,EAED,EAFCA,mBACAI,EACD,EADCA,gBAEA,EAAkCK,oBAAS,GAA3C,mBAEA,GAFA,UAEgCA,oBAAS,IAAzC,mBAAOP,EAAP,KAAkBQ,EAAlB,KACA,EAAsCD,qBAAtC,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA8CH,mBAAS,MAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAQMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAC3CC,EAAS,CACXC,eAAgB,CACZC,aAAcP,EAASV,OAE3BkB,MAAOC,OAAOC,kBAIlB,SAASlB,IACLmB,YAAeN,GACdO,MAAK,SAAAC,GACFhB,EAAegB,EAASC,MACxBC,QAAQC,IAAIH,EAASC,MACrBnB,GAAW,MAEdsB,OAAM,SAAAC,GACHH,QAAQC,IAAIE,GACZvB,GAAW,MAoBnB,OAhBAwB,qBAAU,WACNxB,GAAW,GACRQ,aAAaC,QAAQ,qBACpBL,EAAmBI,aAAaC,QAAQ,oBACxCD,aAAaiB,WAAW,oBAE5B5B,MACD,IAEH2B,qBAAU,WACHrB,IACCH,GAAW,GACXN,EAAgBW,EAASV,MAAOQ,EAAiBN,MAEtD,CAACM,IAEDX,GAAaF,EACL,cAAC,IAAD,IAIP,sBAAKoC,UAAU,UAAf,UACI,yCACA,eAAC,IAAD,CAASC,GAAG,mBAAmBC,GAAG,cAAlC,UACI,cAAC,IAAD,CAAQF,UAAU,YACnB,yDAEH,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CACIG,QAASC,YAAQ1B,GACjB2B,KAAM9B,EAAY+B","file":"static/js/23.072ce060.chunk.js","sourcesContent":["import  { useState, useEffect } from 'react';\nimport './Program.scss';\nimport TableProgram from './../../../components/UI/Table/Table';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport { deleteProgram } from '../../../store/actions/dashboard';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport axios from 'axios';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport {connect} from 'react-redux';\nimport { getProgramList } from '../../../components/API/filter';\n\n// import Modal from '../../../components/UI/Modal/Modal';\n\nfunction Program({\n    isCurrentlyLoading,\n    onDeleteProgram\n}) {\n    const [showModal, setShowModal] = useState(false);\n\n    const [isLoading, setLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [programDeleting, setProgramDeleting] = useState(null);\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.email\n        },\n        limit: Number.MAX_SAFE_INTEGER\n    };\n\n    \n    function retrieveList() {\n        getProgramList(params)\n        .then(response => {\n            setProgramList(response.data);\n            console.log(response.data);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        });\n    }\n    \n    useEffect(() => {\n        setLoading(true);\n        if(localStorage.getItem('programDeleting')) {\n            setProgramDeleting(localStorage.getItem('programDeleting'));\n            localStorage.removeItem('programDeleting');\n        }\n        retrieveList();\n    }, []);\n\n    useEffect(() => {\n        if(programDeleting) {\n            setLoading(true);\n            onDeleteProgram(userData.email, programDeleting, retrieveList);\n        }\n    }, [programDeleting]);\n\n    if(isLoading || isCurrentlyLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"Program\">\n            <h1>PROGRAM</h1>\n            <NavLink to=\"/cms/program/add\" id=\"add_program\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Create New Program</span>  \n            </NavLink>\n            <div className=\"Program__table\">\n                <TableProgram \n                    COLUMNS={columns(setProgramDeleting)} \n                    DATA={programList.programs}  \n                />\n            </div>\n\n            {/* <button \n                onClick={() => setShowModal(true)}>\n                Show Modal\n            </button> */}\n            \n            {/* <Modal \n                isShow={showModal}\n                onClose={() => setShowModal(false)} \n                onSubmit={submitModal}\n                title=\"Modal Title\"\n            >\n                <p>Hello Worlds</p>\n            </Modal> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isCurrentlyLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteProgram: (email, deletingProgram, retrieveList) => dispatch(deleteProgram(email, deletingProgram, retrieveList))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Program)\n"],"sourceRoot":""}