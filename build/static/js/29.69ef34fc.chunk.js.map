{"version":3,"sources":["components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","containers/CoBrand/Setting/Setting.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","components/UI/Heading/Heading.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","validationProgramEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","emailUser","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","programEdit","query","axios","method","url","data","headers","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","CardImg","React","ref","bsPrefix","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","connect","state","isLoading","auth","onEditProfile","userData","parse","getItem","useState","photoRaw","setPhotoRaw","add","kateprog","notif","time","photoPreview","setPhotoPreview","useEffect","RKLoader","to","Heading","headingName","routes","initialValues","validationSchema","validateOnChange","onSubmit","values","handleChange","handleBlur","handleSubmit","setFieldValue","touched","errors","Boolean","file","currentTarget","files","style","width","borderRadius","src","textAlign","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","BsComponent","Tag","resolvedPrefix","p","hasOwn","hasOwnProperty","classes","arguments","arg","argType","Array","isArray","inner","apply","toString","prototype","key","call","module","exports","default","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","Consumer","defaultPrefix","useContext","useIsRTL","dir","item","path","exact"],"mappings":";mIAAA,2BAGA,SAASA,EAAT,GAaI,IAZAC,EAYD,EAZCA,YACAC,EAWD,EAXCA,KACAC,EAUD,EAVCA,SACAC,EASD,EATCA,OACAC,EAQD,EARCA,MACAC,EAOD,EAPCA,UACAC,EAMD,EANCA,QACAC,EAKD,EALCA,KACAC,EAID,EAJCA,IACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,SACAC,EACD,EADCA,QAEA,MAAY,aAATV,EAEC,qCACI,0BACIM,KAAMA,EACNK,GAAIL,EACJF,UAAWA,EACXL,YAAaA,EACbE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPM,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAMjC,SAATL,GAA4B,mBAATA,EAEnB,qCACI,uBACIM,KAAMA,EACNF,UAAWA,EACXJ,KAAMA,EACND,YAAaA,EACbE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPI,IAAKA,EACLC,IAAK,aACLC,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAMrC,WAATL,EAEA,qCACI,uBACIM,KAAMA,EACNF,UAAWA,EACXJ,KAAMA,EACNC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPI,IAAKA,EACLC,IAAKA,EACLC,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAOlD,qCACI,uBACIC,KAAMA,EACNF,UAAWA,EACXJ,KAAMA,EACND,YAAaA,EACbE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPM,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAOvCO,mBAAKd,I,uDCxGpB,yeAEMe,EAAa,6FAGNC,EAAsBC,IAAW,CAC1CC,MAAOD,IAAW,oBAAoBE,SAAS,qBAAqBD,MAAM,mBAC1EE,SAAUH,IAAW,uBAAuBE,SAAS,0BAG5CE,EAAyBJ,IAAW,CAC7CC,MAAOD,IAAW,oBAAoBE,SAAS,qBAAqBD,MAAM,mBAC1EI,YAAaL,IAAW,mBAAmBE,SAAS,oBACpDI,YAAaN,IAAW,yBAAyBE,SAAS,0BAC1DK,UAAWP,IAAU,+BAA+BE,SAAS,qBACxDM,KACG,YAAa,0DACb,SAACC,GAAD,OACIA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIxB,SAEpEuB,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIE,MAAQ,WAOnCC,YAAaZ,IAAW,2BAA2BE,SAAS,4BAA4BW,QAAQf,EAAY,+BAC5GgB,QAASd,IAAW,sBAAsBE,SAAS,uBACnDC,SAAUH,IAAW,uBAAuBE,SAAS,wBAAwBV,IAAI,EAAG,2CACpFuB,gBAAiBf,IAAW,yBAAyBE,SAAS,wBACzDc,KAAK,YAAY,SAACb,EAAUc,GACzB,OAAOA,EAAOT,KAAK,CACfA,KAAM,SAAAO,GAAe,OAAIZ,GAAYY,IAAoBZ,GACzDb,QAAS,gCAKZ4B,EAAqBlB,IAAW,CACzCC,MAAOD,IAAW,oBAAoBE,SAAS,qBAAqBD,MAAM,mBAC1EK,YAAaN,IAAW,yBAAyBE,SAAS,0BAC1DK,UAAWP,IAAU,+BAChBQ,KACG,YAAa,0DACb,SAACC,GAAD,OACKA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIxB,QAAYwB,KAEjFD,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIE,MAAQ,WASnCC,YAAaZ,IAAW,2BAA2BE,SAAS,4BAA4BW,QAAQf,EAAY,+BAC5GgB,QAASd,IAAW,sBAAsBE,SAAS,uBACnDC,SAAUH,IAAW,uBAAuBR,IAAI,EAAG,2CACnDuB,gBAAiBf,IAAW,yBACvBgB,KAAK,YAAY,SAACb,EAAUc,GACzB,OAAOA,EAAOT,KAAK,CACfA,KAAM,SAAAO,GAAe,OAAKZ,GAAYY,IAAoBZ,IAAcA,GACxEb,QAAS,gCAKZ6B,EAAoBnB,IAAW,CACxCoB,YAAapB,IAAW,4BAA4BE,SAAS,6BAC7DmB,mBAAoBrB,IAAW,iCAAiCE,SAAS,mCACzEoB,iBAAkBtB,IAAU,+BAA+BE,SAAS,qBAC/DM,KACG,YAAa,0DACb,SAACC,GAAD,OACIA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIxB,SAEpEuB,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIE,MAAQ,WAOnCY,UAAWvB,IAAS,qBAAqBE,SAAS,oBAClDsB,QAASxB,IAAS,mBAAmBE,SAAS,oBAC9CuB,SAAUzB,MACV0B,eAAgB1B,MAAYR,IAAI,EAAG,mBACnCmC,gBAAiB3B,MAAYR,IAAI,GAAGoC,GAChC5B,IAAW,CACP6B,YAAa7B,MAAaE,SAAS,4BACnC4B,YAAa9B,MAAaE,SAAS,6BACnC6B,SAAU/B,MAAaE,SAAS,2BAChCqB,UAAWvB,IAAS,qBAAqBE,SAAS,oBAClDsB,QAASxB,IAAS,mBAAmBE,SAAS,yBAK7C8B,EAAwBhC,IAAW,CAC5CoB,YAAapB,IAAW,4BAA4BE,SAAS,6BAC7DmB,mBAAoBrB,IAAW,iCAAiCE,SAAS,mCACzEqB,UAAWvB,IAAS,qBAAqBE,SAAS,sBAGzC+B,EAAoBjC,IAAW,CACxC8B,YAAa9B,IAAW,4BAA4BE,SAAS,6BAC7DgC,mBAAoBlC,IAAW,iCAAiCE,SAAS,mCACzE6B,SAAU/B,IAAW,iCAAiCE,SAAS,uBAC/DiC,cAAenC,IAAW,4BAA4BE,SAAS,8BAC/DkC,iBAAkBpC,IAAU,+BAA+BE,SAAS,qBAC/DM,KACG,YAAa,0DACb,SAACC,GAAD,OACIA,GAAO,CAAC,YAAa,YAAa,cAAcC,SAASD,EAAIxB,SAEpEuB,KACG,YAAa,0DACb,SAACC,GACG,OAAGA,GACQA,EAAIE,MAAQ,WAOnCY,UAAWvB,IAAS,qBAAqBE,SAAS,oBAClDsB,QAASxB,IAAS,mBAAmBE,SAAS,oBAC9CmC,SAAUrC,MACVsC,OAAQtC,MAAYR,IAAI,GACxB+C,eAAgBvC,MAAYR,IAAI,KAGvBgD,EAAwBxC,IAAW,CAC5C8B,YAAa9B,IAAW,4BAA4BE,SAAS,6BAC7DgC,mBAAoBlC,IAAW,iCAAiCE,SAAS,mCACzE6B,SAAU/B,IAAW,iCAAiCE,SAAS,uBAC/DiC,cAAenC,IAAW,4BAA4BE,SAAS,8BAC/DqB,UAAWvB,IAAS,qBAAqBE,SAAS,sBAGzCuC,EAAyBzC,IAAW,CAC7C0C,YAAa1C,MAAYR,IAAI,GAC7BmD,eAAgB3C,IAAW,6BAA6BE,SAAS,+BACjE0C,eAAgB5C,IAAW,6BAA6BE,SAAS,+BACjE2C,aAAc7C,IAAS,qBAAqBE,SAAS,oBACrD4C,UAAW9C,IAAW,wBAAwBE,SAAS,0BACvDuB,SAAUzB,IAAW,sBAAsBE,SAAS,0BAG3C6C,EAAqB/C,IAAW,CACzCgD,aAAchD,IAAW,4BAA4BE,SAAS,+BAGrD+C,EAA0BjD,IAAW,CAC9CyB,SAAUzB,IAAW,uBAAuBE,SAAS,wBACrDgD,YAAalD,IAAW,qBAAqBE,SAAS,6BAG7CiD,EAAyBnD,IAAW,CAC7CyB,SAAUzB,IAAW,uBAAuBE,SAAS,wBACrDgD,YAAalD,IAAW,qBAAqBE,SAAS,6BAG7CkD,EAAkBpD,IAAW,CACtCqD,UAAWrD,IAAW,oBAAoBE,SAAS,qBAAqBD,MAAM,mBAC9EqD,SAAUtD,IAAW,mBAAmBE,SAAS,oBAAoBW,QAjLvD,QAiL0E,2BACxF0C,MAAOvD,IAAW,2BAA2BE,SAAS,4BAA4BW,QAAQf,EAAY,+BACtGK,SAAUH,IAAW,uBAAuBE,SAAS,wBAAwBV,IAAI,EAAG,6CAG3EgE,EAAyBxD,IAAW,CAC7CyD,UAAWzD,IAAW,oBAAoBE,SAAS,4BAG1CwD,EAAuB1D,IAAW,CAC3C2D,qBAAsB3D,IAAW,uBAAuBE,SAAS,wBACjE0D,sBAAuB5D,MAAaE,SAAS,yB,yiBCzKpC2D,EAAc,SAACC,GAAD,OAAWC,IAAM,CACxCC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAaXC,EAAa,SAACN,GAAD,OAAWC,IAAM,CACvCC,OAAQ,OACRC,IAAKA,IAAM,sBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBAIXE,EAAc,SAACP,GAAD,OAAWC,IAAM,CACxCC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uB,QC9BXG,EAAe,iBAAO,CAAErF,KAAMsF,MAC9BC,EAAc,iBAAO,CAAEvF,KAAMwF,MAG7BC,EAAa,SAACpF,EAASM,GAAV,MAAkB,CACxCX,KAAM0F,IACNrF,QAASA,EACTsF,UAAWhF,IAGFiF,EAAe,SAACvF,EAASM,GAAV,MAAkB,CAC1CX,KAAM6F,IACNxF,QAASA,EACTsF,UAAWhF,IAGFmF,EAAa,SAACC,EAAc5D,EAAa6D,EAAoBC,EAAO3D,EAAWC,EAASC,EAAUc,EAAgB4C,EAAaC,GACxI,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAGMC,YAASL,GACjBM,MAAK,SAACC,GACVC,QAAQC,WAAWF,GAInB,IAHA,IAAMG,EAAkBH,EAEpB9D,EAAkB,GACdkE,EAAI,EAAGA,EAAIV,EAAYW,OAAQD,IAAK,CAGxC,IAFA,IAAIE,EAAIZ,EAAYU,GAChBG,EAAU,GACNC,EAAI,EAAGA,EAAIF,EAAEG,SAASJ,OAAQG,IAClCD,EAAQD,EAAEG,SAASD,IAAM,EAE7B,IAAIE,EAAU,CACVC,iBAAkBL,EAAEK,iBACpBvE,YAAakE,EAAElE,YACfC,YAAaiE,EAAEjE,YACfuE,YAAaN,EAAEM,YACflE,cAAe4D,EAAE5D,cACjBJ,SAAUgE,EAAEhE,SACZR,UAAWwE,EAAExE,UACbC,QAASuE,EAAEvE,QACXc,OAAQyD,EAAEzD,OACVZ,eAAgBqE,EAAErE,eAClBsE,QAASA,GAEbrE,EAAgB2E,KAAKH,GAGzB,IAAIzE,EAAiB,GACrB,IAAQuE,EAAI,EAAGA,EAAI1D,EAAeuD,OAAQG,IACtCvE,EAAe4E,KAAK/D,EAAe0D,GAAG7G,OAG1C,IDpEiB0E,ECoEbI,EAAO,CACPc,eACA5D,cACA6D,qBACAW,kBACArE,YACAC,UACAC,WACAC,iBACAC,mBAGJ+D,QAAQC,IAAIzB,IDhFKJ,ECoFJI,EDpFcH,IAAM,CACzCC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCgFPqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAczD,EAAc,4BAClDiE,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAActD,EAAc,kDAChDiE,EAASb,QAEjBkB,QAAQC,IAAIzB,QAMXuC,EAAc,SAACC,EAAK1B,EAAc5D,EAAa6D,EAAoBC,EAAO3D,EAAW6D,GAC9F,OAAO,SAAAC,GAMH,GALAA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEVI,QAAQC,IAAI,kBAA6B,KAAVT,GACjB,KAAVA,EAAc,CACd,IAAIhB,EAAO,CACPyC,YAAa,CACT3B,eACA0B,OAEJE,UAAW,CACPxF,cACA6D,qBACA1D,cAIRmE,QAAQC,IAAIzB,GAGZL,EAAYK,GACPsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAczD,EAAc,uBAClDiE,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAActD,EAAc,6CAChDiE,EAASb,YAIhB,CACee,YAASL,GACjBM,MAAK,SAACC,GACVC,QAAQC,WAAWF,GACnB,IAEIvB,EAAO,CACPyC,YAAa,CACT3B,eACA0B,OAEJE,UAAW,CACPxF,cACA6D,qBACAW,gBAVgBH,EAWhBlE,cAIRmE,QAAQC,IAAIzB,GAGZL,EAAYK,GACPsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAczD,EAAc,uBAClDiE,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAActD,EAAc,6CAChDiE,EAASb,cAQpBqC,EAAgB,SAAC7B,EAAc8B,EAAWC,GACnD,OAAO,SAAA1B,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,IDtKsBxB,ECsKhBkD,EAAW,CACbL,YAAa,CACT3B,aAAcA,EACd0B,IAAKI,EAAU,MDzKDhD,EC4KRkD,ED5KkBjD,IAAM,CAC1CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCwKXqB,MAAK,SAAAU,GACFR,QAAQC,IAAIO,EAAShC,MACrBmB,EAASR,EAAa,YAAciC,EAAU,GAAK,wBACnDzB,EAASb,KACTuC,OAEHR,OAAM,SAAAC,GACHd,QAAQC,IAAIa,GACZnB,EAASX,EAAW,YAAcoC,EAAU,GAAK,8CACjDzB,EAASb,KACTuC,SAKHE,EAAa,SAACjC,EAAc8B,EAAWhF,EAAaI,EAAoBmE,EAAalE,EAAe+C,EAAOnD,EAAUR,EAAWC,EAASa,EAAUC,EAAQC,EAAgB6C,GACpL,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAOMC,YAASL,GACjBM,MAAK,SAACC,GAEV,IAAIyB,EAAQ,GAAIC,EAAO,GACvB7E,EAAO8E,KAAI,SAAAC,GACPH,EAAMZ,KAAKe,EAAEjI,UAEjBmD,EAAe6E,KAAI,SAAAC,GACfF,EAAKb,KAAKe,EAAEjI,UAGhBsG,QAAQC,WAAWF,GACnB,IAAMrD,EAAmBqD,EACrB6B,EAASjF,EAAW,SAAW,WAEnC,GAAoB,UAAhBgE,EAEwB,kBAAbtE,EACPA,EAAW,sEAA2EwF,YAAYxF,GAAY,mPAEhGwD,YAASxD,GACjByD,MAAK,SAACgC,GACRzF,EAAW,uFAA4FwF,YAAYC,GAAS,kPAE5H,IAAItD,EAAO,CACPc,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBACAC,mBACAL,WACAuF,SACA/F,YACAC,UACAc,OAAQ4E,EACRxF,eAAgByF,GAGpBzB,QAAQC,IAAIzB,GAGZE,EAAWF,GACNsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,4BAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,kDAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,WAKnB,GAAoB,UAAhBmC,EAAyB,CAC9B,GAAwB,kBAAbtE,EACPA,EAAW,aAAgBA,EAAW,+BAEvBwD,YAASxD,GACjByD,MAAK,SAACgC,GACTzF,EAAW,aAAgByF,EAAQ,0BACnC9B,QAAQC,IAAI5D,GAGZ,IAAImC,EAAO,CACPc,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBACAC,mBACAL,WACAuF,SACA/F,YACAC,UACAc,OAAQ4E,EACRxF,eAAgByF,GAGpBzB,QAAQC,IAAIzB,GAGZE,EAAWF,GACNsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,4BAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,kDAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,WAKnB,GAAoB,QAAhBmC,EAAuB,CAC5B,GAAwB,kBAAbtE,EACPA,EAAW,uFAAyFA,GAAYA,EAASrB,SAAS,kBAAoB,GAAK,kBAAoB,oEAEnK6E,YAASxD,GACjByD,MAAK,SAACgC,GAEN,IAAItD,EAAO,CACPc,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBACAC,mBACAL,SATJA,EAAW,sDAAwDyF,EAAQ,+DAUvEF,SACA/F,YACAC,UACAc,OAAQ4E,EACRxF,eAAgByF,GAGpBzB,QAAQC,IAAIzB,GAGZE,EAAWF,GACNsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,4BAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,kDAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,WAKpBnC,EAAW,2QAmBLA,EAnBK,uBAyBf2D,QAAQC,IAAI5D,GAGZ,IAAImC,EAAO,CACPc,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBACAC,mBACAL,WACAuF,SACA/F,YACAC,UACAc,OAAQ4E,EACRxF,eAAgByF,GAGpBzB,QAAQC,IAAIzB,GAGZE,EAAWF,GACNsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,4BAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,kDAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,QAMXuD,EAAc,SAACf,EAAK1B,EAAc8B,EAAWhF,EAAaI,EAAoBmE,EAAalE,EAAe+C,EAAOnD,EAAUR,EAAW6D,GAC/I,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAgBN,GAAoB,UAAhBe,EAEwB,kBAAbtE,EACPA,EAAW,sEAA2EwF,YAAYxF,GAAY,mPAGhGwD,YAASxD,GACjByD,MAAK,SAACgC,GACRzF,EAAW,uFAA4FwF,YAAYC,GAAS,kPAG5H,IAaItD,EAAO,CACPyC,YAAa,CACTD,OAEJE,UAjBQ,CACR5B,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBAEAJ,WAEAR,cAUJmE,QAAQC,IAAIzB,GAGZG,EAAYH,GACPsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,uBAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,6CAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,WAKnB,GAAoB,UAAhBmC,EAAyB,CAC9B,GAAwB,kBAAbtE,EACPA,EAAW,aAAgBA,EAAW,+BAEvBwD,YAASxD,GACjByD,MAAK,SAACgC,GACTzF,EAAW,aAAgByF,EAAQ,0BACnC9B,QAAQC,IAAI5D,GAGZ,IAaImC,EAAO,CACPyC,YAAa,CACTD,OAEJE,UAjBQ,CACR5B,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBAEAJ,WAEAR,cAUJmE,QAAQC,IAAIzB,GAGZG,EAAYH,GACPsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,uBAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,6CAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,WAKnB,GAAoB,QAAhBmC,EAAuB,CAC5B,GAAwB,kBAAbtE,EACPA,EAAW,uFAAyFA,GAAYA,EAASrB,SAAS,kBAAoB,GAAK,kBAAoB,oEAEnK6E,YAASxD,GACjByD,MAAK,SAACgC,GAEN,IAaItD,EAAO,CACPyC,YAAa,CACTD,OAEJE,UAjBQ,CACR5B,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBAEAJ,SATJA,EAAW,sDAAwDyF,EAAQ,+DAWvEjG,cAUJmE,QAAQC,IAAIzB,GAGZG,EAAYH,GACPsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,4BAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,kDAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,WAKpBnC,EAAW,qPAkBLA,EAlBK,uBAwBf2D,QAAQC,IAAI5D,GAGZ,IAaImC,EAAO,CACPyC,YAAa,CACTD,OAEJE,UAjBQ,CACR5B,eACA8B,YACAhF,cACAI,qBACAmE,cACAlE,gBAEAJ,WAEAR,cAUJmE,QAAQC,IAAIzB,GAGZG,EAAYH,GACPsB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,gBACbjB,EAASR,EAAa,YAAc/C,EAAc,uBAClDuD,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,YAAc5C,EAAc,6CAChDuD,EAASb,QAEjBkB,QAAQC,IAAIzB,KAOXwD,EAAgB,SAAC1C,EAAc2C,EAAWZ,GACnD,OAAO,SAAA1B,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,IDrnBsBxB,ECqnBhBkD,EAAW,CACbL,YAAa,CACT3B,aAAcA,EACd0B,IAAKiB,EAAU,MDxnBD7D,EC2nBRkD,ED3nBkBjD,IAAM,CAC1CC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCunBXqB,MAAK,SAAAU,GACFR,QAAQC,IAAIO,EAAShC,MACrBmB,EAASR,EAAa,YAAc8C,EAAU,GAAK,wBACnDtC,EAASb,KACTuC,OAEHR,OAAM,SAAAC,GACHd,QAAQC,IAAIa,GACZnB,EAASX,EAAW,YAAciD,EAAU,GAAK,8CACjDtC,EAASb,KACTuC,SAKHa,EAAc,SAACC,EAAUC,EAAaxH,EAAa4E,EAAOtE,EAAaE,EAASX,GACzF,OAAO,SAAAkF,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAGV,IAAIqB,EAAc,CAAE1G,MAAO4H,EAAU1H,SAAU2H,GAAelB,EAAY,IAEtEtG,IAAasG,EAAYmB,OAAOC,OAAOpB,EAAW,CAAEtG,YAAaA,KACjEM,IAAagG,EAAYmB,OAAOC,OAAOpB,EAAW,CAAEhG,YAAaA,KACjEE,IAAS8F,EAAYmB,OAAOC,OAAOpB,EAAW,CAAE9F,QAASA,KACzDX,IAAUyG,EAAYmB,OAAOC,OAAOpB,EAAW,CAAEzG,SAAUA,KAE3D+E,GACgBK,YAASL,GACjBM,MAAK,SAACC,GACVmB,EAAYmB,OAAOC,OAAOpB,EAAW,CAAErG,UAAWkF,IAClDC,QAAQC,IAAI,gBAAiBgB,GAC7BjB,QAAQC,IAAI,cAAeiB,GAC3BqB,YAAYtB,EAAaC,GACpBpB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MAC7B/D,IACAuF,QAAQC,IAAI,YACZgB,EAAYxG,SAAWA,GAE3B+H,YAAavB,GACRnB,MAAK,SAAA2C,GACFzC,QAAQC,IAAI,cAAewC,EAAUjE,MACrC,IAAIkE,EAAYD,EAAUjE,KAC1BmE,aAAaC,WAAW,eACxBD,aAAaC,WAAW,YACxBD,aAAaE,QAAQ,cAAeH,EAAUI,WAAWC,OACzDJ,aAAaE,QAAQ,WAAYG,KAAKC,UAAUP,EAAUI,WAAWI,OACrEvD,EAASR,EAAa,4BACtBQ,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,kDACpBW,EAASb,WAGpB+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,kDACpBW,EAASb,YAKrBkB,QAAQC,IAAI,gBAAiBgB,GAC7BjB,QAAQC,IAAI,cAAeiB,GAC3BqB,YAAYtB,EAAaC,GACpBpB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MAC7B/D,IACAuF,QAAQC,IAAI,YACZgB,EAAYxG,SAAWA,GAE3B+H,YAAavB,GACRnB,MAAK,SAAA2C,GACFzC,QAAQC,IAAI,cAAewC,EAAUjE,MACrC,IAAIkE,EAAYD,EAAUjE,KAC1BmE,aAAaE,QAAQ,cAAeH,EAAUI,WAAWC,OACzDJ,aAAaE,QAAQ,WAAYG,KAAKC,UAAUP,EAAUI,WAAWI,OACrEvD,EAASR,EAAa,4BACtBQ,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,kDACpBW,EAASb,WAGpB+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,kDACpBW,EAASb,WAOhBqE,EAAkB,SAACnG,EAAaC,EAAgBC,EAAgBkG,EAAajG,EAAcC,EAAWrB,EAAU2D,GACzH,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,ID9tBwBxB,EC8tBpBiF,EAAWD,EAAcjG,EAAe,GACxCqB,EAAO,CACPxB,YAAaA,EAAYsG,KAAK,KAAMrG,iBAAgBC,iBAAgBC,aAAckG,EAAWjG,YAAWrB,YAG5GiE,QAAQC,IAAIzB,IDnuBYJ,ECsuBRI,EDtuBkBH,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,qBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCkuBXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,sBACbjB,EAASR,EAAa,iCACtBQ,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,uDACpBW,EAASb,QAEjBkB,QAAQC,IAAIzB,KAKP+E,EAAc,SAACjG,EAAcoC,GACtC,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,IDpvBoBxB,ECovBhBI,EAAO,CACPlB,gBAGJ0C,QAAQC,IAAIzB,IDxvBQJ,EC2vBRI,ED3vBkBH,IAAM,CACxCC,OAAQ,OACRC,IAAKA,IAAM,yBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCuvBXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,kCACbjB,EAASR,EAAa,mBAAqB7B,EAAe,4BAC1DqC,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,mBAAqB1B,EAAe,kDACxDqC,EAASb,QAEjBkB,QAAQC,IAAIzB,KAKPgF,EAAmB,SAACzH,EAAUyB,EAAakC,GACpD,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,IDzwByBxB,ECywBrBI,EAAO,CACPzC,WACAyB,eAGJwC,QAAQC,IAAIzB,ID9wBaJ,ECixBRI,EDjxBkBH,IAAM,CAC7CC,OAAQ,OACRC,IAAKA,IAAM,+BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBC6wBXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,wCACbjB,EAASR,EAAa,wBAA0BpD,EAAW,4BAC3D4D,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,wBAA0BjD,EAAW,kDACzD4D,EAASb,QAEjBkB,QAAQC,IAAIzB,KAKPiF,EAAkB,SAAC1H,EAAUyB,EAAakC,GACnD,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,ID/xB2BxB,EC+xBvBI,EAAO,CACPzC,WACAyB,eAGJwC,QAAQC,IAAIzB,IDpyBeJ,ECuyBRI,EDvyBkBH,IAAM,CAC/CC,OAAQ,OACRC,IAAKA,IAAM,0BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCmyBXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,mCACbjB,EAASR,EAAa,qBAAuBpD,EAAW,4BACxD4D,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,qBAAuBjD,EAAW,kDACtD4D,EAASb,QAEjBkB,QAAQC,IAAIzB,KAKPkF,EAAU,SAAC9F,EAAUnD,EAAUkJ,EAAUrE,EAAcsE,EAAWjG,EAAWE,EAAO6B,GAC7F,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,ID5yBiBxB,EC4yBbI,EAAO,CACPZ,WAAUnD,WAAUkJ,WAAUrE,eAAcsE,YAAWjG,YAAWE,SAGtEmC,QAAQC,IAAIzB,IDhzBKJ,ECmzBRI,EDnzBkBH,IAAM,CACrCC,OAAQ,OACRC,IAAKA,IAAM,eACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBC+yBXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,sBACbjB,EAASR,EAAa,SAAWvB,EAAW,4BAC5C+B,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,QAAUpB,EAAW,kDACzC+B,EAASb,QAEjBkB,QAAQC,IAAIzB,KAKPqF,EAAkB,SAAC9F,EAAW2B,GACvC,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,IDn1BwBxB,ECm1BpBI,EAAO,CACPT,aAGJiC,QAAQC,IAAIzB,IDv1BYJ,EC01BRI,ED11BkBH,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,uBACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCs1BXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,wBACbjB,EAASR,EAAa,iBAAmBpB,EAAY,4BACrD4B,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,iBAAmBjB,EAAY,kDACnD4B,EAASb,QAEjBkB,QAAQC,IAAIzB,KAKPsF,EAAgB,SAACxE,EAAcrB,EAAsBC,EAAuB6F,EAAMrE,GAC3F,OAAO,SAAAC,GACHA,EAASf,KACTe,EAAS,CACLpG,KAAMqG,MAEV,ID/1BsBxB,EC+1BlBI,EAAO,CACPc,eAAcrB,uBAAsBC,wBAAuB6F,QAG/D/D,QAAQC,IAAIzB,IDn2BUJ,ECs2BRI,EDt2BkBH,IAAM,CAC1CC,OAAQ,OACRC,IAAKA,IAAM,4BACXC,KAAMJ,EACNK,QAAS,CACL,eAAgB,uBCk2BXqB,MAAK,SAAAU,GACFR,QAAQC,IAAI,WAAYO,EAAShC,MACjCkB,EAAQkB,KAAK,6BACbjB,EAASR,EAAa,uBAAyBlB,EAAuB,4BACtE0B,EAASb,QAEZ+B,OAAM,SAACC,GACJd,QAAQc,MAAM,SAAUA,GACxBnB,EAASX,EAAW,uBAAyBf,EAAuB,kDACpE0B,EAASb,QAEjBkB,QAAQC,IAAIzB,M,gMCv+BdwF,EAAuBC,cAC7B,WAMGC,GAAQ,IALTC,EAKS,EALTA,SACAxK,EAIS,EAJTA,UACAyK,EAGS,EAHTA,QAGS,IAFTC,GAAIC,OAEK,MAFO,MAEP,EADNC,EACM,uDACHC,EAASC,YAAmBN,EAAU,YAC5C,OAAoBO,cAAKJ,EAAD,aACtBJ,IAAKA,EACLvK,UAAWgL,IAAWP,EAAU,GAAH,OAAMI,EAAN,YAAgBJ,GAAYI,EAAQ7K,IAC9D4K,OAGPP,EAAQY,YAAc,UACPZ,QCnBTa,EAAuBZ,gBAAoB,MACjDY,EAAQD,YAAc,oBACPC,QCGTC,EAA0Bb,cAAiB,WAM9CC,GAAQ,IALTC,EAKS,EALTA,SACAxK,EAIS,EAJTA,UAIS,IAFT0K,GAAIC,OAEK,MAFO,MAEP,EADNC,EACM,6CACHC,EAASC,YAAmBN,EAAU,eACtCY,EAAeC,mBAAQ,iBAAO,CAClCC,mBAAoBT,KAClB,CAACA,IACL,OAAoBE,cAAKQ,EAAkBC,SAAU,CACnDzL,MAAOqL,EACPK,SAAuBV,cAAKJ,EAAD,YAAC,aAC1BJ,IAAKA,GACFK,GAFsB,IAGzB5K,UAAWgL,IAAWhL,EAAW6K,WAIvCM,EAAWF,YAAc,aACVE,QCnBTO,EAAgBC,YAAiB,MACjCC,EAAgBD,YAAiB,MACjCE,EAAWC,YAAmB,aAC9BC,EAAYD,YAAmB,aAAc,CACjDnB,UAAWe,IAEPM,EAAeF,YAAmB,gBAAiB,CACvDnB,UAAWiB,IAEPK,EAAWH,YAAmB,YAAa,CAC/CnB,UAAW,MAEPuB,EAAWJ,YAAmB,YAAa,CAC/CnB,UAAW,MAEPwB,EAAaL,YAAmB,eAChCM,EAAiBN,YAAmB,oBAIpCO,EAAoB/B,cAAiB,WAWxCC,GAAQ,IAVTC,EAUS,EAVTA,SACAxK,EASS,EATTA,UACAsM,EAQS,EARTA,GACAC,EAOS,EAPTA,KACAC,EAMS,EANTA,OACAC,EAKS,EALTA,KACAhB,EAIS,EAJTA,SAIS,IAFTf,GAAIC,OAEK,MAFO,MAEP,EADNC,EACM,oFACHC,EAASC,YAAmBN,EAAU,QAC5C,OAAoBO,cAAKJ,EAAD,YAAC,aACvBJ,IAAKA,GACFK,GAFmB,IAGtB5K,UAAWgL,IAAWhL,EAAW6K,EAAQyB,GAAM,MAAJ,OAAUA,GAAMC,GAAQ,QAAJ,OAAYA,GAAQC,GAAU,UAAJ,OAAcA,IACvGf,SAAUgB,EAAoB1B,cAAKc,EAAU,CAC3CJ,SAAUA,IACPA,QAGTY,EAAKpB,YAAc,OACnBoB,EAAKK,aA1BgB,CACnBD,MAAM,GA0BO/D,aAAOC,OAAO0D,EAAM,CACjCM,IAAKtC,EACLuC,MAAOb,EACPc,SAAUb,EACVc,KAAMjB,EACNkB,KAAMd,EACNe,KAAMd,EACNe,OAAQ9B,EACR+B,OAAQf,EACRgB,WAAYf,I,gBCgPCgB,uBAbS,SAAAC,GACpB,MAAO,CACHC,UAAWD,EAAME,KAAKD,cAIH,SAACtH,GACxB,MAAO,CACHwH,cAAe,SAAEhF,EAAUC,EAAaxH,EAAa4E,EAAOtE,EAAaE,EAASX,GAAnE,OACXkF,EAASuC,YAAaC,EAAUC,EAAaxH,EAAa4E,EAAOtE,EAAaE,EAASX,QAIpFsM,EA/Rf,YAGI,IAFAI,EAED,EAFCA,cACAF,EACD,EADCA,UAEMG,EAAWpE,KAAKqE,MAAM1E,aAAa2E,QAAQ,aACjD,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAA0BF,qBAA1B,mBACA,GADA,UACsBA,oBAAS,IAA/B,mBAAOG,EAAP,KACA,GADA,KAC0BH,oBAAS,IAAnC,mBAAO/F,EAAP,KACA,GADA,KAC4B+F,oBAAS,IAArC,mBAAOI,EAAP,KACA,GADA,KAC0BJ,oBAAS,IAAnC,mBAAOK,EAAP,KACA,GADA,KACwBL,oBAAS,IAAjC,mBAAOM,EAAP,KACA,GADA,KACwCN,mBAASH,EAASvM,YAA1D,mBAAOiN,EAAP,KAAqBC,EAArB,KAsBA,OApBAC,qBAAU,WACHR,GACsB3H,YAAS2H,GACf1H,MAAK,SAACC,GACjBgI,EAAgBhI,MAEnBc,OAAM,SAAAC,GACHd,QAAQC,IAAIa,QAWrB,CAAC0G,IAEDP,EACQ,cAACgB,EAAA,EAAD,IAEK,GAAPP,EACE,cAAC,IAAD,CAAUQ,GAAG,uBAEN,GAAT1G,EACE,cAAC,IAAD,CAAU0G,GAAG,yBAEH,GAAZP,EACE,cAAC,IAAD,CAAUO,GAAG,oCAEN,GAATN,EACE,cAAC,IAAD,CAAUM,GAAG,kCAEP,GAARL,EACE,cAAC,IAAD,CAAUK,GAAG,mCAGpB,sBAAKvO,UAAU,UAAf,UACI,cAACwO,EAAA,EAAD,CACIC,YAAY,UACZC,OAAQ,CACJ,CAAExO,KAAM,cAahB,sBAAKF,UAAU,yBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,8CACA,cAAC,IAAD,CACI2O,cAAgB,CACZ/N,MAAO6M,EAAS7M,MAChBE,SAAU,GACVY,gBAAiB,GACjBT,YAAawM,EAASxM,YACtBM,YAAakM,EAASlM,YACtBE,QAASgM,EAAShM,QAClBP,UAAW,IAEf0N,iBAAoB/M,IACpBgN,kBAAoB,EACpBC,SAAY,SAAAC,GACRvB,EAAcC,EAAS7M,MAAO6M,EAAS3M,SAAUiO,EAAO9N,YAAa8N,EAAO7N,UAAW6N,EAAOxN,YAAawN,EAAOtN,QAASsN,EAAOjO,WAb1I,SAgBC,gBAAEkO,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,cAAeC,EAAzD,EAAyDA,QAASL,EAAlE,EAAkEA,OAAQM,EAA1E,EAA0EA,OAA1E,OACG,uBAAMP,SAAUI,EAAhB,UACI,sBAAKlP,UAAU,2BAAf,UACI,gCACI,0CACA,cAACN,EAAA,EAAD,CACIQ,KAAK,QACLF,UAAU,gBACVJ,KAAK,OACLC,SAAUmP,EACVjP,MAAOgP,EAAOnO,MACdd,OAAQmP,EACR3O,QAAS8O,EAAQxO,OAAS0O,QAAQD,EAAOzO,OACzCX,QAASmP,EAAQxO,OAASyO,EAAOzO,MACjCP,UAAU,OAGlB,gCACI,iDACA,cAACX,EAAA,EAAD,CACIQ,KAAK,WACLF,UAAU,gBACVJ,KAAK,WACLC,SAAUmP,EACVjP,MAAOgP,EAAOjO,SACdhB,OAAQmP,EACR3O,QAAS8O,EAAQtO,UAAYwO,QAAQD,EAAOvO,UAC5Cb,QAASmP,EAAQtO,UAAYuO,EAAOvO,cAG5C,gCACI,yDACA,cAACpB,EAAA,EAAD,CACIQ,KAAK,kBACLF,UAAU,gBACVJ,KAAK,WACLC,SAAUmP,EACVjP,MAAOgP,EAAOrN,gBACd5B,OAAQmP,EACR5O,UAAW+O,EAAQtO,SACnBR,QAAS8O,EAAQ1N,iBAAmB4N,QAAQD,EAAO3N,iBACnDzB,QAASmP,EAAQ1N,iBAAmB2N,EAAO3N,wBAKvD,qBAAK1B,UAAU,sCAAf,SAEI,sBAAKA,UAAU,6BAAf,UACI,2CACA,cAACN,EAAA,EAAD,CACIC,YAAY,QACZC,KAAK,OACLM,KAAK,YACLL,SAAU,SAACmI,GACP,IAAIuH,EAAOvH,EAAEwH,cAAcC,MAAM,GAC9BF,IACClJ,QAAQC,IAAI,mBAAoBiJ,GAChCJ,EAAc,YAAaI,GAC3BzB,EAAYyB,KAGpBvP,UAAU,gBACVF,OAAQmP,EACR3O,QAAS8O,EAAQlO,WAAaoO,QAAQD,EAAOnO,WAC7CjB,QAASmP,EAAQlO,WAAamO,EAAOnO,iBA0CjD,sBAAKlB,UAAU,oCAAf,UACI,gCACI,kDACA,cAACN,EAAA,EAAD,CACIQ,KAAK,cACLF,UAAU,gBACVJ,KAAK,OACLC,SAAUmP,EACVjP,MAAOgP,EAAO9N,YACdnB,OAAQmP,EACR3O,QAAS8O,EAAQnO,aAAeqO,QAAQD,EAAOpO,aAC/ChB,QAASmP,EAAQnO,aAAeoO,EAAOpO,iBAG/C,gCACI,iDACA,cAACvB,EAAA,EAAD,CACIQ,KAAK,cACLF,UAAU,gBACVJ,KAAK,OACLC,SAAUmP,EACVjP,MAAOgP,EAAOxN,YACdzB,OAAQmP,EACR3O,QAAS8O,EAAQ7N,aAAe+N,QAAQD,EAAO9N,aAC/CtB,QAASmP,EAAQ7N,aAAe8N,EAAO9N,iBAG/C,gCACI,4CACA,cAAC7B,EAAA,EAAD,CACIQ,KAAK,UACLF,UAAU,gBACVJ,KAAK,WACLC,SAAUmP,EACVjP,MAAOgP,EAAOtN,QACd3B,OAAQmP,EACR3O,QAAS8O,EAAQ3N,SAAW6N,QAAQD,EAAO5N,SAC3CxB,QAASmP,EAAQ3N,SAAW4N,EAAO5N,aAG3C,wBACIzB,UAAU,iBACVJ,KAAK,SAFT,wCAahB,sBAAKI,UAAU,uBAAf,UACI,yCACA,eAAC,EAAD,CAAM0P,MAAO,CAAEC,MAAO,QAASC,aAAc,QAA7C,UAGI,qBAAK5P,UAAU,SAAf,SAEI,qBAAKA,UAAU,OAAO6P,IAAK1B,GAA8B,kHAE7D,eAAC,EAAKrB,KAAN,CAAW9M,UAAU,YAArB,UACI,cAAC,EAAK4M,MAAN,CAAY8C,MAAO,CAAEI,UAAW,UAAhC,2BACA,cAAC,EAAK9C,KAAN,gI,uGCnRxB+C,EAAU,Q,0BCMRC,EAAa,SAAAC,GAAG,OAAIA,EAAI,GAAGC,eDLAC,ECKyBF,EDJjDE,EAAOC,QAAQL,GAAS,SAAUM,EAAGC,GAC1C,OAAOA,EAAIJ,kBCGgDK,MAAM,GDLtD,IAAkBJ,GCQlB,SAASrE,EAAmBjB,GAInC,6DAAJ,GAAI,IAHNI,mBAGM,MAHQ+E,EAAWnF,GAGnB,EAFNF,EAEM,EAFNA,UACA+B,EACM,EADNA,aAEM8D,EAA2BlG,cAAiB,WAK/CC,GAAQ,IAJTvK,EAIS,EAJTA,UACAwK,EAGS,EAHTA,SAGS,IAFTE,GAAI+F,OAEK,MAFC9F,GAAa,MAEd,EADNC,EACM,6CACH8F,EAAiB5F,YAAmBN,EAAUK,GACpD,OAAoBE,cAAK0F,EAAD,aACtBlG,IAAKA,EACLvK,UAAWgL,IAAWhL,EAAW0Q,IAC9B9F,OAKP,OAFA4F,EAAY9D,aAAeA,EAC3B8D,EAAYvF,YAAcA,EACnBuF,I,2EC1BO,aAAAxQ,GAAS,OAAiBsK,cAAiB,SAACqG,EAAGpG,GAAJ,OAAyBQ,cAAK,MAAD,YAAC,eAAY4F,GAAb,IACtFpG,IAAKA,EACLvK,UAAWgL,IAAW2F,EAAE3Q,UAAWA,W,yCCLrC,OAOC,WACA,aAEA,IAAI4Q,EAAS,GAAGC,eAEhB,SAAS7F,IAGR,IAFA,IAAI8F,EAAU,GAELtK,EAAI,EAAGA,EAAIuK,UAAUtK,OAAQD,IAAK,CAC1C,IAAIwK,EAAMD,UAAUvK,GACpB,GAAKwK,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BH,EAAQ7J,KAAK+J,QACP,GAAIE,MAAMC,QAAQH,IACxB,GAAIA,EAAIvK,OAAQ,CACf,IAAI2K,EAAQpG,EAAWqG,MAAM,KAAML,GAC/BI,GACHN,EAAQ7J,KAAKmK,SAGT,GAAgB,WAAZH,EACV,GAAID,EAAIM,WAAa5I,OAAO6I,UAAUD,SACrC,IAAK,IAAIE,KAAOR,EACXJ,EAAOa,KAAKT,EAAKQ,IAAQR,EAAIQ,IAChCV,EAAQ7J,KAAKuK,QAIfV,EAAQ7J,KAAK+J,EAAIM,aAKpB,OAAOR,EAAQnH,KAAK,KAGgB+H,EAAOC,SAC3C3G,EAAW4G,QAAU5G,EACrB0G,EAAOC,QAAU3G,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,oHCJY6G,G,KAAsB,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,OAC7DC,EAA4BxH,gBAAoB,CACpDyH,SAAU,GACVC,YAAaH,IAKXC,EAFFG,SAEEH,EADFtG,SAqBK,SAASV,EAAmBD,EAAQqH,GACzC,IACEH,EACEI,qBAAWL,GADbC,SAEF,OAAOlH,GAAUkH,EAASG,IAAkBA,EAQvC,SAASE,IAId,MAAe,QADXD,qBAAWL,GADbO,M,gCC7CJ,+BAsBe7D,IAlBf,YAAgD,IAA7BC,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAK1O,UAAU,UAAf,UACI,6BAAKyO,IACL,oBAAIzO,UAAU,qBAAd,SACK0O,EAAOjI,OAAS,GAAKiI,EAAO3G,KAAI,SAACuK,EAAM9L,GACpC,OAAG8L,EAAKC,KACG,qBAAIvS,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASwS,OAAK,EAACjE,GAAI+D,EAAKC,KAAxB,SAA+BD,EAAKpS,OAApF,MAA6CsG,GAE7C,qBAAIxG,UAAU,0BAAd,cAAiD,+BAAOsS,EAAKpS,OAA7D,MAA6CsG,a","file":"static/js/29.69ef34fc.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React, { useState, useEffect } from 'react';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport InputComponent from '../../../components/UI/Input/Input';\nimport RKLoader from '../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { validationFormEdit } from './../../../helpers/validation/validation';\nimport { toBase64 } from '../../../helpers/fileHelper/fileHelper';\nimport { editProfile } from '../../../store/actions/dashboard';\nimport { Card, CardImg, Button, Modal } from 'react-bootstrap';\nimport './Setting.scss';\nimport { Redirect } from 'react-router-dom';\n// import { toBase64} from './helper'\n\nfunction Setting({\n    onEditProfile,\n    isLoading\n}) {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const [photoRaw, setPhotoRaw] = useState();\n    // const [coverRaw, setCoverRaw] = useState();\n    const [cover, setCover] = useState();\n    const [add, setAdd] = useState(false);\n    const [topic, setTopic] = useState(false);\n    const [kateprog, setKate] = useState(false);\n    const [notif, setNotif] = useState(false);\n    const [time, setTime] = useState(false);\n    const [photoPreview, setPhotoPreview] = useState(userData.thumbnail);\n\n    useEffect(() => {\n        if(photoRaw) {\n            let convertedPhoto = toBase64(photoRaw);\n            convertedPhoto.then((result) => {\n                setPhotoPreview(result);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        // } else if(coverRaw) {\n        //     let convertedPhoto = toBase64(coverRaw);\n        //     convertedPhoto.then((result) => {\n        //         setPhotoPreview(result);\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //     })\n        }\n    }, [photoRaw])\n\n    if(isLoading) {\n        return <RKLoader/>;\n    }\n    else if (add == true) {\n        return <Redirect to=\"/tools/setting-add\" />\n    }\n    else if (topic == true) {\n        return <Redirect to=\"/tools/setting-topik\" />\n    }\n    else if (kateprog == true) {\n        return <Redirect to=\"/tools/setting-list-kateProgram\" />\n    }\n    else if (notif == true) {\n        return <Redirect to=\"/tools/setting-list-kateNotif\" />\n    }\n    else if (time == true) {\n        return <Redirect to=\"/tools/setting-list-screentime\" />\n    }\n    return (\n        <div className=\"Setting\">\n            <Heading \n                headingName=\"Setting\"\n                routes={[\n                    { name: 'Setting' }\n                ]}\n            />\n            {/* <div className='div'>\n                <h3>Setting Cobrand</h3>\n                <Button className='add' onClick={() => setAdd(true)}>Target Audience</Button>\n                <Button className='add' onClick={() => setTopic(true)}>Topic Content</Button>\n                <Button className='add' onClick={() => setKate(true)}>Kategory Program</Button>\n                <Button className='add' onClick={() => setNotif(true)}>Kategory Notification</Button>\n                <Button className='add' onClick={() => setTime(true)}>Standart ScreenTime</Button>\n            </div> */}\n            \n            \n            <div className=\"Setting_card mt-medium\">\n                <div className=\"Setting_card_inputs\">\n                    <h2>Edit Account</h2>\n                    <Formik\n                        initialValues= {{\n                            email: userData.email,\n                            password: '',\n                            confirmPassword: '',\n                            cobrandName: userData.cobrandName,\n                            phoneNumber: userData.phoneNumber,\n                            address: userData.address,\n                            thumbnail: ''\n                        }}\n                        validationSchema = {validationFormEdit}\n                        validateOnChange = {true}\n                        onSubmit = {values => {\n                            onEditProfile(userData.email, userData.password, values.cobrandName, values.thumbnail, values.phoneNumber, values.address, values.password)\n                        }}\n                    >\n                    {({handleChange, handleBlur, handleSubmit, setFieldValue, touched, values, errors}) => (\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"Setting_card_inputs-item\">\n                                <div>\n                                    <label>Email</label>\n                                    <InputComponent\n                                        name=\"email\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                        isError={touched.email && Boolean(errors.email) }\n                                        message={touched.email && errors.email}\n                                        disabled={true}\n                                    />\n                                </div>\n                                <div>\n                                    <label>New Password</label>\n                                    <InputComponent\n                                        name=\"password\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.password}\n                                        onBlur={handleBlur}\n                                        isError={touched.password && Boolean(errors.password) }\n                                        message={touched.password && errors.password}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Confirm New Password</label>\n                                    <InputComponent\n                                        name=\"confirmPassword\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.confirmPassword}\n                                        onBlur={handleBlur}\n                                        disabled={!touched.password}\n                                        isError={touched.confirmPassword && Boolean(errors.confirmPassword) }\n                                        message={touched.confirmPassword && errors.confirmPassword}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"Setting_card_inputs-upload mt-large\">\n                                \n                                <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Photo</h2>\n                                    <InputComponent \n                                        placeholder=\"Photo\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div>\n                                {/* <div className=\"Setting_card_inputs-avatar\">\n                                        <h2>Cover</h2>\n                                        <input type=\"file\"\n                                            onChange={(e) => {\n                                                console.log(e.currentTarget.files[0]);\n                                                const promise = toBase64(e.currentTarget.files[0]);\n                                                promise.then(result => {\n                                                    console.log(result)\n                                                    setCover(result);\n                                                })\n                                            }}\n                                            className=\"Input-control\"\n                                            onBlur={handleBlur}\n                                            isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                            message={touched.thumbnail && errors.thumbnail}\n                                        />\n                                </div> */}\n                                {/* <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Cover</h2>\n                                    <InputComponent \n                                        placeholder=\"Cover\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div> */}\n                            </div>\n\n                            <div className=\"Setting_card_inputs-item mt-large\">\n                                <div>\n                                    <label>Co-Brand Name</label>\n                                    <InputComponent\n                                        name=\"cobrandName\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.cobrandName}\n                                        onBlur={handleBlur}\n                                        isError={touched.cobrandName && Boolean(errors.cobrandName) }\n                                        message={touched.cobrandName && errors.cobrandName}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Phone Number</label>\n                                    <InputComponent\n                                        name=\"phoneNumber\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.phoneNumber}\n                                        onBlur={handleBlur}\n                                        isError={touched.phoneNumber && Boolean(errors.phoneNumber) }\n                                        message={touched.phoneNumber && errors.phoneNumber}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Address</label>\n                                    <InputComponent\n                                        name=\"address\"\n                                        className=\"Input-control\"\n                                        type=\"textarea\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={handleBlur}\n                                        isError={touched.address && Boolean(errors.address) }\n                                        message={touched.address && errors.address}\n                                    />\n                                </div>\n                                <button\n                                    className=\"btn btn-submit\"\n                                    type=\"submit\"\n                                >\n                                    Update Profile\n                                </button>\n                            </div>\n                        </form>\n                    )}\n\n                    </Formik>\n\n                </div>\n                <div className=\"Setting_card_preview\">\n                    <h5>Preview</h5>\n                    <Card style={{ width: '25rem', borderRadius: '1rem'}}>\n                        {/* <div style={{ backgroundImage: `url(${cover ? cover : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxJUwAEmCj5NP7JfKft5Qz8a3UUoE0RcKiAeNDAulvE-jDh5HzB3-FBb5pBSfmWpJw0J4&usqp=CAU\"})` }} class=\"circletag\" id=\"nay\"> */}\n                            {/* <img className=\"img2\" src=\"https://cdn1.vectorstock.com/i/1000x1000/06/70/beautiful-cute-bee-vector-15910670.jpg\" /> */}\n                        <div className=\"backgr\" >\n                        {/* backgroundImage: `url(${cover ? cover : \"https://defghi.co.id/wp-content/uploads/2021/07/Logo-IDE.png\" */}\n                            <img className=\"img2\" src={photoPreview ? photoPreview : \"https://thumbs.dreamstime.com/b/default-avatar-profile-icon-vector-social-media-user-portrait-176256935.jpg\"} />\n                        </div>\n                        <Card.Body className=\"body-card\">\n                            <Card.Title style={{ textAlign: 'center' }}>Bimbel Defghi</Card.Title>\n                            <Card.Text>\n                                Some quick example text to build on the card title and make up the bulk of\n                                the card's content.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {/* <img src={photoPreview} className=\"Setting_card_preview_image\"/> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProfile: ( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ) => \n            dispatch(editProfile( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Setting)\n","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    dir\n  }), [prefixes, breakpoints, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}