{"version":3,"sources":["containers/CoBrand/Report/Report.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Report","obj","TypeError","useState","isLoading","setLoading","isUpdatingRegistered","setUpdatingRegistered","isUpdatingActive","setUpdatingActive","isUpdatingRessort","setUpdatingRessort","isUpdatingHuria","setUpdatingHuria","userType","setUserType","userTypeActive","setUserTypeActive","selectedDistrik","selectedRessort","countUser","setCountUser","countActive","setCountActive","countInactive","setCountInactive","setCountUserDistrik","setCountUserRessort","setCountUserHuria","stringHKBP","setStringHKBP","userData","setUserData","programList","setProgramList","programDeleting","setProgramDeleting","params","whereKeyValues","cobrandEmail","JSON","parse","localStorage","getItem","email","limit","Number","MAX_SAFE_INTEGER","useEffect","removeItem","getProgramList","then","response","data","console","log","catch","error","countingUserDistrik","HKBPString","promiseX","getUserList","promise1","getHKBPList","Promise","all","HKBPData","forEach","e","distrik","Object","assign","ressort","includes","nama","push","keys","elements","countUserPerDistrik","users","namaHkbp","packageId","length","status","params2","response2","countingUserRessort","countUserPerRessort","countingUserHuria","countUserPerHuria","axios","method","url","RKLoader","className","name","value","onChange","currentTarget","toFixed","Table","COLUMNS","columns","DATA","programs"],"mappings":"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","file":"static/js/23.45d35e24.chunk.js","sourcesContent":["import React, { useState, useEffect, Suspense, lazy } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport './Report.scss';\nimport './../Program/Program.scss'\nimport { BiCaretDown, BiCaretUp, BiMinus } from 'react-icons/bi';\nimport axios from 'axios';\nimport RKLoader from './../../../components/UI/RKLoaderInner/RKLoader.js';\nimport { getHKBPList, getUserList } from '../../../components/API/filter';\nimport TableProgram from './../../../components/UI/Table/Table';\nimport columns from './../Program/components/Columns';\nimport Data from './../Program/components/MOCK_DATA.json';\nimport { deleteProgram } from '../../../store/actions/dashboard';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport {connect} from 'react-redux';\nimport { getProgramList } from '../../../components/API/filter';\nconst ChartAsync = lazy(() => import('./component/Chart'));\n\nconst Report = ({\n\n}) => {\n    const [isLoading, setLoading] = useState(true);\n\n    const [isUpdatingRegistered, setUpdatingRegistered] = useState(false);\n    const [isUpdatingActive, setUpdatingActive] = useState(false);\n    const [isUpdatingRessort, setUpdatingRessort] = useState(false);\n    const [isUpdatingHuria, setUpdatingHuria] = useState(false);\n\n    const [userType, setUserType] = useState('all');\n    const [userTypeActive, setUserTypeActive] = useState('all');\n    const [selectedDistrik, setDistrik] = useState('');\n    const [selectedRessort, setRessort] = useState('');\n\n    const [countUser, setCountUser] = useState(0);\n    const [countActive, setCountActive] = useState(0);\n    const [countInactive, setCountInactive] = useState(0);\n    const [countUserDistrik, setCountUserDistrik] = useState([]);\n    const [countUserRessort, setCountUserRessort] = useState([]);\n    const [countUserHuria, setCountUserHuria] = useState([]);\n\n    const [stringHKBP, setStringHKBP] = useState();\n    const [userData, setUserData] = useState();\n\n    const [showModal, setShowModal] = useState(false);\n\n    const [programList, setProgramList] = useState();\n    const [programDeleting, setProgramDeleting] = useState(null);\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    const user1Data = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: user1Data.email\n        },\n        limit: Number.MAX_SAFE_INTEGER\n    };\n\n    \n    function retrieveList() {\n        getProgramList(params)\n        .then(response => {\n            setProgramList(response.data);\n            console.log(response.data);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        });\n    }\n    \n    useEffect(() => {\n        setLoading(true);\n        if(localStorage.getItem('programDeleting')) {\n            setProgramDeleting(localStorage.getItem('programDeleting'));\n            localStorage.removeItem('programDeleting');\n        }\n        retrieveList();\n    }, []);\n\n    useEffect(() => {\n        if(programDeleting) {\n            setLoading(true);\n        }\n    }, [programDeleting]);\n\n    useEffect(() => {\n        let countingUserDistrik = [];\n        /*let HKBPString = {\n            stringDistrik: [],\n            stringRessort: [],\n            stringHuria: []\n        };*/\n        let HKBPString = {};\n\n        //Get All User Database\n        const promiseX = getUserList({limit: Number.MAX_SAFE_INTEGER});\n\n        //List HKBP\n        const promise1 = getHKBPList({limit: Number.MAX_SAFE_INTEGER});\n\n        Promise.all([promiseX, promise1]).then(response => {\n\n            console.log(response[1].data);\n\n            response[1].data.HKBPData.forEach(e => {\n                if(!(e.distrik in HKBPString)) HKBPString = Object.assign(HKBPString, {[e.distrik]: {}});\n                if(!((\"Ressort \" + e.ressort) in HKBPString[e.distrik])) HKBPString[e.distrik] = Object.assign(HKBPString[e.distrik], {[\"Ressort \" + e.ressort]: []});\n                if(!HKBPString[e.distrik][\"Ressort \" + e.ressort].includes(\"Huria \" + e.nama)) HKBPString[e.distrik][\"Ressort \" + e.ressort].push(\"Huria \" + e.nama);\n            });\n            console.log(HKBPString);\n\n            setStringHKBP(HKBPString);\n\n            Object.keys(HKBPString).forEach(elements => {\n                let countUserPerDistrik = 0;\n                response[0].data.users.forEach(e => {\n                    if(e.namaHkbp && e.namaHkbp.includes(elements) && e.namaHkbp !== '') countUserPerDistrik += 1;\n                });\n                countingUserDistrik.push(countUserPerDistrik);\n            });\n\n            setUserData(response[0].data.users);\n            setCountUserDistrik(countingUserDistrik);\n            setLoading(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        let params={\n            whereKeyValues: {\n                packageId: \"com.asia.ruangortu\"\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        if(userType !== 'all') {\n            params.whereKeyValues = {\n                userType: userType,\n                packageId: \"com.asia.ruangortu\"\n            }\n        }\n        console.log(params);\n        getUserList(params)\n        .then(response => {\n            setCountUser(response.data.users.length);\n            setUpdatingRegistered(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setUpdatingRegistered(false);\n        });\n    }, [isUpdatingRegistered]);\n\n    useEffect(() => {\n        let params={\n            whereKeyValues: {\n                status: 'active',\n                packageId: \"com.asia.ruangortu\"\n// bagian active user all --> filter bisa\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        if(userTypeActive !== 'all') {\n            params.whereKeyValues = {\n                userType: userTypeActive,\n                status: 'active',\n                packageId: \"com.asia.ruangortu\"\n\n//parameter child & parent\n            }\n        }\n        console.log(params);\n        getUserList(params)\n        .then(response => {\n            setCountActive(response.data.users.length);\n            let params2={\n                whereKeyValues: {\n                    packageId: \"com.asia.ruangortu\"\n                    // persen jumlah pengguna\n                },\n                limit: Number.MAX_SAFE_INTEGER\n\n            };\n            if(userTypeActive !== 'all') {\n                params2.whereKeyValues = {\n                    userType: userTypeActive,\n                    packageId: \"com.asia.ruangortu\"\n                    // yang inactive\n                }\n            }\n            getUserList(params2)\n            .then(response2 => {\n                setCountInactive(response2.data.users.length-response.data.users.length);\n                setUpdatingActive(false);\n            })\n            .catch(error => {\n                console.log(error);\n                setUpdatingActive(false);\n            });\n        })\n        .catch(error => {\n            console.log(error);\n            setUpdatingActive(false);\n        });\n    }, [isUpdatingActive]);\n\n    useEffect(() => {\n        if(isUpdatingRessort) {\n            let countingUserRessort = [];\n            Object.keys(stringHKBP[selectedDistrik]).forEach(elements => {\n                let countUserPerRessort = 0;\n                userData.forEach(e => {\n                    if(e.namaHkbp && e.namaHkbp.includes(elements) && e.namaHkbp.includes(selectedDistrik)\n                        && e.namaHkbp !== '') countUserPerRessort += 1;\n                });\n                countingUserRessort.push(countUserPerRessort);\n            });\n            console.log(Object.keys(stringHKBP[selectedDistrik]));\n            setCountUserRessort(countingUserRessort);\n            setUpdatingRessort(false);\n        }\n    }, [isUpdatingRessort]);\n\n    useEffect(() => {\n        if(isUpdatingHuria) {\n            let countingUserHuria = [];\n            stringHKBP[selectedDistrik][selectedRessort].forEach(elements => {\n                let countUserPerHuria = 0;\n                userData.forEach(e => {\n                    if(e.namaHkbp && e.namaHkbp.includes(elements) && e.namaHkbp.includes(selectedRessort) && \n                        e.namaHkbp.includes(selectedDistrik)&& e.namaHkbp !== '') countUserPerHuria += 1;\n                });\n                countingUserHuria.push(countUserPerHuria);\n            });\n            console.log(stringHKBP[selectedDistrik][selectedRessort]);\n            setCountUserHuria(countingUserHuria);\n            setUpdatingHuria(false);\n        }\n    }, [isUpdatingHuria]);\n\n    // untuk report penggunaan all user - package id nya yg d bedain\n    useEffect(() => {\n        const body = {\n            whereKeyValues: {\n                packageId: \"com.asia.ruangortu\"\n            }\n        }\n        axios({\n            method: 'get',\n            url: 'https://rk.defghi.biz.id:8080/api/user/getAllUser',\n            data: body\n        })\n\n        // axios.get(\"https://rk.defghi.biz.id:8080/api/user/getAllUser\", body)\n            .then(response => {\n                console.log(response.data);\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },[])\n\n    if(isLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n        <div className=\"Report\">\n\n            <div className=\"Report_heading\">\n                <h1>USER REPORT</h1>\n            </div>\n            <section className=\"UserReport\">\n                <div className=\"UserReport_totaluser\">\n\n                    <div className=\"Report_card\">\n                        <div className=\"Report_card_heading\">\n                            <h3>Total Registered User (Email)</h3>\n                            <FiAlertCircle className=\"Report_card_icon\" />\n                        </div>\n                        <div className=\"Report_card_content\">\n                            <div className=\"Report_card_content_type\">\n                                <select\n                                    name=\"userType\"\n                                    value={userType}\n                                    onChange={(e) => {\n                                        console.log('bruh');\n                                        console.log(e.currentTarget.value);\n                                        setUserType(e.currentTarget.value);\n                                        setUpdatingRegistered(true);\n                                    }}>\n                                    <option value=\"all\">All</option>\n                                    <option value=\"parent\">Parent</option>\n                                    <option value=\"child\">Child</option>\n                                </select>\n                            </div>\n                            <div className=\"Report_card_content-data\">\n                                <div className=\"Report_card_content-data-left\">\n                                    <h1>{countUser}</h1>\n                                </div>\n                                <div className=\"Report_card_content-data-right\">\n                                    <div>\n                                        <div className=\"labelTitle\"></div>\n                                        <h5>Total Registered User</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"UserReport_totalactive\">\n\n                    <div className=\"Report_card\">\n                        <div className=\"Report_card_heading\">\n                            <h3>Total Active User</h3>\n                            <FiAlertCircle className=\"Report_card_icon\" />\n                        </div>\n                        <div className=\"Report_card_content\">\n                            <div className=\"Report_card_content_type\">\n                                <select\n                                    name=\"userTypeActive\"\n                                    value={userTypeActive}\n                                    onChange={(e) => {\n                                        console.log('bruh');\n                                        console.log(e.currentTarget.value);\n                                        setUserTypeActive(e.currentTarget.value);\n                                        setUpdatingActive(true);\n                                    }}>\n                                    <option value=\"all\">All</option>\n                                    <option value=\"parent\">Parent</option>\n                                    <option value=\"child\">Child</option>\n                                </select>\n                            </div>\n                            <div className=\"Report_card_content-data\">\n                                <div className=\"Report_card_content-data-left\">\n                                    <h1>{countActive}</h1>\n                                    <div>\n                                        <>\n                                            <h5 className=\"text-normal\">{countInactive} ({(countInactive/(countActive+countInactive)*100).toFixed(1)}%)</h5>\n                                        </>\n                                    </div>\n                                </div>\n                                <div className=\"Report_card_content-data-right\">\n                                    <div>\n                                        <div className=\"labelTitle\"></div>\n                                        <h5>Total Active User</h5>\n                                    </div>\n                                    <div className=\"mt-small\">\n                                        <div className=\"labelWarning\"></div>\n                                        <h5>Total Inactive/Invited User</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </section>\n        </div>\n        <div>\n            <div className=\"Report_heading\">\n                    <h1>PROGRAM REPORT</h1>\n                </div>\n            <div className=\"Program__table\">\n                <TableProgram \n                    COLUMNS={columns(setProgramDeleting)} \n                    DATA={programList.programs}  \n                />\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Report;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}