{"version":3,"sources":["containers/CoBrand/Content/EditContent/EditContent.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/webMainUtils.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onEditContent","_id","cobrandEmail","programId","contentName","contentDescription","contentType","contentSource","contentThumbnail","contents","startDate","history","editContent","useState","isPageLoading","setPageLoading","programList","setProgramList","content","setContent","contentStartDate","setContentStartDate","useHistory","JSON","parse","localStorage","getItem","email","params1","whereKeyValues","useEffect","params","axios","method","url","data","headers","then","response","date","split","programs","catch","error","headingName","routes","path","name","initialValues","validationSchema","validationContentEdit","validateOnChange","onSubmit","values","handleChange","handleSubmit","setFieldValue","errors","className","value","onChange","disabled","map","program","programName","type","placeholder","Heading","length","item","i","exact","to","Input","onBlur","message","isError","id","memo","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","min","confirmPassword","when","schema","validationProgram","programDescription","programThumbnail","validationProgramEdit","validationContent","authStart","AUTH_START","authFailed","AUTH_FAILED","addProgram","ProgramDescription","photo","toBase64","result","programthumnail","setTimeout","push","editProgram","whereValues","newValues","addContent","finalUrl","videoId","encodeURIComponent","undefined","getEmbedUrl"],"mappings":"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","file":"static/js/8.44f00f3e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditContent.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editContent } from '../../../../store/actions/webMainUtils';\nimport RKLoader from '../../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationContentEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nfunction EditContent({\n    onEditContent,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [content, setContent] = useState();\n    const [contentStartDate, setContentStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('contentSelected');\n\n    const params1 = {\n        whereKeyValues: {\n            cobrandEmail: cobrandEmail\n        }\n    };\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if(_id) {\n            const params = {\n                whereKeyValues: {\n                    cobrandEmail: cobrandEmail,\n                    _id: _id\n                }\n            };\n\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setContent(response.data.contents[0]);\n                let date = response.data.contents[0].startDate.split('T')[0];\n                console.log(date);\n                setContentStartDate(date);\n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n                    data: params1,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log(\"Program list: \", response.data);\n                    setProgramList(response.data.programs);\n                    setPageLoading(false);\n                })\n                .catch(error => {\n                    console.log(error);\n                    setPageLoading(false);\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n        }\n    }, []);\n\n    if(isPageLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Content\" routes={[\n                { path: '/content', name: 'Content' },\n                { path: '/content/edit', name: 'Edit Selected content' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programId: content.programId,\n                    contentName: content.contentName,\n                    contentDescription: content.contentDescription,\n                    contentType: content.contentType,\n                    contentSource: content.contentSource,\n                    contents: content.contents,\n                    startDate: contentStartDate\n                }}\n                validationSchema = {validationContentEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onEditContent( _id, cobrandEmail, values.programId, values.contentName, values.contentDescription, values.contentType, values.contentSource, '', values.contents, values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, setFieldValue, values, errors}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditContent\">\n                        <h1>Edit Selected Content: {content.contentName}</h1>\n                        <div className=\"form-group\">\n                            <label>Content Type</label>\n                            <select\n                                name=\"contentType\"\n                                value={values.contentType}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\" disabled>--Select Content Type--</option>\n                                <option value=\"Artikel\">Artikel</option>\n                                <option value=\"Image\">Image</option>\n                                <option value=\"Video\">Video</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Program Name</label>\n                            <select\n                                name=\"programId\"\n                                value={values.programId}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">(Tanpa Program)</option>\n                                {\n                                    programList.map((program) => {\n                                        return (\n                                            <option value={program._id}>{program.programName}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"contentName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.contentName}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.contentName}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"contentDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.contentDescription}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <span className=\"message__error\">{errors.contentDescription}</span>\n                        <div className=\"form-group\">\n                            <label>Source</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"contentSource\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.contentSource}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.contentSource}</span>\n                        </div>\n                        {/*<div className=\"form-group\">\n                            <label>Photo</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"contentThumbnail\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"contentThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.contentThumbnail}</span>\n                        </div>*/}\n                        <div className=\"form-group\">\n                            <label>Contents</label>\n                            { values.contentType === \"Artikel\" ? (\n                                <InputComponent\n                                    type=\"textarea\"\n                                    name=\"contents\"\n                                    placeholder=\"Type Something...\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            { values.contentType === \"Image\" ? (\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contents\"\n                                    className=\"form-group__input form-group__input--fullwidth\" \n                                    placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            { values.contentType === \"Video\" ? (\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contents\"\n                                    className=\"form-group__input form-group__input--fullwidth\" \n                                    placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            <span className=\"message__error\">{errors.contents}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.startDate}</span>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Upload Content\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditContent: ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, history) =>\n            dispatch( editContent( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditContent)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else return (\n    <>\n        <input\n            name={name}\n            className={className} \n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n        {isError && (\n            <div className=\"message\">\n                <span className=\"message__error\">{message}</span>\n            </div>\n        )}\n    </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64 } from '../../helpers/fileHelper/fileHelper';\n\nfunction getEmbedUrl(url) {\n    // function for generating an embed link\n    let finalUrl = '';\n    let videoId = '';\n\n    if (url.includes('facebook.com/')) {\n        // Facebook Video\n        finalUrl = 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(url) + '&show_text=1&width=200';\n\n    } else if(url.includes('vimeo.com/')) {\n        // Vimeo video\n        videoId = typeof(url.split(\"vimeo.com/\")[1]) !== undefined ? url.split(\"vimeo.com/\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://player.vimeo.com/video/' + videoId;\n\n    } else if (url.includes('youtube.com/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"v=\")[1]) !== undefined ? url.split(\"v=\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' + videoId;\n\n    } else if(url.includes('youtu.be/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"youtu.be/\")[1]) !== undefined ? url.split(\"youtu.be/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' +  videoId;\n\n    } else if (url.includes('dailymotion.com/')) {\n        // Dailymotion Video\n        videoId = typeof(url.split(\"dailymotion.com/\")[1]) !== undefined ? url.split(\"dailymotion.com/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.dailymotion.com/embed/' + videoId;\n\n    } else{\n        finalUrl = url;\n    }\n\n    return finalUrl;\n}\n\nexport const authStart = () => ({ type: AUTH_START });\nexport const authFailed = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS })\n\nexport const addProgram = ( cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            setTimeout( () => {\n                let data = {\n                    cobrandEmail,\n                    programName,\n                    ProgramDescription,\n                    programthumnail,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        });\n    }\n\n}\n\nexport const editProgram = ( _id, cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            setTimeout( () => {\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                setTimeout( () => {\n                    let data = {\n                        whereValues: {\n                            cobrandEmail,\n                            _id\n                        },\n                        newValues: {\n                            programName,\n                            ProgramDescription,\n                            programthumnail,\n                            startDate\n                        }\n                    };\n\n                    console.log(data);\n                    //Call API ....\n                    \n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                        data: data,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(authFailed());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(authFailed());\n                    });\n                    console.log(data);\n                },2000)\n            });\n        }\n    }\n\n}\n\nexport const addContent = ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const contentThumbnail = result;\n\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\"\n            }\n\n            console.log(contents);\n\n            setTimeout( () => {\n                let data = {\n                    cobrandEmail,\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contentThumbnail,\n                    contents,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        });\n    }\n\n    \n\n}\n\nexport const editContent = ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            setTimeout( () => {\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                setTimeout( () => {\n                    let data = {\n                        whereValues: {\n                            cobrandEmail,\n                            _id\n                        },\n                        newValues: {\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contents,\n                            startDate\n                        }\n                    };\n\n                    console.log(data);\n                    //Call API ....\n                    \n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                        data: data,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/content');\n                        dispatch(authFailed());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(authFailed());\n                    });\n                    console.log(data);\n                },2000)\n            });\n        }\n    }\n\n    \n\n}"],"sourceRoot":""}