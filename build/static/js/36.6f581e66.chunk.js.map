{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Table/Table.js","containers/CoBrand/RedZone/components/Columns.js","containers/CoBrand/RedZone/RedZone.js","components/UI/Map/Map.js","components/UI/Heading/Heading.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","Table","DATA","COLUMNS","renderRowSubComponent","data","useMemo","useTable","columns","initialState","hiddenColumns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","onClick","length","defaultValue","e","target","Number","map","currentTarget","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","Columns","Header","accessor","RedZone","useState","mapSearch","mapSearchInput","listRedzone","setListRedzone","useEffect","JSON","parse","localStorage","getItem","axios","method","url","whereKeyValues","cobrandEmail","then","response","Data","catch","error","Heading","headingName","routes","path","urlBuilder","encodeURI","accessToken","features","Map","search","to","ReactMapboxGl","GoogleMaps","style","containerStyle","height","center","zoom","layout","coordinates","item","exact"],"mappings":"yJAAA,2BAGA,SAASA,EAAT,GAaI,IAZAC,EAYD,EAZCA,YACAC,EAWD,EAXCA,KACAC,EAUD,EAVCA,SACAC,EASD,EATCA,OACAC,EAQD,EARCA,MACAC,EAOD,EAPCA,UACAC,EAMD,EANCA,QACAC,EAKD,EALCA,KACAC,EAID,EAJCA,IACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,SACAC,EACD,EADCA,QAEA,MAAY,aAATV,EAEC,qCACI,0BACIM,KAAMA,EACNK,GAAIL,EACJF,UAAWA,EACXL,YAAaA,EACbE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPM,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAMjC,SAATL,GAA4B,mBAATA,EAEnB,qCACI,uBACIM,KAAMA,EACNF,UAAWA,EACXJ,KAAMA,EACND,YAAaA,EACbE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPI,IAAKA,EACLC,IAAK,aACLC,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAMrC,WAATL,EAEA,qCACI,uBACIM,KAAMA,EACNF,UAAWA,EACXJ,KAAMA,EACNC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPI,IAAKA,EACLC,IAAKA,EACLC,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAOlD,qCACI,uBACIC,KAAMA,EACNF,UAAWA,EACXJ,KAAMA,EACND,YAAaA,EACbE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPM,SAAUA,IAEbC,GACG,qBAAKN,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCC,SAOvCO,mBAAKd,I,iICmDLe,IAtJf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,sBAEtBC,EAAOC,mBAAS,kBAAMJ,IAAO,CAACA,IAIpC,EAmBIK,mBAAS,CACTC,QAASL,EACTE,KAAMA,EACNI,aAxBiB,CAAEC,cAAe,CAAC,SAyBpCC,kBACDC,YACAC,cACAC,iBAzBEC,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,WACAC,EALJ,EAKIA,KACAC,EANJ,EAMIA,KACAC,EAPJ,EAOIA,gBACAC,EARJ,EAQIA,YACAC,EATJ,EASIA,YACAC,EAVJ,EAUIA,UACAC,EAXJ,EAWIA,SACAC,EAZJ,EAYIA,SACAC,EAbJ,EAaIA,aACAC,EAdJ,EAcIA,YACAC,EAfJ,EAeIA,eAfJ,IAgBIC,MAAQC,EAhBZ,EAgBYA,UAAWC,EAhBvB,EAgBuBA,SACnBF,GAjBJ,EAgBiCG,SAhBjC,EAiBIH,OACAI,EAlBJ,EAkBIA,gBAUIC,EAAiBL,EAAjBK,aAGR,OACI,qCACA,sBAAK3C,UAAU,QAAf,UACI,sBAAKA,UAAU,aAAf,UACI,wBAAQ4C,QAAS,kBAAMX,EAAS,IAAI5B,UAAWwB,EAA/C,SACC,OAED,wBAAQe,QAAS,kBAAMT,KAAgB9B,UAAWwB,EAAlD,SACC,MAED,wBAAQe,QAAS,kBAAMV,KAAY7B,UAAWyB,EAA9C,SACC,MAED,wBAAQc,QAAS,kBAAMX,EAASD,EAAY,IAAI3B,UAAWyB,EAA3D,SACC,OAED,yCACM,IACN,mCACKS,EAAY,EADjB,OACwBR,EAAYc,aAGpC,iDAEI,uBACIjD,KAAK,SACLkD,aAAcP,EAAY,EAC1B1C,SAAU,SAAAkD,GACN,IAAMpB,EAAOoB,EAAEC,OAAOjD,MAAQkD,OAAOF,EAAEC,OAAOjD,OAAS,EAAI,EAC3DkC,EAASN,SAIrB,wBACA5B,MAAOyC,EACP3C,SAAU,SAAAkD,GACNX,EAAYa,OAAOF,EAAEC,OAAOjD,SAHhC,SAMC,CAAC,GAAI,GAAI,IAAImD,KAAI,SAAAV,GAAQ,OACtB,yBAAuBzC,MAAOyC,EAA9B,kBACUA,IADGA,WAMrB,sBAAKxC,UAAU,cAAf,UACI,2CAAc4B,EAAKiB,OAAnB,WACA,uBACIjD,KAAK,OACLI,UAAU,oBACVL,YAAY,SACZI,MAAQ4C,GAAgB,GACxB9C,SAAU,SAACkD,GACPL,EAAgBK,EAAEI,cAAcpD,gBAKhD,qBAAKC,UAAU,kBAAf,SACD,kDAAWuB,KAAX,cACI,gCACKE,EAAayB,KAAI,SAAAE,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQJ,KAAI,SAAAK,GAAM,OAC3B,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACKF,EAAOG,OAAO,UACd,+BACKH,EAAOI,SACNJ,EAAOK,aACF,cAAC,IAAD,IACA,cAAC,IAAD,IACL,oBAO3B,iDAAWpC,KAAX,aACMG,EAAKuB,KAAI,SAACW,EAAKC,GAEZ,OADApC,EAAWmC,GAEP,eAAC,WAAD,2BAAcA,EAAIE,eAAlB,cACI,6BACKF,EAAIG,MAAMd,KAAI,SAAAe,GACX,OAAO,+CAAQA,EAAKC,gBAAb,kBAAkD,cAAnBD,EAAKV,OAAOhD,GAAqBuD,EAAI,EAAKvB,EAAYC,EAAYyB,EAAKP,OAAO,QAA7G,aAGdG,EAAIM,WACD,6BACI,oBAAIC,QAAS/B,EAAeQ,OAA5B,SAQKjC,EAAsB,CAAEiD,YAGjC,0B,uGCvFjBQ,EAtDC,CACZ,CACIC,OAAQ,KACRC,SAAU,gBAEd,CACID,OAAQ,OACRC,SAAU,aAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,SACRC,SAAU,iBAKd,CACID,OAAQ,SACRC,SAAU,Y,+CCmIHC,UAhJf,WACI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAgFA,OA7EAC,qBAAU,WAGWC,KAAKC,MAAMC,aAAaC,QAAQ,aAQjDC,IAAM,CACFC,OAAQ,OACRC,IAAK,gEACLxE,KATJ,CACIyE,eAAgB,CACZC,aAAc,6BASjBC,MAAK,SAAAC,GAEFZ,EAAeY,EAAS5E,KAAK6E,SAIhCC,OAAM,SAAAC,SAGZ,IAqDC,sBAAK5F,UAAU,UAAf,UACI,cAAC6F,EAAA,EAAD,CAASC,YAAY,UAAUC,OAAQ,CACnC,CAAE7F,KAAM,gBACR,CAAE8F,KAAM,WAAY9F,KAAM,mBAG9B,sBAAKF,UAAU,eAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,0CACA,cAACN,EAAA,EAAD,CACIM,UAAU,gBACVJ,KAAK,OACLD,YAAY,SACZO,KAAK,SACLL,SAAU,SAACkD,GAEP,IAAIkD,EAAa,qDAAuDC,UAAUnD,EAAEI,cAAcpD,OAAS,sBAAwBoG,IACnIhB,IAAM,CACFC,OAAQ,MACRC,IAAKY,IAEJT,MAAK,SAAAC,GAEFd,EAAec,EAAS5E,KAAKuF,SAAS,OAEzCT,OAAM,SAAAC,aAMvB,qBAAK5F,UAAU,gBAAf,SACI,cAACqG,EAAA,EAAD,CAAcC,OAAQ5B,SAG9B,sBAAK1E,UAAU,gBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,eAAC,IAAD,CAASuG,GAAG,mBAAmBhG,GAAG,MAAlC,UACI,cAAC,IAAD,CAAQP,UAAU,YAClB,yDAEJ,cAAC,IAAD,CAASuG,GAAG,oBAAoBhG,GAAG,OAAnC,SAEI,qDAIR,qBAAKP,UAAU,mBAAf,SACI,gDAEJ,qBAAKA,UAAU,gBAAf,SACI,cAACS,EAAA,EAAD,CAAcT,UAAU,YACpBW,QAAS0D,EACT3D,KAAMkE,c,iCCpJ9B,0EAKMyB,EAAMG,YAAc,CACtBL,YACE,sGAGOA,EAAc,oGA6BZM,IA3BI,SAAC,GAAc,IAAbH,EAAY,EAAZA,OAGjB,OACE,cAACD,EAAD,CACIK,MAAM,oCACNC,eAAgB,CACdC,OAAQ,QAEVC,OACEP,EAASA,EAAOO,OAAQ,CAAC,GAAI,IAE/BC,KAAM,CAAC,IARX,SAUE,cAAC,IAAD,CACElH,KAAK,SACLW,GAAG,SACHwG,OAAQ,CAAE,aAAc,aAH1B,SAKE,cAAC,IAAD,CAASC,YACLV,EAASA,EAAOO,OAAQ,CAAC,EAAG,W,kGChC1C,gCAsBehB,IAlBf,YAAgD,IAA7BC,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAK/F,UAAU,UAAf,UACI,6BAAK8F,IACL,oBAAI9F,UAAU,qBAAd,SACK+F,EAAOlD,OAAS,GAAKkD,EAAO7C,KAAI,SAAC+D,EAAMnD,GACpC,OAAGmD,EAAKjB,KACG,qBAAIhG,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASkH,OAAK,EAACX,GAAIU,EAAKjB,KAAxB,SAA+BiB,EAAK/G,OAApF,MAA6C4D,GAE7C,qBAAI9D,UAAU,0BAAd,cAAiD,+BAAOiH,EAAK/G,OAA7D,MAA6C4D","file":"static/js/36.6f581e66.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport './Input.scss';\r\n\r\nfunction Input({\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    onBlur,\r\n    value,\r\n    className,\r\n    message,\r\n    name,\r\n    min,\r\n    max,\r\n    disabled,\r\n    isError\r\n}) {\r\n    if(type === \"textarea\") {\r\n        return (\r\n        <>\r\n            <textarea\r\n                name={name}\r\n                id={name}\r\n                className={className}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                value={value}\r\n                disabled={disabled}\r\n            />\r\n            {isError && (\r\n                <div className=\"message\">\r\n                    <span className=\"message__error\">{message}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n        )\r\n    }\r\n    else if(type === 'date' || type === 'datetime-local') {\r\n        return (\r\n            <>\r\n                <input\r\n                    name={name}\r\n                    className={className} \r\n                    type={type}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    min={min}\r\n                    max={\"9999-12-31\"}\r\n                    disabled={disabled}\r\n                />\r\n                {isError && (\r\n                    <div className=\"message\">\r\n                        <span className=\"message__error\">{message}</span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    else if(type === 'number') {\r\n        return (\r\n            <>\r\n                <input\r\n                    name={name}\r\n                    className={className} \r\n                    type={type}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    disabled={disabled}\r\n                />\r\n                {isError && (\r\n                    <div className=\"message\">\r\n                        <span className=\"message__error\">{message}</span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    else return (\r\n        <>\r\n            <input\r\n                name={name}\r\n                className={className} \r\n                type={type}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                value={value}\r\n                disabled={disabled}\r\n            />\r\n            {isError && (\r\n                <div className=\"message\">\r\n                    <span className=\"message__error\">{message}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Input) \r\n","import React, { useMemo, useEffect, Fragment } from 'react';\r\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\r\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\r\nimport './Table.scss';\r\n\r\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\r\n\r\n    const data = useMemo( () => DATA , [DATA])\r\n\r\n    const initialState = { hiddenColumns: ['_id'] };\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        rows,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        visibleColumns,\r\n        state: {pageIndex, pageSize, expanded},\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable({\r\n        columns: COLUMNS,\r\n        data: data,\r\n        initialState\r\n    }, useGlobalFilter\r\n    , useSortBy\r\n    , useExpanded\r\n    , usePagination)\r\n\r\n    const { globalFilter } = state;\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"utils\">\r\n            <div className=\"pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                {'<<'}\r\n                </button>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                {'<'}\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                {'>'}\r\n                </button>\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                {'>>'}\r\n                </button>\r\n                <span>\r\n                Page {' '}\r\n                <strong>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                </strong>\r\n                </span>\r\n                <span>\r\n                | Go to page:\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue={pageIndex + 1}\r\n                        onChange={e => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                            gotoPage(page)\r\n                        }}\r\n                    />\r\n                </span>\r\n                <select\r\n                value={pageSize}\r\n                onChange={e => {\r\n                    setPageSize(Number(e.target.value))\r\n                }}\r\n                >\r\n                {[10, 15, 20].map(pageSize => (\r\n                    <option key={pageSize} value={pageSize}>\r\n                        Show {pageSize}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"table_props\">\r\n                <span>Total: {rows.length} Data</span>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"table_props_input\"\r\n                    placeholder=\"Search\"\r\n                    value={ globalFilter || '' }\r\n                    onChange={(e) => {\r\n                        setGlobalFilter(e.currentTarget.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"table_container\">\r\n       <table {...getTableProps()}>\r\n           <thead>\r\n               {headerGroups.map(headerGroup => (\r\n                   <tr {...headerGroup.getHeaderGroupProps()}>\r\n                       {headerGroup.headers.map(column => (\r\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                               {column.render('Header')}\r\n                                <span>\r\n                                    {column.isSorted\r\n                                    ? column.isSortedDesc\r\n                                        ? (<BiCaretDown/>)\r\n                                        : (<BiCaretUp/>)\r\n                                    : ''}\r\n                                </span>\r\n                            </th>\r\n                       ))}\r\n                   </tr>\r\n               ))}\r\n           </thead>\r\n           <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <Fragment {...row.getRowProps()}>\r\n                            <tr>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\r\n                                })}\r\n                            </tr>\r\n                            {row.isExpanded ? (\r\n                                <tr>\r\n                                    <td colSpan={visibleColumns.length}>\r\n                                        {/*\r\n                                            Inside it, call our renderRowSubComponent function. In reality,\r\n                                            you could pass whatever you want as props to\r\n                                            a component like this, including the entire\r\n                                            table instance. But for this example, we'll just\r\n                                            pass the row\r\n                                            */}\r\n                                        {renderRowSubComponent({ row })}\r\n                                    </td>\r\n                                </tr>\r\n                            ) : null}\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n           </tbody>\r\n       </table>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Columns = [\r\n    {\r\n        Header: 'No',\r\n        accessor: 'cobrandEmail'\r\n    },\r\n    {\r\n        Header: 'Name',\r\n        accessor: 'placeName'\r\n    },\r\n    {\r\n        Header: 'Location',\r\n        accessor: 'location'\r\n    },\r\n    {\r\n        Header: 'Status',\r\n        accessor: 'redZoneStatus'\r\n        // Cell: ({row}) => {\r\n        //     return row.original.lat + ' '+row.original.lon;\r\n        // }\r\n    },\r\n    {\r\n        Header: 'Adress',\r\n        accessor: 'address'\r\n    },\r\n    // {\r\n    //     Header: 'Action',\r\n    //     Cell: (row) => (\r\n    //         <>\r\n    //             {/* <button \r\n    //                 className=\"btn_action\"\r\n    //                 onClick={() => // console.log(row)}>\r\n    //                 <div>\r\n    //                     <FiEye className=\"btn_action-icon\" />\r\n    //                 </div>\r\n    //             </button> */}\r\n    //             <button\r\n    //                 className=\"btn_action\"\r\n    //             >\r\n    //                 <div>\r\n    //                     <FiEdit2 className=\"btn_action-icon\"  />\r\n    //                 </div>\r\n    //             </button>\r\n    //             <button\r\n    //                 className=\"btn_action\"\r\n    //             >\r\n    //                 <div>\r\n    //                     <FiTrash2 className=\"btn_action-icon\" />\r\n    //                 </div>\r\n    //             </button>\r\n    //         </>\r\n    //     )\r\n    // }\r\n];\r\n\r\nexport default Columns;","import React, { useState, useEffect } from 'react';\r\nimport './RedZone.scss';\r\nimport Heading from './../../../components/UI/Heading/Heading';\r\nimport InputComponent from './../../../components/UI/Input/Input';\r\nimport MapComponent, { accessToken } from './../../../components/UI/Map/Map';\r\nimport TableRedZone from './../../../components/UI/Table/Table';\r\nimport Columns from './components/Columns';\r\nimport Data from './components/redzone.json';\r\nimport axios from 'axios';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction RedZone() {\r\n    const [mapSearch, mapSearchInput] = useState('');\r\n    const [listRedzone, setListRedzone] = useState([])\r\n\r\n    // get redzone : done\r\n    useEffect(() => {\r\n        // const id = localStorage.getItem('contentSelected');\r\n        // // console.log(id);\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        let params =\r\n        {\r\n            whereKeyValues: {\r\n                cobrandEmail: 'admin@roi.ruangortu.id',\r\n            }\r\n            // \"admin@asia.ruangortu.id\",\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://as01.prod.ruangortu.id:8080/api/cobrand/redZoneFilter',\r\n            data: params,\r\n        })\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                setListRedzone(response.data.Data)\r\n                // console.log(listRedzone)\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error + 'ini eror get list redzone');\r\n            });\r\n    }, [])\r\n\r\n\r\n    // add redzone : done\r\n    // useEffect(() => {\r\n    //     let params =\r\n    //     {\r\n    //         cobrandEmail: \"muhammadsyihab.te@gmail.com\",\r\n    //         placeName: \"Tempat Sabung ayam\",\r\n    //         description: \"Tempat Sabung ayam A\",\r\n    //         address: \"kaliideres\",\r\n    //         redZoneStatus: \"active\",\r\n    //         location: [-6.212694432483453, 106.85043740452949]\r\n    //     }\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: 'https://as01.prod.ruangortu.id:8080/api/cobrand/redZoneAdd',\r\n    //         data: params,\r\n    //     })\r\n    //         .then(response => {\r\n    //             // console.log(response.data);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             // console.log(error + 'ini eror add redzone');\r\n    //         });\r\n    // }, [])\r\n\r\n    // // edit\r\n    // useEffect(() => {\r\n    //     // const id = localStorage.getItem('contentSelected');\r\n    //     // // console.log(id);\r\n    //     let params =\r\n    //     {\r\n    //         whereValues: { _id: \"628b4f8ac040ad69e5f317e9\" },\r\n    //         newKeyValues: { placeName: \"Tempat Sabung ayam yang baru dibuat iniii\" }\r\n    //     }\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: 'https://as01.prod.ruangortu.id:8080/api/cobrand/redZoneUpdate',\r\n    //         data: params,\r\n    //     })\r\n    //         .then(response => {\r\n    //             // console.log(response.data);\r\n    //             // setListRedzone(response.data)\r\n    //             // // console.log(listRedzone)\r\n\r\n    //         })\r\n    //         .catch(error => {\r\n    //             // console.log(error + 'ini eror edit redzone');\r\n    //         });\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"RedZone\">\r\n            <Heading headingName=\"Redzone\" routes={[\r\n                { name: 'Data Redzone' },\r\n                { path: '/redzone', name: 'List Redzone' }\r\n            ]} />\r\n\r\n            <div className=\"RedZone__map\">\r\n                <div className=\"RedZone__heading\">\r\n                    <h3>Map View</h3>\r\n                    <InputComponent\r\n                        className=\"Input-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                        name=\"search\"\r\n                        onChange={(e) => {\r\n                            // console.log(e.currentTarget.value);\r\n                            let urlBuilder = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + encodeURI(e.currentTarget.value) + '.json?access_token=' + accessToken;\r\n                            axios({\r\n                                method: 'get',\r\n                                url: urlBuilder\r\n                            })\r\n                                .then(response => {\r\n                                    //// console.log(\"Response data: \", response.data);\r\n                                    mapSearchInput(response.data.features[0]);\r\n                                })\r\n                                .catch(error => {\r\n                                    // console.log(error);\r\n                                });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"RedZone__data\">\r\n                    <MapComponent search={mapSearch} />\r\n                </div>\r\n            </div>\r\n            <div className=\"RedZone__list\">\r\n                <div className='divlink'>\r\n                    <NavLink to=\"/cms/redzone/add\" id='add' >\r\n                        <FiPlus className=\"IconAdd\" />\r\n                        <span>Create New Redzone</span>\r\n                    </NavLink>\r\n                    <NavLink to=\"/cms/redzone/edit\" id='add2' >\r\n                        {/* <FiPlus className=\"IconAdd\" /> */}\r\n                        <span>Edit Redzone</span>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"RedZone__heading\">\r\n                    <h3>Redzone List</h3>\r\n                </div>\r\n                <div className=\"RedZone__data\">\r\n                    <TableRedZone className=\"table-col\"\r\n                        COLUMNS={Columns}\r\n                        DATA={listRedzone}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RedZone\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactMapboxGl, { Layer, Feature, Marker } from 'react-mapbox-gl';\r\nimport axios from 'axios';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n      'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg'\r\n});\r\n\r\nexport const accessToken = 'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg';\r\n\r\nconst GoogleMaps = ({search}) => {\r\n    // console.log(search);\r\n    \r\n    return (\r\n      <Map\r\n          style=\"mapbox://styles/mapbox/streets-v9\"\r\n          containerStyle={{\r\n            height: '50vh'\r\n          }}\r\n          center={\r\n            search ? search.center: [10, 10]\r\n          }\r\n          zoom={[11]}\r\n        >\r\n        <Layer\r\n          type=\"symbol\" \r\n          id=\"marker\" \r\n          layout={{ 'icon-image': 'marker-15' }}\r\n        >\r\n          <Feature coordinates={\r\n              search ? search.center: [5, 5]\r\n          } />\r\n        </Layer>\r\n      </Map>\r\n    )\r\n}\r\n\r\nexport default GoogleMaps;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Heading.scss';\r\n\r\nfunction Heading({ headingName, routes = [] }) {\r\n    \r\n    return (\r\n        <div className=\"Heading\">\r\n            <h1>{headingName}</h1>\r\n            <ul className=\"Heading__breadcumb\">\r\n                {routes.length > 0 && routes.map((item, i) => {\r\n                    if(item.path){\r\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\r\n                    }else{\r\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\r\n                    }\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n"],"sourceRoot":""}