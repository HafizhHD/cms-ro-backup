{"version":3,"sources":["containers/CoBrand/Content/AddContent/AddContent.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/webMainUtils.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onAddContent","cobrandEmail","programId","contentName","contentDescription","contentType","contentSource","contentThumbnail","contents","startDate","history","addContent","useState","isPageLoading","setPageLoading","programList","setProgramList","RichTextEditor","createEmptyValue","textValue","setTextValue","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","useHistory","JSON","parse","localStorage","getItem","email","params","whereKeyValues","useEffect","axios","method","url","data","headers","then","response","programs","catch","error","headingName","routes","path","name","initialValues","validationSchema","validationContent","validateOnChange","onSubmit","values","window","scrollTo","handleChange","handleSubmit","setFieldValue","errors","className","value","onChange","disabled","map","program","_id","programName","type","placeholder","e","file","currentTarget","files","toString","Heading","length","item","i","exact","to","Input","onBlur","message","isError","id","memo","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","min","confirmPassword","when","schema","validationProgram","programDescription","programThumbnail","validationProgramEdit","validationContentEdit","authStart","AUTH_START","authFailed","AUTH_FAILED","addProgram","ProgramDescription","photo","toBase64","result","programthumnail","setTimeout","push","editProgram","whereValues","newValues","finalUrl","videoId","encodeURIComponent","undefined","split","getEmbedUrl","editContent"],"mappings":"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","file":"static/js/7.74b40afd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddContent.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addContent } from '../../../../store/actions/webMainUtils';\nimport RKLoader from '../../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationContent } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\nimport RichTextEditor from 'react-rte';\n\nfunction AddContent({\n    onAddContent,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n\n    const [textValue, setTextValue] = useState(RichTextEditor.createEmptyValue());\n    const toolbarConfig = {\n        // Optionally specify the groups to display (displayed in the order listed).\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n        INLINE_STYLE_BUTTONS: [\n            {label: 'Bold', style: 'BOLD'},\n            {label: 'Italic', style: 'ITALIC'},\n            {label: 'Underline', style: 'UNDERLINE'},\n            {label: 'Strikethrough', style: 'STRIKETHROUGH'}\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n            {label: 'Normal', style: 'unstyled'},\n            {label: 'Heading Large', style: 'header-one'},\n            {label: 'Heading Medium', style: 'header-two'},\n            {label: 'Heading Small', style: 'header-three'}\n        ],\n        BLOCK_TYPE_BUTTONS: [\n            {label: 'Unordered List', style: 'unordered-list-item'},\n            {label: 'Ordered List', style: 'ordered-list-item'},\n            {label: 'Blockquote', style: 'blockquote'}\n        ]\n    };\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: cobrandEmail\n        }\n    };\n\n    useEffect(() => {\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n            data: params,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => {\n            console.log(\"Program list: \", response.data);\n            setProgramList(response.data.programs);\n            setPageLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setPageLoading(false);\n        });\n    }, []);\n\n    if(isPageLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Content\" routes={[\n                { path: '/content', name: 'Content' },\n                { path: '/content/add', name: 'Create new content' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programId: '',\n                    contentName: '',\n                    contentDescription: '',\n                    contentType: '',\n                    contentSource: '',\n                    contentThumbnail: '',\n                    contents: '',\n                    startDate: ''\n                }}\n                validationSchema = {validationContent}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    window.scrollTo(0,0);\n                    onAddContent( cobrandEmail, values.programId, values.contentName, values.contentDescription, values.contentType, values.contentSource, values.contentThumbnail, values.contents, values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, setFieldValue, values, errors}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddContent\">\n                        <h1 className=\"AddContent_title\">Create New Content</h1>\n                        <div className=\"form-group\">\n                            <label>Content Type</label>\n                            <select\n                                name=\"contentType\"\n                                value={values.contentType}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\" disabled>--Select Content Type--</option>\n                                <option value=\"Artikel\">Artikel</option>\n                                <option value=\"Image\">Image</option>\n                                <option value=\"Video\">Video</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Program Name</label>\n                            <select\n                                name=\"programId\"\n                                value={values.programId}\n                                onChange={handleChange}\n                            >\n                                <option value=\"\">(Tanpa Program)</option>\n                                {\n                                    programList.map((program) => {\n                                        return (\n                                            <option value={program._id}>{program.programName}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"contentName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.contentName}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.contentName}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"contentDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.contentDescription}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <span className=\"message__error\">{errors.contentDescription}</span>\n                        <div className=\"form-group\">\n                            <label>Source</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"contentSource\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.contentSource}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.contentSource}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Photo</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"contentThumbnail\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"contentThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.contentThumbnail}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Contents</label>\n                            { values.contentType === \"Artikel\" ? (\n                                /*<InputComponent\n                                    type=\"textarea\"\n                                    name=\"contents\"\n                                    placeholder=\"Type Something...\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />*/\n\n                                <RichTextEditor\n                                    name=\"contents\"\n                                    placeholder=\"Type your contents here...\"\n                                    className=\"form-group__input form-group__input_rte\"\n                                    value={textValue}\n                                    toolbarConfig={toolbarConfig}\n                                    onChange={ (e) => {\n                                        setTextValue(e);\n                                        setFieldValue(\"contents\", e.toString(\"html\"));\n                                        console.log(values.contents);\n                                    }}\n                                />\n                            ) : null }\n                            { values.contentType === \"Image\" ? (\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contents\"\n                                    className=\"form-group__input form-group__input--fullwidth\" \n                                    placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            { values.contentType === \"Video\" ? (\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contents\"\n                                    className=\"form-group__input form-group__input--fullwidth\" \n                                    placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                    value={values.contents}\n                                    onChange={handleChange}\n                                />\n                            ) : null }\n                            <span className=\"message__error\">{errors.contents}</span>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                onChange={handleChange}\n                            />\n                            <span className=\"message__error\">{errors.startDate}</span>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Post Content\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddContent: ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, history) =>\n            dispatch(addContent( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddContent)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else return (\n    <>\n        <input\n            name={name}\n            className={className} \n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n        {isError && (\n            <div className=\"message\">\n                <span className=\"message__error\">{message}</span>\n            </div>\n        )}\n    </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64 } from '../../helpers/fileHelper/fileHelper';\n\nfunction getEmbedUrl(url) {\n    // function for generating an embed link\n    let finalUrl = '';\n    let videoId = '';\n\n    if (url.includes('facebook.com/')) {\n        // Facebook Video\n        finalUrl = 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(url) + '&show_text=1&width=200';\n\n    } else if(url.includes('vimeo.com/')) {\n        // Vimeo video\n        videoId = typeof(url.split(\"vimeo.com/\")[1]) !== undefined ? url.split(\"vimeo.com/\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://player.vimeo.com/video/' + videoId;\n\n    } else if (url.includes('youtube.com/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"v=\")[1]) !== undefined ? url.split(\"v=\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' + videoId;\n\n    } else if(url.includes('youtu.be/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"youtu.be/\")[1]) !== undefined ? url.split(\"youtu.be/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' +  videoId;\n\n    } else if (url.includes('dailymotion.com/')) {\n        // Dailymotion Video\n        videoId = typeof(url.split(\"dailymotion.com/\")[1]) !== undefined ? url.split(\"dailymotion.com/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.dailymotion.com/embed/' + videoId;\n\n    } else{\n        finalUrl = url;\n    }\n\n    return finalUrl;\n}\n\nexport const authStart = () => ({ type: AUTH_START });\nexport const authFailed = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS })\n\nexport const addProgram = ( cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            setTimeout( () => {\n                let data = {\n                    cobrandEmail,\n                    programName,\n                    ProgramDescription,\n                    programthumnail,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        });\n    }\n\n}\n\nexport const editProgram = ( _id, cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            setTimeout( () => {\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                setTimeout( () => {\n                    let data = {\n                        whereValues: {\n                            cobrandEmail,\n                            _id\n                        },\n                        newValues: {\n                            programName,\n                            ProgramDescription,\n                            programthumnail,\n                            startDate\n                        }\n                    };\n\n                    console.log(data);\n                    //Call API ....\n                    \n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                        data: data,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(authFailed());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(authFailed());\n                    });\n                    console.log(data);\n                },2000)\n            });\n        }\n    }\n\n}\n\nexport const addContent = ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const contentThumbnail = result;\n\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\"\n            }\n\n            console.log(contents);\n\n            setTimeout( () => {\n                let data = {\n                    cobrandEmail,\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contentThumbnail,\n                    contents,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        });\n    }\n\n    \n\n}\n\nexport const editContent = ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( authStart() );\n\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            setTimeout( () => {\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(authFailed());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(authFailed());\n                });\n                console.log(data);\n            },2000)\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                setTimeout( () => {\n                    let data = {\n                        whereValues: {\n                            cobrandEmail,\n                            _id\n                        },\n                        newValues: {\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contents,\n                            startDate\n                        }\n                    };\n\n                    console.log(data);\n                    //Call API ....\n                    \n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                        data: data,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/content');\n                        dispatch(authFailed());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(authFailed());\n                    });\n                    console.log(data);\n                },2000)\n            });\n        }\n    }\n\n    \n\n}"],"sourceRoot":""}