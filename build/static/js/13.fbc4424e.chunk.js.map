{"version":3,"sources":["containers/CoBrand/Program/components/Columns.js","containers/CoBrand/Program/Program.js","components/UI/Table/Table.js"],"names":["dateFormat","year","month","day","Columns","Header","accessor","Cell","cell","Date","row","values","startDate","toLocaleDateString","value","style","color","fontWeight","to","className","title","onClick","localStorage","setItem","_id","window","location","reload","replace","Program","useState","isLoading","setLoading","programList","setProgramList","userData","JSON","parse","getItem","params","whereKeyValues","cobrandEmail","email","useEffect","retrieveList","axios","method","url","data","headers","then","response","console","log","catch","error","deleting","whereValues","removeItem","RKLoader","id","type","placeholder","Table","COLUMNS","columns","DATA","programs","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","getCellProps"],"mappings":"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","file":"static/js/13.fbc4424e.chunk.js","sourcesContent":["import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = [\n    {\n        Header: 'Title',\n        accessor: 'programName'\n    },\n    {\n        Header: 'Start Date',\n        accessor: 'startDate',\n        Cell: ({cell}) => (\n            <>\n                {new Date(cell.row.values.startDate).toLocaleDateString(\"en-UK\", dateFormat)}\n            </>\n        )\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ value }) => {\n            return <p style={{ color: 'green', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n    {\n        Header: 'Action',\n        accessor: '_id',\n        Cell: ({cell}) => (\n            <>\n                <NavLink \n                    to=\"/program/view\"\n                    className=\"nav_btn\"\n                    title=\"View Detail\"\n                    onClick={() => {\n                        localStorage.setItem('programSelected', cell.row.values._id)\n                    }}>\n                    <button \n                        className=\"btn_action\">\n                        <div>\n                            <FiEye className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n                <NavLink to=\"/program/edit\"\n                    className=\"nav_btn\"\n                    title=\"Edit Program\"\n                    onClick={() => {\n                        localStorage.setItem('programSelected', cell.row.values._id)\n                    }}>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiEdit2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n                <NavLink to=\"/program\"\n                    className=\"nav_btn\"\n                    title=\"Delete Program\"\n                    onClick={() => {\n                        localStorage.setItem('programDeleting', cell.row.values._id);\n                        window.location.reload();\n                    }}\n                    replace>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiTrash2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n            </>\n        )\n    }\n]\n\nexport default Columns;","import  { useState, useEffect } from 'react';\nimport './Program.scss';\nimport TableProgram from './../../../components/UI/Table/Table';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport axios from 'axios';\nimport RKLoader from '../../../components/UI/RKLoader/RKLoader';\n\n// import Modal from '../../../components/UI/Modal/Modal';\n\nfunction Program() {\n    const [showModal, setShowModal] = useState(false);\n\n    const [isLoading, setLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.email\n        }\n    };\n\n    \n    \n    useEffect(() => {\n        setLoading(true);\n        function retrieveList() {\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                setProgramList(response.data);\n                console.log(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.log(error);\n                setLoading(false);\n            });\n        }\n        if(localStorage.getItem('programDeleting')) {\n            const deleting = {\n                whereValues: {\n                    cobrandEmail: userData.email,\n                    _id: localStorage.getItem('programDeleting')\n                }\n            }\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programRemove',\n                data: deleting,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(response.data);\n                localStorage.removeItem('programDeleting');\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                localStorage.removeItem('programDeleting');\n                retrieveList();\n            });\n        }\n        else retrieveList();\n        localStorage.removeItem('programDeleting');\n    }, []);\n\n    if(isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"Program\">\n         \n            <h1>PROGRAM</h1>\n            <NavLink to=\"/program/add\" id=\"add_program\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Create New Program</span>  \n            </NavLink>\n            <div className=\"Program__table\">\n                <input \n                    type=\"text\" \n                    className=\"Program__table__input\" \n                    placeholder=\"Search\"\n                />\n                <TableProgram \n                    COLUMNS={columns} \n                    DATA={programList.programs}  \n                />\n            </div>\n\n            {/* <button \n                onClick={() => setShowModal(true)}>\n                Show Modal\n            </button> */}\n            \n            {/* <Modal \n                isShow={showModal}\n                onClose={() => setShowModal(false)} \n                onSubmit={submitModal}\n                title=\"Modal Title\"\n            >\n                <p>Hello Worlds</p>\n            </Modal> */}\n        </div>\n    )\n}\n\nexport default Program\n","import React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    })\n\n    return (\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps()}> {column.render('Header')} </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                            })}\n                        </tr>\n                    )\n                })}\n           </tbody>\n       </table>\n    )\n}\n\nexport default Table\n"],"sourceRoot":""}