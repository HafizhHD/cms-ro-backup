{"version":3,"sources":["components/UI/Heading/Heading.js","components/API/filter.js","components/UI/Table/TableFilter.js","components/UI/Table/TableWithFilter.js","containers/CoBrand/Report/ContentReport/columns.js","containers/CoBrand/Report/ContentReport/ContentReport.js"],"names":["Heading","headingName","routes","className","length","map","item","i","path","exact","to","name","getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","add","values","option","NumberRangeColumnFilter","min","max","Math","style","display","type","val","old","parseInt","width","marginRight","marginLeft","fuzzyTextFilterFn","rows","matchSorter","keys","autoRemove","TableWithFilter","DATA","COLUMNS","renderRowSubComponent","showCheckbox","notifContext","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","useTable","columns","useFilters","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","selectedRowIds","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","downloadAsCSV","currentRecords","console","log","data_to_download","record_to_download","cells","colIndex","onClick","dataRaw","doc","jsPDF","setFontSize","content","startY","head","Object","body","autoTable","save","localStorage","setItem","getItem","stringEmail","original","emailUser","disabled","defaultValue","Number","currentTarget","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cell","getCellProps","isExpanded","colSpan","Columns","disableFilters","accessor","index","ContentReport","useState","isLoading","setLoading","contentData","setContentData","userData","JSON","parse","params","whereKeyValues","cobrandEmail","email","orderKeyValues","contentName","includeContentData","limit","MAX_SAFE_INTEGER","then","response","contents","catch","error","RKLoader"],"mappings":"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","file":"static/js/35.0c9a161f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React from 'react'\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// A great library for fuzzy filtering/sorting items\nimport {matchSorter} from 'match-sorter'\n\nexport function GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n      setGlobalFilter(value || undefined)\n    }, 200)\n  \n    return (\n      <span>\n        Search:{' '}\n        <input\n          value={value || \"\"}\n          onChange={e => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n          style={{\n            fontSize: '1.1rem',\n            border: '0',\n          }}\n        />\n      </span>\n    )\n  }\n  \n  // Define a default UI for filtering\n  export function DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n  }) {\n    const count = preFilteredRows.length\n  \n    return (\n      <input\n        value={filterValue || ''}\n        onChange={e => {\n          setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search...`}\n      />\n    )\n  }\n  \n  // This is a custom filter UI for selecting\n  // a unique option from a list\n  export function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set()\n      preFilteredRows.forEach(row => {\n        options.add(row.values[id])\n      })\n      return [...options.values()]\n    }, [id, preFilteredRows])\n  \n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined)\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    )\n  }\n  \n  // This is a custom filter UI that uses a\n  // slider to set the filter value between a column's\n  // min and max values\n  export function SliderColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the min and max\n    // using the preFilteredRows\n  \n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <>\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          value={filterValue || min}\n          onChange={e => {\n            setFilter(parseInt(e.target.value, 10))\n          }}\n        />\n        <button onClick={() => setFilter(undefined)}>Off</button>\n      </>\n    )\n  }\n  \n  // This is a custom UI for our 'between' or number range\n  // filter. It uses two number boxes and filters rows to\n  // ones that have values between the two\n  export function NumberRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id },\n  }) {\n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <input\n          value={filterValue[0] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n          }}\n          placeholder={`Min (${min})`}\n          style={{\n            width: '70px',\n            marginRight: '0.5rem',\n          }}\n        />\n        to\n        <input\n          value={filterValue[1] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n          }}\n          placeholder={`Max (${max})`}\n          style={{\n            width: '70px',\n            marginLeft: '0.5rem',\n          }}\n        />\n      </div>\n    )\n  }\n\n  export function filterGreaterThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue >= filterValue\n    })\n  }\n\n  export function filterLessThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue <= filterValue\n    })\n  }\n  \n  export function fuzzyTextFilterFn(rows, id, filterValue) {\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n  }\n  \n  // Let the table remove the filter if the string is empty\n  fuzzyTextFilterFn.autoRemove = val => !val\n  ","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter, useFilters, useRowSelect } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\nimport { DefaultColumnFilter, fuzzyTextFilterFn } from './TableFilter'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nimport { FaFilePdf, FaTable, FaBell } from \"react-icons/fa\";\n\nfunction TableWithFilter({ DATA, COLUMNS, renderRowSubComponent, showCheckbox = false, notifContext = '' }) {\n    const filterTypes = React.useMemo(\n        () => ({\n          // Add a new fuzzyTextFilterFn filter type.\n          fuzzyText: fuzzyTextFilterFn,\n          // Or, override the default text filter to use\n          // \"startWith\"\n          text: (rows, id, filterValue) => {\n            return rows.filter(row => {\n              const rowValue = row.values[id]\n              return rowValue !== undefined\n                ? String(rowValue)\n                    .toLowerCase()\n                    .startsWith(String(filterValue).toLowerCase())\n                : true\n            })\n          },\n        }),\n        []\n      )\n    \n      const defaultColumn = React.useMemo(\n        () => ({\n          // Let's set up our default Filter UI\n          Filter: DefaultColumnFilter,\n        }),\n        []\n      )\n\n      const IndeterminateCheckbox = React.forwardRef(\n        ({ indeterminate, ...rest }, ref) => {\n          const defaultRef = React.useRef()\n          const resolvedRef = ref || defaultRef\n      \n          React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n          }, [resolvedRef, indeterminate])\n      \n          return (\n            <>\n              <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n          )\n        }\n      )\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        selectedFlatRows,\n        state: { selectedRowIds },\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        defaultColumn, // Be sure to pass the defaultColumn option\n        filterTypes,\n    }, useFilters\n    , useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination\n    , useRowSelect\n    , hooks => {\n        if(showCheckbox) hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n      })\n\n    const { globalFilter } = state;\n\n    const downloadAsCSV = () => {\n        const currentRecords = rows;\n        console.log(currentRecords);\n        var data_to_download = [];\n        for (var i = 0; i < currentRecords.length; i++) {\n            let record_to_download = {};\n            prepareRow(currentRecords[i]);\n            console.log(currentRecords[i].cells);\n            for (var colIndex = 0; colIndex < currentRecords[i].cells.length; colIndex++) {\n                if(currentRecords[i].cells[colIndex].column.id !== 'rowNumber' &&\n                currentRecords[i].cells[colIndex].column.id !== 'selection' &&\n                currentRecords[i].cells[colIndex].column.id !== 'buttonStatus') {\n                    record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                    currentRecords[i].cells[colIndex].value;\n                }\n            }\n            data_to_download.push(record_to_download);\n        }\n        return data_to_download;\n    }\n\n    const downloadAsPDF = () => {\n        const dataRaw = downloadAsCSV();\n        if(dataRaw.length > 0) {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(15);\n\n            const title = \"Report\";\n            const headers = [Object.keys(dataRaw[0])];\n\n            const data = dataRaw.map(e => Object.values(e));\n\n            let content = {\n                startY: 50,\n                head: headers,\n                body: data\n            };\n\n            doc.text(title, marginLeft, 40);\n            doc.autoTable(content);\n            doc.save(\"report.pdf\");\n        }\n    }\n\n    return (\n        <>\n        <div className=\"tools\">\n            <button className=\"btn_tools\"><FaTable/> <CSVLink data={downloadAsCSV()}>Download as CSV</CSVLink></button>\n            <button className=\"btn_tools\" onClick={downloadAsPDF}><FaFilePdf/> Download as PDF</button>\n            {selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/messaging-add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = '';\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        stringEmail += selectedFlatRows[i].original.emailUser;\n                        if(i < selectedFlatRows.length - 1) stringEmail += ', ';\n                        console.log(stringEmail);\n                    }\n                    localStorage.setItem('emailTo', stringEmail);\n                    console.log(localStorage.getItem('emailTo'));\n                }}>Send Notifications</NavLink></button>\n             ) : null}\n        </div>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <>\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n                   <tr>\n                        {headerGroup.headers.map(column => (\n                            <th>{column.canFilter ? column.render('Filter') : null}</th>\n                        ))}\n                   </tr>\n                   </>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default TableWithFilter\n","//import { Link } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap'\nimport { SelectColumnFilter } from './../../../../components/UI/Table/TableFilter'\n\n\nconst Columns = [\n    {\n        Header: 'No.',\n        id: 'rowNumber',\n        disableFilters: true\n    },\n    {\n        Header: 'Nama Konten',\n        accessor: 'contentName',\n        disableFilters: true\n    },\n    {\n        Header: 'Jenis Konten',\n        accessor: 'contentType',\n        Filter: SelectColumnFilter,\n        filter: 'equals'\n    },\n    {\n        Header: 'Topik Konten',\n        accessor: 'contentPurpose',\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n        Cell: ({row}) => {\n            if(row.index % 3 === 1) return <p>Pendidikan</p>\n            else return <p>Agama</p>\n        }\n    },\n    {\n        Header: 'Target Pembaca',\n        accessor: 'contentTarget',\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n        Cell: ({row}) => {\n            return <p>Semua</p>\n        }\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        Filter: SelectColumnFilter,\n        filter: 'equals'\n    },\n];\n\n// const Columns = [\n//     {\n//         name: 'No.',\n//         options: {\n//             filter: false,\n//             customBodyRender: (value, meta) => {\n//                 return (\n//                     meta.rowIndex + 1\n//                 );\n//             },\n//             setCellProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n//             setCellHeaderProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n//         }\n//     },\n//     {\n//         label: 'Nama Konten',\n//         name: 'contentName',\n//         options: {\n//             filter: false,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Jenis Konten',\n//         name: 'contentType',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Kategori Konten',\n//         name: 'contentPurpose',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Target Pembaca',\n//         name:'contentTarget',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Status',\n//         name: 'status',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     }\n// ];\n\nexport default Columns;","import React, { useState, useEffect, useCallback } from 'react';\nimport TablePengguna from '../../../../components/UI/Table/TableWithFilter';\nimport columns from './columns';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader.js';\nimport './ContentReport.scss';\nimport { getContentList } from '../../../../components/API/filter.js'\nimport MUIDataTable from \"mui-datatables\";\n\nconst ContentReport = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [contentData, setContentData] = useState();\n\n    const options = {\n        filterType: \"dropdown\",\n        selectableRows: false,\n        responsive: \"scroll\"\n    };\n\n    const userData = JSON.parse(localStorage.getItem('userData'));\n\n    useEffect(() => {\n        let params={\n            whereKeyValues: {\n                cobrandEmail: userData.email\n            },\n            orderKeyValues: {\n                contentName: 1\n            },\n            includeContentData: false,\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        console.log(params);\n        getContentList(params)\n        .then(response => {\n            console.log(response.data);\n            setContentData(response.data.contents);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        })\n    }, []);\n\n    if(isLoading) {\n        return <RKLoader />;\n    }\n    return (\n        <div className=\"Content\">\n            <Heading\n                headingName=\"Content Report\"\n                routes={[\n                    { name: 'Report', path: '/report/content' },\n                    { name: 'Content Report' }\n                ]}\n            />\n            <div className=\"Content_table\">\n                <TablePengguna\n                    COLUMNS={columns}\n                    DATA={contentData}\n                />\n            </div>\n            {/* <MUIDataTable\n                data={contentData}\n                columns={columns}\n                options={options}\n            /> */}\n        </div>\n    )\n}\n\nexport default ContentReport;\n"],"sourceRoot":""}