{"version":3,"sources":["containers/CoBrand/Program/EditProgram/EditProgram.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/dashboard.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onEditProgram","_id","cobrandEmail","programName","programDescription","programThumbnailEdit","startDate","history","editProgram","useState","isPageLoading","setPageLoading","program","setProgram","programStartDate","setProgramStartDate","useHistory","JSON","parse","localStorage","getItem","email","useEffect","params","whereKeyValues","axios","method","url","data","headers","then","response","programs","date","split","catch","error","headingName","routes","path","name","initialValues","ProgramDescription","validationSchema","validationProgramEdit","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","className","type","placeholder","value","onChange","onBlur","min","Date","toISOString","RKLoader","text","Heading","length","map","item","i","exact","to","Input","message","disabled","isError","id","max","memo","PhoneRegex","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programThumbnail","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","getEmbedUrl","finalUrl","videoId","encodeURIComponent","undefined","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","photo","ALERT_CLOSE","toBase64","result","programthumnail","push","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","status","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/10.6b2a055e.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgramEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nfunction EditProgram({\n    onEditProgram,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [program, setProgram] = useState();\n    const [programStartDate, setProgramStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('programSelected');\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if(_id) {\n            const params = {\n                whereKeyValues: {\n                    cobrandEmail: cobrandEmail,\n                    _id: _id\n                }\n            };\n\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setProgram(response.data.programs[0]);\n                console.log(\"This is \", program);\n                let date = response.data.programs[0].startDate.split('T')[0];\n                console.log(date);\n                setProgramStartDate(date);\n                setPageLoading(false);;\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n        }\n    }, []);\n\n    if(isPageLoading || isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/program', name: 'On Going Program' },\n                { path: '/program/edit', name: 'Edit Selected Program' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: program.programName,\n                    programDescription: program.ProgramDescription,\n                    startDate: programStartDate\n                }}\n                validationSchema = {validationProgramEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onEditProgram( _id, cobrandEmail, values.programName, values.programDescription, '', values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditProgram\">\n                        <h1>Edit Selected Program: {program.programName}</h1>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        {/*<div className=\"form-group\">\n                            <label>New Photo (Optional)</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnailEdit\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnailEdit\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.programThumbnailEdit}</span>\n                        </div>*/}\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                min={new Date().toISOString().split('T')[0]}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Update Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProgram: ( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ) =>\n            dispatch(editProgram( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditProgram)","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Keluarga HKBP</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64 } from '../../helpers/fileHelper/fileHelper';\n\nfunction getEmbedUrl(url) {\n    // function for generating an embed link\n    let finalUrl = '';\n    let videoId = '';\n\n    if (url.includes('facebook.com/')) {\n        // Facebook Video\n        finalUrl = 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(url) + '&show_text=1&width=200';\n\n    } else if(url.includes('vimeo.com/')) {\n        // Vimeo video\n        videoId = typeof(url.split(\"vimeo.com/\")[1]) !== undefined ? url.split(\"vimeo.com/\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://player.vimeo.com/video/' + videoId;\n\n    } else if (url.includes('youtube.com/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"v=\")[1]) !== undefined ? url.split(\"v=\")[1] : null;\n        if (videoId.includes('&')){\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' + videoId;\n\n    } else if(url.includes('youtu.be/')) {\n        // Youtube video\n        videoId = typeof(url.split(\"youtu.be/\")[1]) !== undefined ? url.split(\"youtu.be/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.youtube.com/embed/' +  videoId;\n\n    } else if (url.includes('dailymotion.com/')) {\n        // Dailymotion Video\n        videoId = typeof(url.split(\"dailymotion.com/\")[1]) !== undefined ? url.split(\"dailymotion.com/\")[1] : null;\n        if (videoId.includes('&')) {\n            videoId = videoId.split(\"&\")[0];\n        }\n        finalUrl = 'https://www.dailymotion.com/embed/' + videoId;\n\n    } else{\n        finalUrl = url;\n    }\n\n    return finalUrl;\n}\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = ( cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n                let data = {\n                    cobrandEmail,\n                    programName,\n                    ProgramDescription,\n                    programthumnail,\n                    startDate\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programAdd',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n                console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = ( _id, cobrandEmail, programName, ProgramDescription, photo, startDate, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/program');\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/programUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = ( cobrandEmail, programId, retrieveList ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/programRemove',\n            data: deleting,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => {\n            console.log(response.data);\n            dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n            dispatch(loadingStop());\n            retrieveList();\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n            dispatch(loadingStop());\n            retrieveList();\n        });\n    }\n}\n\nexport const addContent = ( cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                                + '<head>'\n                                    + '<meta charset=\"utf-8\">'\n                                    + '<style>'\n                                        + '#contents {'\n                                            + 'overflow-y: scroll;'\n                                            + 'text-align: justify;'\n                                            + 'white-space: pre-line;'\n                                            + 'font-family: Arial, Helvetica, sans-serif;'\n                                            + 'padding: 1%;'\n                                        + '}'\n                                        + '#contents li {'\n                                            + 'margin-left: 5%;'\n                                        + '}'\n                                    + '</style>'\n                                + '</head>'\n                                + '<body>'\n                                    + '<div id=\"contents\">'\n                                        + contents\n                                    + '</div>'\n                                + '</body>'\n                            + '</html>';\n            }\n\n            console.log(contents);\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentAdd',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/content');\n                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n            console.log(data);\n        });\n    }\n\n    \n\n}\n\nexport const editContent = ( _id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        console.log('Photo is empty:', photo === '');\n        if(photo === '') {\n            if(contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if(contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                                + '<head>'\n                                    + '<meta charset=\"utf-8\">'\n                                    + '<style>'\n                                        + '#contents {'\n                                            + 'overflow-y: scroll;'\n                                            + 'text-align: justify;'\n                                            + 'white-space: pre-line;'\n                                            + 'font-family: Arial, Helvetica, sans-serif;'\n                                            + 'padding: 1%;'\n                                        + '}'\n                                        + '#contents li {'\n                                            + 'margin-left: 5%;'\n                                        + '}'\n                                    + '</style>'\n                                + '</head>'\n                                + '<body>'\n                                    + '<div id=\"contents\">'\n                                        + contents\n                                    + '</div>'\n                                + '</body>'\n                            + '</html>';\n            }\n\n            console.log(contents);\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contents,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n            \n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                data: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/content');\n                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n                \n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentUpdate',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n                console.log(data);\n            });\n        }\n    }\n\n    \n\n}\n\nexport const deleteContent = ( cobrandEmail, contentId, retrieveList ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        axios({\n            method: 'post',\n            url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentRemove',\n            data: deleting,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => {\n            console.log(response.data);\n            dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n            dispatch(loadingStop());\n            retrieveList();\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n            dispatch(loadingStop());\n            retrieveList();\n        });\n    }\n}\n\nexport const editProfile = ( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ) => {\n    return dispatch => {\n        dispatch( loadingStart() );\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = {email: oldEmail, password: oldPassword}, newValues = {};\n\n        if(cobrandName) newValues = Object.assign(newValues, {cobrandName: cobrandName});\n        if(phoneNumber) newValues = Object.assign(newValues, {phoneNumber: phoneNumber});\n        if(address) newValues = Object.assign(newValues, {address: address});\n        if(password) newValues = Object.assign(newValues, {password: password});\n\n        if(photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, {thumbnail: result});\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/edit',\n                    data: {whereValues, newValues},\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if(password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/cobrandLogin',\n                        data: whereValues,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response2 => {\n                        console.log('Success 2: ', response2.data);\n                        let loginData = response2.data;\n                        localStorage.removeItem('accessToken');\n                        localStorage.removeItem('userData');\n                        localStorage.setItem('accessToken', loginData.resultData.token);\n                        localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(loadingStop());\n                    });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(loadingStop());\n                });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/edit',\n                data: {whereValues, newValues},\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log('Success:', response.data);\n                if(password) {\n                    console.log('YOI BRUH');\n                    whereValues.password = password;\n                }\n                axios({\n                    method: 'post',\n                    url: 'https://rk.defghi.biz.id:8080/api/cobrand/cobrandLogin',\n                    data: whereValues,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                .then(response2 => {\n                    console.log('Success 2: ', response2.data);\n                    let loginData = response2.data;\n                    localStorage.setItem('accessToken', loginData.resultData.token);\n                    localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                    dispatch(alertSuccess('Profil berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        }\n    }\n\n}"],"sourceRoot":""}