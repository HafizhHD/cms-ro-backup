{"version":3,"sources":["components/UI/Input/Input.js","helpers/validation/validation.js","containers/CoBrand/Program/EditProgram/AddStep/AddStep.js","../node_modules/suneditor/src/lang sync /^/.//.*/.js$","components/UI/Heading/Heading.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","userName","required","password","validationFormRegister","email","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","phone","validationCommunity","cobrandComunityName","partComunityName","validationGroupMitraAsuh","groupMitraAsuhName","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","connect","state","isLoading","auth","dispatch","onAddStep","programId","cobrandEmail","nomerUrutTahapan","contentType","response","history","addStep","editorState","EditorState","createEmpty","editorButtonList","useState","noUrutTahap","parseInt","localStorage","getItem","startDateProgram","endDateProgram","isPageLoading","setPageLoading","responses","setResponses","RichTextEditor","createEmptyValue","useHistory","JSON","parse","responseCount","resCount","setResCount","useEffect","a","i","push","headingName","routes","path","initialValues","split","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","setOptions","buttonList","imageWidth","content","height","e","file","currentTarget","files","replace","y","length","splice","j","map","res","index","x","charAt","onClick","Object","keys","alert","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","Heading","item","exact","to"],"mappings":"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","file":"static/js/59.8a45b3ff.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    userName: yup.string('Enter your email').required('Email is required'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n            answerKey: yup.string().when('category', {\n                is: 'Ujian',\n                then: yup.string().required('Kunci Jawaban harus diisi'),\n                otherwise: yup.string()\n            })\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationStepEdit = yup.object({\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\n    contents: yup.string().required('Isi Tahapan harus diisi'),\n});\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationCommunity = yup.object({\n    cobrandComunityName: yup.string('Enter your community name').required('Community name is required'),\n    partComunityName: yup.string('Enter your community name')\n})\n\nexport const validationGroupMitraAsuh = yup.object({\n    groupMitraAsuhName: yup.string('Enter your group name').required('Group name is required'),\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../../components/UI/Heading/Heading';\nimport './AddStep.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addStep } from '../../../../../store/actions/dashboard';\nimport RKLoader from '../../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationStepEdit } from '../../../../../helpers/validation/validation';\nimport InputComponent from '../../../../../components/UI/Input/Input';\nimport axios from 'axios';\nimport RichTextEditor from 'react-rte';\nimport { getEmbedUrl } from '../../../../../helpers/fileHelper/fileHelper'\n\n//texteditor\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, convertFromRaw, current,ContentState, convertFromHTML} from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport {stateToHTML} from 'draft-js-export-html'\nimport htmlToDraft from 'html-to-draftjs'\n\nimport SunEditor, {buttonList} from 'suneditor-react';\nimport 'suneditor/dist/css/suneditor.min.css';\n\n\nfunction AddStep({\n    onAddStep,\n    isLoading\n}) {\n\n\n    let editorState = EditorState.createEmpty()\n\n    const editorButtonList = [\n        ['undo', 'redo'],\n        ['font', 'fontSize', 'formatBlock'],\n        ['paragraphStyle', 'blockquote'],\n        ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n        ['fontColor', 'hiliteColor', 'textStyle'],\n        ['removeFormat'],\n        ['outdent', 'indent'],\n        ['align', 'horizontalRule', 'list', 'lineHeight'],\n        ['table', 'link', 'image', 'video'], /** 'audio', 'math', */ // You must add the 'katex' library at options to use the 'math' plugin.\n        /** 'imageGallery', */ // You must add the \"imageGalleryUrl\".\n        // ['fullScreen', 'showBlocks', 'codeView'],\n        ['preview', 'print'], // 'save', 'template'\n        /** 'dir', 'dir_ltr', 'dir_rtl' */ // \"dir\": Toggle text direction, \"dir_ltr\": Right to Left, \"dir_rtl\": Left to Right\n    ];\n    \n\n    const [artikel, setArtikel] = useState(editorState)\n    const onEditorStateChangeArtikel = (editorState) => {\n        setArtikel(editorState)\n    }\n\n    const embedVideoCallBack = (link) =>{\n        \n        const asd = getEmbedUrl(link);\n        // console.log(\"Video embed \", asd);\n        return asd;\n    }\n\n    const uploadCallback = (file) => new Promise(\n        (resolve, reject) => {\n        const reader= new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            // console.log(reader.result);\n            resolve({data: {link: reader.result}});\n        }\n        reader.onerror = error => reject(error);\n        }\n    );\n\n    const noUrutTahap = parseInt(localStorage.getItem('noUrutTahap'));\n    const startDateProgram = localStorage.getItem('startDateProgram');\n    const endDateProgram = localStorage.getItem('endDateProgram');\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [responses, setResponses] = useState([]);\n    const [content, setContent] = useState();\n    const [contentStartDate, setContentStartDate] = useState();\n    const [conFromImgVid, setConFromImgVid] = useState('');\n\n    const [textDeskripsi, setTextDeskripsi] = useState(RichTextEditor.createEmptyValue());\n    const [textValue, setTextValue] = useState(RichTextEditor.createEmptyValue());\n    const toolbarConfig = {\n        // Optionally specify the groups to display (displayed in the order listed).\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n        INLINE_STYLE_BUTTONS: [\n            { label: 'Bold', style: 'BOLD' },\n            { label: 'Italic', style: 'ITALIC' },\n            { label: 'Underline', style: 'UNDERLINE' },\n            { label: 'Strikethrough', style: 'STRIKETHROUGH' }\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n            { label: 'Normal', style: 'unstyled' },\n            { label: 'Heading Large', style: 'header-one' },\n            { label: 'Heading Medium', style: 'header-two' },\n            { label: 'Heading Small', style: 'header-three' }\n        ],\n        BLOCK_TYPE_BUTTONS: [\n            { label: 'Unordered List', style: 'unordered-list-item' },\n            { label: 'Ordered List', style: 'ordered-list-item' },\n            { label: 'Blockquote', style: 'blockquote' }\n        ]\n    };\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).cobrandEmail;\n    const programId = localStorage.getItem('programSelected');\n    const responseCount = parseInt(localStorage.getItem('responseCount'));\n    const [resCount, setResCount] = useState(responseCount);\n\n    useEffect(() => {\n    //     setPageLoading(true);\n    //     // console.log(_id);\n    //     if (_id) {\n    //         const params = {\n    //             whereKeyValues: {\n    //                 cobrandEmail: cobrandEmail,\n    //                 _id: _id\n    //             }\n    //         };\n\n    //         axios({\n    //             method: 'post',\n    //             url: 'https://as01.prod.ruangortu.id:8080/api/cobrand/contentFilter',\n    //             data: params,\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //         })\n    //             .then(response => {\n    //                 // console.log(\"Response data: \", response.data);\n    //                 setContent(response.data.contents[0]);\n    //                 let con = new DOMParser().parseFromString(response.data.contents[0].contents, 'text/html');\n    //                 // console.log(con);\n    //                 if (response.data.contents[0].contentType === 'Artikel') {\n    //                     let con1 = con.getElementById('contents');\n    //                     // console.log('Ini adalah con1 outer',  con1.outerHTML);\n    //                     // console.log('Ini adalah con1 inner',  con1.innerHTML);\n    //                     let con2 = htmlToDraft(con1.innerHTML);\n    //                     setTextValue(RichTextEditor.createValueFromString(con1.outerHTML, 'html'));\n    //                     setConFromImgVid(con1.outerHTML);\n    //                     // setArtikel(textValue)\n    //                     setArtikel(EditorState.createWithContent(\n    //                         ContentState.createFromBlockArray(\n    //                           con2.contentBlocks, con2.entityMap)))\n\n    //                     //   deskripsi\n    //                     // let condes = new DOMParser().parseFromString(response.data.contents[0].contentDescription, 'text/html');\n    //                     // // console.log(condes);\n    //                 }\n    //                 else if (response.data.contents[0].contentType === 'Image') {\n    //                     let con1 = con.getElementsByTagName('img')[0].toString();\n    //                     setConFromImgVid(con1.src);\n    //                 }\n    //                 else if (response.data.contents[0].contentType === 'Video') {\n    //                     let con1 = con.getElementsByTagName('iframe')[0];\n    //                     setConFromImgVid(con1.src);\n    //                 }\n    //                 else if (response.data.contents[0].contentType === 'Pdf') {\n    //                     let con1 = con.getElementsByTagName('iframe')[0];\n    //                     let src = con1.src;\n    //                     if (src.includes('&embedded=true')) src = src.replace('&embedded=true', '');\n    //                     if (src.includes('http://docs.google.com/gview?url=')) src = src.replace('http://docs.google.com/gview?url=', '');\n    //                     setConFromImgVid(src);\n    //                 }\n\n\n    //                 setPageLoading(false);\n    //             })\n    //             .catch(error => {\n    //                 // console.log(error);\n    //                 setPageLoading(false);\n    //             });\n    //     }\n\n        let a = [];\n        for(var i = 0; i < resCount; i++) {\n            a.push('');\n        }\n        setResponses(a);\n        setPageLoading(false);\n    }, []);\n\n\n    if (isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Tahap\" routes={[\n                { path: '/cms/program/', name: 'Program' },\n                { path: '/cms/program/edit', name: 'Ubah Program Terpilih' },\n                { path: '/cms/program/edit/add-step', name: 'Tambah Tahap' }\n            ]} />\n            <Formik\n                initialValues={{ \n                    nomerUrutTahapan: noUrutTahap + 1,\n                    namaTahapan: '',\n                    contentName: '',\n                    contentType: 'Artikel',\n                    contentSource: '',\n                    contents: '',\n                    startDate: startDateProgram.split('T')[0],\n                    endDate: endDateProgram.split('T')[0],\n                    topics: [],\n                    targetAudiance: [],\n                    response: responses,\n                    answerKey: '-1'\n                }}\n                validationSchema={validationStepEdit}\n                validateOnChange={true}\n                onSubmit={values => {\n                    onAddStep(programId, cobrandEmail, values.nomerUrutTahapan, values.namaTahapan, values.contentName, values.contentType, values.contentSource, values.contents, values.startDate, values.endDate, values.topics, values.targetAudiance, values.response, values.answerKey, history)\n                }}\n            >\n\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"EditContent\">\n                            <h1>Tambah Tahap</h1>\n                            <div className=\"form-group\">\n                                <label>Nama Tahap</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"namaTahapan\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.namaTahapan}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n\n                                />\n                                {touched.namaTahapan && <span className=\"message__error\">{errors.namaTahapan}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Judul Tahap</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentName\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n\n                                />\n                                {touched.contentName && <span className=\"message__error\">{errors.contentName}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Isi Tahap</label>\n                                {/* <p>*Untuk memasukkan video dengan URL, tekan tombol \"Embedded\" di sebelah kanan \"Link\".</p> */}\n                                {values.contentType === \"Artikel\" || \"Ujian\" ? (\n                                    <SunEditor \n                                    setOptions={{\n                                        buttonList: editorButtonList,\n                                        imageWidth: '360px'\n                                    }}\n                                    onChange={(content) => {\n                                        setFieldValue('contents', content);\n                                    }}\n                                    height='500px'/>\n                                    // <Editor\n                                    //     editorState={artikel}\n                                    //     toolbarClassName=\"toolbarClassName\"\n                                    //     wrapperClassName=\"wrapperClassName\"\n                                    //     editorClassName=\"editorClassName\"\n                                    //     onEditorStateChange={(editorState) => setArtikel(editorState)}\n                                    //     // onEditorStateChange={updateTextDescription}\n                                    //     // value={description.values}\n                                    //     value={draftToHtml(convertToRaw(artikel.getCurrentContent()))}\n                                    //     // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                    //     name=\"contents\"\n                                    //     toolbar={{\n                                    //         list: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         textAlign: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         image: {\n                                    //             uploadEnabled: true,\n                                    //             alignmentEnabled: true,\n                                    //             previewImage: true,\n                                    //             uploadCallback: uploadCallback,\n                                    //             inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         },\n                                    //         embedded:{\n                                    //             embedCallback: embedVideoCallBack,\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         }\n                                    //     }}\n                                    //     onChange={() => {\n                                    //         // setTextValue(editorState);\n                                    //         // setFieldValue(\"contentDescription\", description);\n                                    //         setFieldValue('contents', draftToHtml(convertToRaw(artikel.getCurrentContent())));\n                                    //         // // console.log(textDeskripsi);\n                                    //         // // console.log(values.contents)\n                                    //     }}\n\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    // <img src={conFromImgVid}></img>\n\n                                    <InputComponent\n                                        type=\"file\"\n                                        className=\"form-group__input\"\n                                        name=\"contents\"\n                                        onBlur={handleBlur}\n                                        // value={values.contents}\n                                        // onChange={handleChange}\n                                        onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            // console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contents\", file);\n                                        }\n                                    }}\n                                    />\n\n                                    // <InputComponent\n                                    //     type=\"text\"\n                                    //     name=\"contents\"\n                                    //     className=\"form-group__input form-group__input--fullwidth\" \n                                    //     placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    //     value={values.contents}\n                                    //     onChange={handleChange}\n                                    //     onBlur={handleBlur}\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Video\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Pdf URL... (just for pdf file)\"\n                                        // placeholder={values.contents}\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    // untuk internal masih diupdate\n                                    //url ok\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>Set Schedule</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={new Date().toISOString().split('T')[0]}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div> */}\n                            <div>\n                            {responseCount === 0 ? \n                            <div className=\"form-group\">\n                                <label>{\"Jumlah Respon/Jawaban di Setiap Tahap\"}</label>\n                                <InputComponent \n                                    type=\"number\"\n                                    className=\"form-group__input\"\n                                    value={resCount}\n                                    min={1}\n                                    max={100}\n                                    onChange={(e) => {\n                                        // console.log(e.currentTarget.value);\n                                        e.currentTarget.value = e.currentTarget.value.replace(/^0+/, '');\n                                        // console.log('After', e.currentTarget.value);\n                                        if(e.currentTarget.value) {\n                                            // console.log('Yes masuk');\n                                            if(resCount > e.currentTarget.value) {\n                                                var y = values.response;\n                                                if(values.response.length > 0 && values.answerKey === values.response[values.response.length-1] && localStorage.getItem('programCategory') === 'Ujian') setFieldValue('answerKey', values.response[0])\n                                                y.splice(e.currentTarget.value-resCount, resCount-e.currentTarget.value);\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            else {\n                                                // // console.log(\"Nambah loh\");\n                                                var y = values.response;\n                                                for(var j = 0; j < e.currentTarget.value-resCount; j++) {\n                                                    // console.log(\"Ini nambah?\");\n                                                    y.push('');\n                                                }\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            setResCount(e.currentTarget.value)\n                                        }\n                                        else {\n                                            setResCount(0);\n                                            setFieldValue('response', []);\n                                        }\n                                    }}\n                                    disabled={false}\n                                />\n                            </div> : null\n                            }\n                            <div className=\"form-group\">\n                                <label>Respon/Jawaban</label>\n                                {values.response.map((res, index) => {\n                                    // console.log(\"Content response:\", res)\n                                    return <InputComponent\n                                        type=\"text\"\n                                        name=\"response\"\n                                        className=\"form-group__input form-group__input--halfwidth\"\n                                        placeholder=\"Example\"\n                                        value={res}\n                                        onChange={(e) => {\n                                            var x = '';\n                                            for(var i = 0; i < e.currentTarget.value.length; i++) {\n                                                if(e.currentTarget.value.charAt(i) !== '.') x += e.currentTarget.value.charAt(i);\n                                                else x += '․';\n                                            }\n                                            setFieldValue(`response.${index}`, x);\n                                        }}\n                                        onBlur={handleBlur}\n                                    />\n                                })}\n                            </div>\n                            {localStorage.getItem('programCategory') === 'Ujian' ? (\n                                <div className=\"form-group\">\n                                    <label>Kunci Jawaban</label>\n                                    <select\n                                        name=\"answerKey\"\n                                        value={values.answerKey}\n                                        onChange={(e) => {\n                                            setFieldValue('answerKey', e.currentTarget.value)\n                                        }}\n                                    >\n                                        <option value='-1' disabled>{\" \"}</option>\n                                        {\n                                            values.response.map((category) => {\n                                                return (\n                                                    <option value={category}>{category}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            ) : null}\n                                <button className=\"btn btn-submit\" type=\"submit\" onClick={() => {\n                                if(Object.keys(errors).length > 0) alert('Ada kolom yang belum diisi. Silakan cek kembali.');\n                            }}>\n                                    Tambah Tahap\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {isLoading ? <RKLoader /> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    // console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddStep: (programId, cobrandEmail, nomerUrutTahapan, namaTahapan, contentName, contentType, contentSource, contents, startDate, endDate, topics, targetAudiance, response, answerKey, history) =>\n            dispatch(addStep(programId, cobrandEmail, nomerUrutTahapan, namaTahapan, contentName, contentType, contentSource, contents, startDate, endDate, topics, targetAudiance, response, answerKey, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddStep)\n","var map = {\n\t\"./ckb.js\": 202,\n\t\"./da.js\": 203,\n\t\"./de.js\": 204,\n\t\"./en.js\": 189,\n\t\"./es.js\": 205,\n\t\"./fr.js\": 206,\n\t\"./he.js\": 207,\n\t\"./index.js\": 255,\n\t\"./it.js\": 208,\n\t\"./ja.js\": 209,\n\t\"./ko.js\": 210,\n\t\"./lv.js\": 211,\n\t\"./nl.js\": 212,\n\t\"./pl.js\": 213,\n\t\"./pt_br.js\": 214,\n\t\"./ro.js\": 215,\n\t\"./ru.js\": 216,\n\t\"./se.js\": 217,\n\t\"./ua.js\": 218,\n\t\"./zh_cn.js\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 254;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}