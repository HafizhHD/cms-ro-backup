{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","store/actions/dashboard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/UI/Table/Table.js","containers/CoBrand/Program/EditProgram/columns.js","containers/CoBrand/Program/EditProgram/EditProgram.js","components/UI/Warning/Warning.js","components/API/dashboard.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","getAdminList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","userName","required","password","validationFormRegister","email","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","answerKey","is","then","otherwise","validationProgramEdit","validationStepEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","result","programthumnail","j","length","push","data1","programAdd","response","console","log","programId","resultData","progrram","_id","contentPrograms1","i","x","respons","realContents","dataRaw","nomerUrutTahapan","contentType","status","contentAddAsync","response2","data2","notificationAdd","join","catch","error","editProgram","whereValues","newValues","programEdit","addStep","contentAdd","editStep","contentEdit","deleteProgram","retrieveList","deleting","programDelete","paramu","contentDelete","addContent","topic","audi","map","e","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","loginData","localStorage","removeItem","setItem","token","JSON","stringify","user","addNotification","useSchedule","schedule","addAudience","audienceAdd","addNotifCategory","notifCategoryAdd","addProgCategory","programCategoryAdd","addStaff","userType","userLevel","adminAdd","editStaff","getItem","newKeyValues","adminEdit","deleteStaff","staffId","adminDelete","addContentTopic","contentTopicAdd","addScreenTime","unit","screenTimeAdd","editAppUser","gender","imagePhoto","appUserEdit","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Table","DATA","COLUMNS","renderRowSubComponent","useMemo","useTable","columns","initialState","hiddenColumns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","onClick","defaultValue","target","Number","currentTarget","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","Columns","setStepDeleting","setWarning","Header","accessor","Cell","to","title","values","document","body","style","overflow","connect","isLoading","auth","onEditProgram","programThumbnailEdit","useState","isPageLoading","setPageLoading","program","setProgram","useHistory","parse","categoryList","setCategoryList","audience","setAudience","steps","setSteps","stepDeleting","audienceVal","setAudienceVal","showWarning","setShowWarning","confirmDelete","setConfirmDelete","useEffect","params2","whereKeyValues","orderKeyValues","includeContentData","limit","MAX_SAFE_INTEGER","promiseTopic","promiseAudience","promiseStep","all","responseAll","topicRaw","audienceRaw","Data","label","keys","params","programs","audienceValRaw","param","res","RKLoader","Warning","setDeleting","setConfirmDeleting","Heading","headingName","routes","path","initialValues","split","validationSchema","validateOnChange","onSubmit","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","isMulti","options","classNamePrefix","alert","a","item","exact"],"mappings":"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","file":"static/js/17.bca9986e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport url from \"./urlApi\";\r\n\r\nexport const getProgramList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/programFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const getContentList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/contentFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const getUserList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/userFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getRedzoneList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/redZoneFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAppUsageList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/appUsageFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getDeviceScheduleList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/deviceUsageScheduleFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAppLimitList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/appUsageLimitFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getModeAsuhList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/childModeAsuhFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAppDetailList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/appIconFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getNotificationList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/broadcastFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getNotificationCategoryList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/notificationCategoryFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getAudienceList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/audianceTargetFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const getContentTopicList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/contentTopicFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\nexport const getProgramCategoryList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/programCategoryFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\nexport const getAdminList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/userFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const getHKBPList = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/HKBPDataFilter',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\n","import React, { memo } from 'react';\r\nimport './Input.scss';\r\n\r\nfunction Input({\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    onBlur,\r\n    value,\r\n    className,\r\n    message,\r\n    name,\r\n    min,\r\n    max,\r\n    disabled,\r\n    isError\r\n}) {\r\n    if(type === \"textarea\") {\r\n        return (\r\n        <>\r\n            <textarea\r\n                name={name}\r\n                id={name}\r\n                className={className}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                value={value}\r\n                disabled={disabled}\r\n            />\r\n            {isError && (\r\n                <div className=\"message\">\r\n                    <span className=\"message__error\">{message}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n        )\r\n    }\r\n    else if(type === 'date' || type === 'datetime-local') {\r\n        return (\r\n            <>\r\n                <input\r\n                    name={name}\r\n                    className={className} \r\n                    type={type}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    min={min}\r\n                    max={\"9999-12-31\"}\r\n                    disabled={disabled}\r\n                />\r\n                {isError && (\r\n                    <div className=\"message\">\r\n                        <span className=\"message__error\">{message}</span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    else if(type === 'number') {\r\n        return (\r\n            <>\r\n                <input\r\n                    name={name}\r\n                    className={className} \r\n                    type={type}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    disabled={disabled}\r\n                />\r\n                {isError && (\r\n                    <div className=\"message\">\r\n                        <span className=\"message__error\">{message}</span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    else return (\r\n        <>\r\n            <input\r\n                name={name}\r\n                className={className} \r\n                type={type}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                value={value}\r\n                disabled={disabled}\r\n            />\r\n            {isError && (\r\n                <div className=\"message\">\r\n                    <span className=\"message__error\">{message}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Input) \r\n","import * as yup from 'yup';\r\n\r\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\r\nconst UserRegex = /^\\S*$/;\r\n\r\nexport const validationFormLogin = yup.object({\r\n    userName: yup.string('Enter your email').required('Email is required'),\r\n    password: yup.string('Enter your password').required('Password is required')\r\n})\r\n\r\nexport const validationFormRegister = yup.object({\r\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\r\n    accountName: yup.string('Enter your name').required('Name is required'),\r\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\r\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\r\n        .test(\r\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\r\n            (img) =>\r\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\r\n        )\r\n        .test(\r\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\r\n            (img) => {\r\n                if(img) {\r\n                    return img.size <= 2097152;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        ),\r\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\r\n    address: yup.string('Enter your address').required('Address is required'),\r\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\r\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\r\n        .when('password', (password, schema) => {\r\n            return schema.test({\r\n                test: confirmPassword => password && confirmPassword === password,\r\n                message: \"Password doesn't match\"\r\n            })\r\n        })\r\n})\r\n\r\nexport const validationFormEdit = yup.object({\r\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\r\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\r\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\r\n        .test(\r\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\r\n            (img) =>\r\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\r\n        )\r\n        .test(\r\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\r\n            (img) => {\r\n                if(img) {\r\n                    return img.size <= 2097152;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        ),\r\n        //buat nambahin misal upload background. apakah akan masuk kesini?\r\n        \r\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\r\n    address: yup.string('Enter your address').required('Address is required'),\r\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\r\n    confirmPassword: yup.string('Confirm your password')\r\n        .when('password', (password, schema) => {\r\n            return schema.test({\r\n                test: confirmPassword => (password && confirmPassword === password) || !password,\r\n                message: \"Password doesn't match\"\r\n            })\r\n        })\r\n})\r\n\r\nexport const validationProgram = yup.object({\r\n    programName: yup.string('Enter your program title').required('Program title is required'),\r\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\r\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\r\n        .test(\r\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\r\n            (img) =>\r\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\r\n        )\r\n        .test(\r\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\r\n            (img) => {\r\n                if(img) {\r\n                    return img.size <= 2097152;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        ),\r\n    startDate: yup.date('Insert start date').required('Date is required'),\r\n    endDate: yup.date('Insert end date').required('Date is required'),\r\n    category: yup.string(),\r\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\r\n    contentPrograms: yup.array().min(1).of(\r\n        yup.object({\r\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\r\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\r\n            contents: yup.string().required('Isi Tahapan harus diisi'),\r\n            startDate: yup.date('Insert start date').required('Date is required'),\r\n            endDate: yup.date('Insert end date').required('Date is required'),\r\n            answerKey: yup.string().when('category', {\r\n                is: 'Ujian',\r\n                then: yup.string().required('Kunci Jawaban harus diisi'),\r\n                otherwise: yup.string()\r\n            })\r\n        })\r\n    )\r\n})\r\n\r\nexport const validationProgramEdit = yup.object({\r\n    programName: yup.string('Enter your program title').required('Program title is required'),\r\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\r\n    startDate: yup.date('Insert start date').required('Date is required')\r\n});\r\n\r\nexport const validationStepEdit = yup.object({\r\n    namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\r\n    contentName: yup.string().required('Judul Tahapan harus diisi'),\r\n    contents: yup.string().required('Isi Tahapan harus diisi'),\r\n});\r\n\r\nexport const validationContent = yup.object({\r\n    contentName: yup.string('Enter your content title').required('Content title is required'),\r\n    contentDescription: yup.string('Enter the content description'),\r\n    contents: yup.string('Enter the content description').required('Content is required'),\r\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\r\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\r\n        .test(\r\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\r\n            (img) =>\r\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\r\n        )\r\n        .test(\r\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\r\n            (img) => {\r\n                if(img) {\r\n                    return img.size <= 2097152;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        ),\r\n    startDate: yup.date('Insert start date').required('Date is required'),\r\n    endDate: yup.date('Insert end date').required('Date is required'),\r\n    isActive: yup.boolean(),\r\n    topics: yup.array().min(1),\r\n    targetAudience: yup.array().min(1)\r\n})\r\n\r\nexport const validationContentEdit = yup.object({\r\n    contentName: yup.string('Enter your content title').required('Content title is required'),\r\n    contentDescription: yup.string('Enter the content description'),\r\n    contents: yup.string('Enter the content description').required('Content is required'),\r\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\r\n    startDate: yup.date('Insert start date').required('Date is required')\r\n});\r\n\r\nexport const validationUserEdit = yup.object({\r\n    nameUser: yup.string('Enter your content title').required('User name is required'),\r\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\r\n    birdDate: yup.date('Insert start date').required('Date is required')\r\n})\r\n\r\nexport const validationNotification = yup.object({\r\n    destination: yup.array().min(1),\r\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\r\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\r\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\r\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\r\n    category: yup.string('Enter the category').required('Category is required')\r\n})\r\n\r\nexport const validationAudience = yup.object({\r\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\r\n})\r\n\r\nexport const validationNotifCategory = yup.object({\r\n    category: yup.string('Enter category name').required('Category is required'),\r\n    description: yup.string('Enter description').required('Description is required')\r\n})\r\n\r\nexport const validationProgCategory = yup.object({\r\n    category: yup.string('Enter category name').required('Category is required'),\r\n    description: yup.string('Enter description').required('Description is required')\r\n})\r\n\r\nexport const validationStaff = yup.object({\r\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\r\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\r\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\r\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\r\n})\r\n\r\nexport const validationContentTopic = yup.object({\r\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\r\n})\r\n\r\nexport const validationScreenTime = yup.object({\r\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\r\n    controlParameterValue: yup.number().required('Number is required')\r\n})","import {\r\n    AUTH_SUCCESS,\r\n    AUTH_START,\r\n    AUTH_FAILED,\r\n    AUTH_LOGOUT,\r\n    ALERT_ERROR,\r\n    ALERT_SUCCESS,\r\n    ALERT_CLOSE\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\r\nimport { contentAdd, contentAddAsync, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\r\n    adminAdd, adminEdit, adminDelete, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\r\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\r\n\r\n///pdf\r\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\r\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\r\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\r\n// import '@react-pdf-viewer/core/lib/styles/index.css'\r\n// import { Worker } from '@react-pdf-viewer/core'\r\n// import React, { useState } from 'react';\r\n// import InputComponent from '../../../src/components/UI/Input/Input';\r\n\r\nexport const loadingStart = () => ({ type: AUTH_START });\r\nexport const loadingStop = () => ({ type: AUTH_FAILED });\r\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\r\n\r\nexport const alertError = (message, id) => ({\r\n    type: ALERT_ERROR,\r\n    message: message,\r\n    idMessage: id\r\n});\r\n\r\nexport const alertSuccess = (message, id) => ({\r\n    type: ALERT_SUCCESS,\r\n    message: message,\r\n    idMessage: id\r\n})\r\n\r\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n\r\n        const promise = toBase64(photo);\r\n        promise.then((result) => {\r\n            // console.log(typeof result);\r\n            const programthumnail = result;\r\n            let targetAudiance = [];\r\n            for(var j = 0; j < targetAudience.length; j++) {\r\n                targetAudiance.push(targetAudience[j].value);\r\n            }\r\n\r\n            let data1 = {\r\n                cobrandEmail,\r\n                programName,\r\n                ProgramDescription,\r\n                programthumnail,\r\n                startDate,\r\n                endDate,\r\n                category,\r\n                targetAudiance\r\n            };\r\n\r\n            programAdd(data1)\r\n            .then(response => {\r\n                console.log('response:', response.data);\r\n                let programId = response.data.resultData.progrram._id;\r\n                let contentPrograms1 = [];\r\n                for(var i = 0; i < contentProg.length; i++) {\r\n                    let x = contentProg[i];\r\n                    let respons = {};\r\n                    for(var j = 0; j < x.response.length; j++) {\r\n                        respons[x.response[j]] = 0;\r\n                    }\r\n                    let realContents = '<!DOCTYPE html>'\r\n                            + '<html lang=\"en\">'\r\n                            + '<head>'\r\n                            + '<meta charset=\"utf-8\">'\r\n                            + '<style>'\r\n                            + '#contents {'\r\n                            + 'overflow-y: scroll;'\r\n                            + 'text-align: justify;'\r\n                            + 'font-family: Arial, Helvetica, sans-serif;'\r\n                            + 'padding: 1%;'\r\n                            + '}'\r\n                            + '#contents li {'\r\n                            + 'margin-left: 5%;'\r\n                            + '}'\r\n                            + '</style>'\r\n                            + '</head>'\r\n                            + '<body>'\r\n                            + '<div id=\"contents\">'\r\n                            + x.contents\r\n                            + '</div>'\r\n                            + '</body>'\r\n                            + '</html>';\r\n                    let dataRaw = {\r\n                        programId: programId,\r\n                        cobrandEmail: cobrandEmail,\r\n                        nomerUrutTahapan: x.nomerUrutTahapan,\r\n                        namaTahapan: x.namaTahapan,\r\n                        contentName: x.contentName,\r\n                        contentType: x.contentType,\r\n                        contentSource: x.contentSource,\r\n                        contents: realContents,\r\n                        startDate: x.startDate,\r\n                        endDate: x.endDate,\r\n                        topics: x.topics,\r\n                        targetAudiance: x.targetAudiance,\r\n                        status: 'active',\r\n                        respons: respons,\r\n                        answerKey: x.answerKey\r\n                    }\r\n\r\n                    contentPrograms1.push(contentAddAsync(dataRaw).then(response2 => {\r\n                        console.log('Respons ' + i, response2)\r\n                    }));\r\n                    console.log('content Program 1', contentPrograms1);\r\n                }\r\n                if(contentPrograms1.length === contentProg.length) {\r\n                    history.push('/cms/program');\r\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\r\n                    let data2 = {\r\n                        destination: \"Orang Tua\",\r\n                        messageSubject: \"Program Baru Untuk Anak\",\r\n                        messageContent: \"Hi Papa mama Ada Program Baru Lho! Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, papa mama bisa bagikan program tersebut ke anak Anda. Yuk ikuti program barunya.\",\r\n                        scheduleTime: startDate,\r\n                        mediaType: \"Device\",\r\n                        category: \"Informasi\"\r\n                    }\r\n                    notificationAdd(data2);\r\n                    dispatch(loadingStop());\r\n                }\r\n                else {\r\n                    history.push('/cms/program');\r\n                    dispatch(alertError('Program \"' + programName + '\" berhasil ditambahkan, namun beberapa tahap gagal ditambahkan.'));\r\n                    let data2 = {\r\n                        destination: \"Orang Tua\",\r\n                        messageSubject: \"Hai Papa Mama Ada Program Baru Lho! \",\r\n                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, papa mama bisa bagikan program tersebut ke anak Anda. Yuk ikuti program barunya.\",\r\n                        scheduleTime: startDate,\r\n                        mediaType: \"Device\",\r\n                        category: \"Informasi\"\r\n                    }\r\n                    notificationAdd(data2).then(() => {\r\n                        data2.destination = targetAudiance.join(\", \");\r\n                        data2.messageSubject = \"Hi Adik-Adik Ada Program Baru Lho!\"\r\n                        data2.messageContent = \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, yuk adik-adik kita ikuti program baru nya, Seru Lho!\"\r\n                    });\r\n                    dispatch(loadingStop());\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error:', error);\r\n                dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            })\r\n\r\n            // let contentPrograms = [];\r\n            // for(var i = 0; i < contentProg.length; i++) {\r\n            //     let x = contentProg[i];\r\n            //     let respons = {};\r\n            //     for(var j = 0; j < x.response.length; j++) {\r\n            //         respons[x.response[j]] = 0;\r\n            //     }\r\n            //     let realContents = '<!DOCTYPE html>'\r\n            //             + '<html lang=\"en\">'\r\n            //             + '<head>'\r\n            //             + '<meta charset=\"utf-8\">'\r\n            //             + '<style>'\r\n            //             + '#contents {'\r\n            //             + 'overflow-y: scroll;'\r\n            //             + 'text-align: justify;'\r\n            //             + 'font-family: Arial, Helvetica, sans-serif;'\r\n            //             + 'padding: 1%;'\r\n            //             + '}'\r\n            //             + '#contents li {'\r\n            //             + 'margin-left: 5%;'\r\n            //             + '}'\r\n            //             + '</style>'\r\n            //             + '</head>'\r\n            //             + '<body>'\r\n            //             + '<div id=\"contents\">'\r\n            //             + x.contents\r\n            //             + '</div>'\r\n            //             + '</body>'\r\n            //             + '</html>';\r\n            //     let dataRaw = {\r\n            //         nomerUrutTahapan: x.nomerUrutTahapan,\r\n            //         namaTahapan: x.namaTahapan,\r\n            //         contentName: x.contentName,\r\n            //         contentType: x.contentType,\r\n            //         contentSource: x.contentSource,\r\n            //         contents: realContents,\r\n            //         startDate: x.startDate,\r\n            //         endDate: x.endDate,\r\n            //         topics: x.topics,\r\n            //         targetAudiance: x.targetAudiance,\r\n            //         respons: respons,\r\n            //         answerKey: x.answerKey\r\n            //     }\r\n            //     contentPrograms.push(dataRaw);\r\n            // }\r\n\r\n            // let targetAudiance = [];\r\n            // for(var j = 0; j < targetAudience.length; j++) {\r\n            //     targetAudiance.push(targetAudience[j].value);\r\n            // }\r\n\r\n            // let data = {\r\n            //     cobrandEmail,\r\n            //     programName,\r\n            //     ProgramDescription,\r\n            //     programthumnail,\r\n            //     startDate,\r\n            //     endDate,\r\n            //     category,\r\n            //     targetAudiance,\r\n            //     contentPrograms\r\n            // };\r\n\r\n            // // console.log(data);\r\n            // //Call API ....\r\n\r\n            // // programAdd(data)\r\n            // programAddv2(data)\r\n            //     .then(response => {\r\n            //         // console.log('Success:', response.data);\r\n            //         history.push('/cms/program');\r\n            //         dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\r\n            //         dispatch(loadingStop());\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         console.error('Error:', error);\r\n            //         dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n            //         dispatch(loadingStop());\r\n            //     });\r\n            // // console.log(data);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, startDate, endDate, category, targetAudiance, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            whereValues: {\r\n                cobrandEmail,\r\n                _id\r\n            },\r\n            newValues: {\r\n                programName,\r\n                ProgramDescription,\r\n                startDate,\r\n                endDate,\r\n                category,\r\n                targetAudiance\r\n            }\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        programEdit(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/cms/program');\r\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const addStep = (programId, cobrandEmail, nomerUrutTahapan, namaTahapan, contentName, contentType, contentSource, contents, startDate, endDate, topics, targetAudiance, response, answerKey, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let respons = {};\r\n        for(var j = 0; j < response.length; j++) {\r\n            respons[response[j]] = 0;\r\n        }\r\n        let realContents = '<!DOCTYPE html>'\r\n                            + '<html lang=\"en\">'\r\n                            + '<head>'\r\n                            + '<meta charset=\"utf-8\">'\r\n                            + '<style>'\r\n                            + '#contents {'\r\n                            + 'overflow-y: scroll;'\r\n                            + 'text-align: justify;'\r\n                            + 'font-family: Arial, Helvetica, sans-serif;'\r\n                            + 'padding: 1%;'\r\n                            + '}'\r\n                            + '#contents li {'\r\n                            + 'margin-left: 5%;'\r\n                            + '}'\r\n                            + '</style>'\r\n                            + '</head>'\r\n                            + '<body>'\r\n                            + '<div id=\"contents\">'\r\n                            + contents\r\n                            + '</div>'\r\n                            + '</body>'\r\n                            + '</html>';\r\n        let data = {\r\n            programId,\r\n            cobrandEmail,\r\n            nomerUrutTahapan,\r\n            namaTahapan,\r\n            contentName,\r\n            contentType,\r\n            contentSource,\r\n            contents: realContents,\r\n            startDate,\r\n            endDate,\r\n            topics,\r\n            targetAudiance,\r\n            respons,\r\n            answerKey,\r\n            status: 'active'\r\n        };\r\n\r\n        console.log(data);\r\n        //Call API ....\r\n\r\n        contentAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/cms/program/edit/');\r\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const editStep = (_id, cobrandEmail, namaTahapan, contentName, contents, response, answerKey, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let respons = {};\r\n        for(var j = 0; j < response.length; j++) {\r\n            respons[response[j]] = 0;\r\n        }\r\n        let realContents = '<!DOCTYPE html>'\r\n                            + '<html lang=\"en\">'\r\n                            + '<head>'\r\n                            + '<meta charset=\"utf-8\">'\r\n                            + '<style>'\r\n                            + '#contents {'\r\n                            + 'overflow-y: scroll;'\r\n                            + 'text-align: justify;'\r\n                            + 'font-family: Arial, Helvetica, sans-serif;'\r\n                            + 'padding: 1%;'\r\n                            + '}'\r\n                            + '#contents li {'\r\n                            + 'margin-left: 5%;'\r\n                            + '}'\r\n                            + '</style>'\r\n                            + '</head>'\r\n                            + '<body>'\r\n                            + '<div id=\"contents\">'\r\n                            + contents\r\n                            + '</div>'\r\n                            + '</body>'\r\n                            + '</html>';\r\n        let data = {\r\n            whereValues: {\r\n                cobrandEmail,\r\n                _id\r\n            },\r\n            newValues: {\r\n                namaTahapan,\r\n                contentName,\r\n                contents: realContents,\r\n                respons,\r\n                answerKey\r\n            }\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        contentEdit(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/cms/program/view/step');\r\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil diubah.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        const deleting = {\r\n            whereValues: {\r\n                cobrandEmail: cobrandEmail,\r\n                _id: programId[0]\r\n            }\r\n        }\r\n        programDelete(deleting)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                let paramu = {\r\n                    whereValues: {\r\n                        programId: programId[0]\r\n                    }\r\n                }\r\n                contentDelete(paramu)\r\n                .then(response2 => {\r\n                    // console.log(response2.data);\r\n                    dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\r\n                    dispatch(loadingStop());\r\n                    retrieveList();\r\n                })\r\n                .catch(error => {\r\n                    // console.log(error);\r\n                    dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus, namun tahap pada program gagal dihapus.'));\r\n                    dispatch(loadingStop());\r\n                    retrieveList();\r\n                });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n                retrieveList();\r\n            });\r\n    }\r\n}\r\n\r\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n\r\n        // const [numPages, setNumPages] = useState(null);\r\n        // const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n        const promise = toBase64(photo);\r\n        promise.then((result) => {\r\n\r\n            let topic = [], audi = [];\r\n            topics.map(e => {\r\n                topic.push(e.value)\r\n            });\r\n            targetAudience.map(e => {\r\n                audi.push(e.value)\r\n            });\r\n\r\n            // console.log(typeof result);\r\n            const contentThumbnail = result;\r\n            let status = isActive ? 'active' : 'inactive';\r\n\r\n            if (contentType === 'Video') {\r\n                // const video = toBase64(contents);\r\n                if (typeof contents === 'string') {\r\n                    contents = \"<div><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:360px;height:202.5px;\\\" frameborder=\\\"0\\\" width=\\\"360px\\\" height=\\\"202.5px\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\r\n                } else {\r\n                    const video = toBase64(contents);\r\n                    video.then((hasil) => {\r\n                        contents = \"<div><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:360px;height:202.5px;\\\" frameborder=\\\"0\\\" width=\\\"360px\\\" height=\\\"202.5px\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\r\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \r\n                        let data = {\r\n                            cobrandEmail,\r\n                            programId,\r\n                            contentName,\r\n                            contentDescription,\r\n                            contentType,\r\n                            contentSource,\r\n                            contentThumbnail,\r\n                            contents,\r\n                            status,\r\n                            startDate,\r\n                            endDate,\r\n                            topics: topic,\r\n                            targetAudiance: audi\r\n                        };\r\n\r\n                        // console.log(data);\r\n                        //Call API ....\r\n\r\n                        contentAdd(data)\r\n                            .then(response => {\r\n                                // console.log('Success:', response.data);\r\n                                history.push('/cms/content');\r\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\r\n                                let data2 = {\r\n                                    destination: audi.join(','),\r\n                                    messageSubject: \"Hai, Ada Artikel Baru Lho!\",\r\n                                    messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\r\n                                    scheduleTime: startDate,\r\n                                    mediaType: \"Device\",\r\n                                    category: \"Informasi\"\r\n                                }\r\n                                notificationAdd(data2);\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                        // console.log(data);\r\n                    })\r\n                }\r\n\r\n            }\r\n            else if (contentType === 'Image') {\r\n                if (typeof contents === 'string') {\r\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\r\n                } else {\r\n                    const gambar = toBase64(contents);\r\n                    gambar.then((hasil) => {\r\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\r\n                        // console.log(contents);\r\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n\r\n                        let data = {\r\n                            cobrandEmail,\r\n                            programId,\r\n                            contentName,\r\n                            contentDescription,\r\n                            contentType,\r\n                            contentSource,\r\n                            contentThumbnail,\r\n                            contents,\r\n                            status,\r\n                            startDate,\r\n                            endDate,\r\n                            topics: topic,\r\n                            targetAudiance: audi\r\n                        };\r\n\r\n                        // console.log(data);\r\n                        //Call API ....\r\n\r\n                        contentAdd(data)\r\n                            .then(response => {\r\n                                // console.log('Success:', response.data);\r\n                                history.push('/cms/content');\r\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\r\n                                let data2 = {\r\n                                    destination: audi.join(','),\r\n                                    messageSubject: \"Hai, Ada Artikel Baru Lho!\",\r\n                                    messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\r\n                                    scheduleTime: startDate,\r\n                                    mediaType: \"Device\",\r\n                                    category: \"Informasi\"\r\n                                }\r\n                                notificationAdd(data2);\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                        // console.log(data);\r\n\r\n                    })\r\n                }\r\n            }\r\n            else if (contentType === 'Pdf') {\r\n                if (typeof contents === 'string') {\r\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\r\n                } else {\r\n                    const pdf = toBase64(contents);\r\n                    pdf.then((hasil) => {\r\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\r\n                        let data = {\r\n                            cobrandEmail,\r\n                            programId,\r\n                            contentName,\r\n                            contentDescription,\r\n                            contentType,\r\n                            contentSource,\r\n                            contentThumbnail,\r\n                            contents,\r\n                            status,\r\n                            startDate,\r\n                            endDate,\r\n                            topics: topic,\r\n                            targetAudiance: audi\r\n                        };\r\n\r\n                        // console.log(data);\r\n                        //Call API ....\r\n\r\n                        contentAdd(data)\r\n                            .then(response => {\r\n                                // console.log('Success:', response.data);\r\n                                history.push('/cms/content');\r\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\r\n                                let data2 = {\r\n                                    destination: audi.join(','),\r\n                                    messageSubject: \"Hai, Ada Artikel Baru Lho!\",\r\n                                    messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\r\n                                    scheduleTime: startDate,\r\n                                    mediaType: \"Device\",\r\n                                    category: \"Informasi\"\r\n                                }\r\n                                notificationAdd(data2);\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                        // console.log(data);\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                contents = '<!DOCTYPE html>'\r\n                    + '<html lang=\"en\">'\r\n                    + '<head>'\r\n                    + '<meta charset=\"utf-8\">'\r\n                    + '<style>'\r\n                    + '#contents {'\r\n                    + 'overflow-y: scroll;'\r\n                    + 'text-align: justify;'\r\n                    + 'font-family: Arial, Helvetica, sans-serif;'\r\n                    + 'padding: 1%;'\r\n                    + '}'\r\n                    + '#contents li {'\r\n                    + 'margin-left: 5%;'\r\n                    + '}'\r\n                    + '</style>'\r\n                    + '</head>'\r\n                    + '<body>'\r\n                    + '<div id=\"contents\">'\r\n                    + contents\r\n                    + '</div>'\r\n                    + '</body>'\r\n                    + '</html>';\r\n            }\r\n\r\n            // console.log(contents);\r\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n\r\n            let data = {\r\n                cobrandEmail,\r\n                programId,\r\n                contentName,\r\n                contentDescription,\r\n                contentType,\r\n                contentSource,\r\n                contentThumbnail,\r\n                contents,\r\n                status,\r\n                startDate,\r\n                endDate,\r\n                topics: topic,\r\n                targetAudiance: audi\r\n            };\r\n\r\n            console.log(data);\r\n            //Call API ....\r\n\r\n            contentAdd(data)\r\n                .then(response => {\r\n                    // console.log('Success:', response.data);\r\n                    history.push('/cms/content');\r\n                    dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\r\n                    let data2 = {\r\n                        destination: audi.join(','),\r\n                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\r\n                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\r\n                        scheduleTime: startDate,\r\n                        mediaType: \"Device\",\r\n                        category: \"Informasi\"\r\n                    }\r\n                    console.log(data2);\r\n                    notificationAdd(data2);\r\n                    dispatch(loadingStop());\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error:', error);\r\n                    dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                    dispatch(loadingStop());\r\n                });\r\n            // console.log(data);\r\n        });\r\n    }\r\n}\r\n\r\n//edit content di sesuaikan dg ini\r\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n\r\n\r\n        // const [numPages, setNumPages] = useState(null);\r\n        // const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n        // const promise = toBase64(photo);\r\n        // promise.then((result) => {\r\n\r\n            // // console.log(typeof result);\r\n            // const contentThumbnail = result;\r\n            const contentThumbnail = photo;\r\n            // let status = isActive ? 'active' : 'inactive';\r\n\r\n            if (contentType === 'Video') {\r\n                // const video = toBase64(contents);\r\n                if (typeof contents === 'string') {\r\n                    contents = \"<div><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:360px;height:202.5px;\\\" frameborder=\\\"0\\\" width=\\\"360px\\\" height=\\\"202.5px\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\r\n                } else {\r\n                    \r\n                    const video = toBase64(contents);\r\n                    video.then((hasil) => {\r\n                        contents = \"<div><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:360px;height:202.5px;\\\" frameborder=\\\"0\\\" width=\\\"360px\\\" height=\\\"202.5px\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\r\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \r\n                        // const contentThumbnail = result;\r\n                        let datax = {\r\n                            cobrandEmail,\r\n                            programId,\r\n                            contentName,\r\n                            contentDescription,\r\n                            contentType,\r\n                            contentSource,\r\n                            // contentThumbnail,\r\n                            contents,\r\n                            // status,\r\n                            startDate\r\n                        };\r\n\r\n                        let data = {\r\n                            whereValues: {\r\n                                _id\r\n                            },\r\n                            newValues: datax\r\n                        }\r\n\r\n                        // console.log(data);\r\n                        //Call API ....\r\n\r\n                        contentEdit(data)\r\n                            .then(response => {\r\n                                // console.log('Success:', response.data);\r\n                                history.push('/cms/content');\r\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil diubah.'));\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                        // console.log(data);\r\n                    })\r\n                }\r\n\r\n            }\r\n            else if (contentType === 'Image') {\r\n                if (typeof contents === 'string') {\r\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\r\n                } else {\r\n                    const gambar = toBase64(contents);\r\n                    gambar.then((hasil) => {\r\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\r\n                        // console.log(contents);\r\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n\r\n                        let datax = {\r\n                            cobrandEmail,\r\n                            programId,\r\n                            contentName,\r\n                            contentDescription,\r\n                            contentType,\r\n                            contentSource,\r\n                            // contentThumbnail,\r\n                            contents,\r\n                            // status,\r\n                            startDate\r\n                        };\r\n\r\n                        let data = {\r\n                            whereValues: {\r\n                                _id\r\n                            },\r\n                            newValues: datax\r\n                        }\r\n\r\n                        // console.log(data);\r\n                        //Call API ....\r\n\r\n                        contentEdit(data)\r\n                            .then(response => {\r\n                                // console.log('Success:', response.data);\r\n                                history.push('/cms/content');\r\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                        // console.log(data);\r\n\r\n                    })\r\n                }\r\n            }\r\n            else if (contentType === 'Pdf') {\r\n                if (typeof contents === 'string') {\r\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\r\n                } else {\r\n                    const pdf = toBase64(contents);\r\n                    pdf.then((hasil) => {\r\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\r\n                        let datax = {\r\n                            cobrandEmail,\r\n                            programId,\r\n                            contentName,\r\n                            contentDescription,\r\n                            contentType,\r\n                            contentSource,\r\n                            // contentThumbnail,\r\n                            contents,\r\n                            // status,\r\n                            startDate\r\n                        };\r\n\r\n                        let data = {\r\n                            whereValues: {\r\n                                _id\r\n                            },\r\n                            newValues: datax\r\n                        }\r\n\r\n                        // console.log(data);\r\n                        //Call API ....\r\n\r\n                        contentEdit(data)\r\n                            .then(response => {\r\n                                // console.log('Success:', response.data);\r\n                                history.push('/cms/content');\r\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                        // console.log(data);\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                contents = '<!DOCTYPE html>'\r\n                    + '<html lang=\"en\">'\r\n                    + '<head>'\r\n                    + '<meta charset=\"utf-8\">'\r\n                    + '<style>'\r\n                    + '#contents {'\r\n                    + 'overflow-y: scroll;'\r\n                    + 'text-align: justify;'\r\n                    + 'font-family: Arial, Helvetica, sans-serif;'\r\n                    + 'padding: 1%;'\r\n                    + '}'\r\n                    + '#contents li {'\r\n                    + 'margin-left: 5%;'\r\n                    + '}'\r\n                    + '</style>'\r\n                    + '</head>'\r\n                    + '<body>'\r\n                    + '<div id=\"contents\">'\r\n                    + contents\r\n                    + '</div>'\r\n                    + '</body>'\r\n                    + '</html>';\r\n            }\r\n\r\n            // console.log(contents);\r\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\r\n\r\n            let datax = {\r\n                cobrandEmail,\r\n                programId,\r\n                contentName,\r\n                contentDescription,\r\n                contentType,\r\n                contentSource,\r\n                // contentThumbnail,\r\n                contents,\r\n                // status,\r\n                startDate\r\n            };\r\n\r\n            let data = {\r\n                whereValues: {\r\n                    _id\r\n                },\r\n                newValues: datax\r\n            }\r\n\r\n            // console.log(data);\r\n            //Call API ....\r\n\r\n            contentEdit(data)\r\n                .then(response => {\r\n                    // console.log('Success:', response.data);\r\n                    history.push('/cms/content');\r\n                    dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil diubah.'));\r\n                    dispatch(loadingStop());\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error:', error);\r\n                    dispatch(alertError('Artikel \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                    dispatch(loadingStop());\r\n                });\r\n            // console.log(data);\r\n        // });\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        const deleting = {\r\n            whereValues: {\r\n                cobrandEmail: cobrandEmail,\r\n                _id: contentId[0]\r\n            }\r\n        }\r\n        contentDelete(deleting)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                dispatch(alertSuccess('Artikel \"' + contentId[1] + '\" berhasil dihapus.'));\r\n                dispatch(loadingStop());\r\n                retrieveList();\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                dispatch(alertError('Artikel \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n                retrieveList();\r\n            });\r\n    }\r\n}\r\n\r\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n\r\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\r\n\r\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\r\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\r\n        if (address) newValues = Object.assign(newValues, { address: address });\r\n        if (password) newValues = Object.assign(newValues, { password: password });\r\n\r\n        if (photo) {\r\n            const promise = toBase64(photo);\r\n            promise.then((result) => {\r\n                newValues = Object.assign(newValues, { thumbnail: result });\r\n                // console.log('whereValues: ', whereValues);\r\n                // console.log('newValues: ', newValues);\r\n                cobrandEdit(whereValues, newValues)\r\n                    .then(response => {\r\n                        // console.log('Success:', response.data);\r\n                        if (password) {\r\n                            // console.log('YOI BRUH');\r\n                            whereValues.password = password;\r\n                        }\r\n                        cobrandLogin(whereValues)\r\n                            .then(response2 => {\r\n                                // console.log('Success 2: ', response2.data);\r\n                                let loginData = response2.data;\r\n                                localStorage.removeItem('accessToken');\r\n                                localStorage.removeItem('userData');\r\n                                localStorage.setItem('accessToken', loginData.resultData.token);\r\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\r\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\r\n                                dispatch(loadingStop());\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\r\n                                dispatch(loadingStop());\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error:', error);\r\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\r\n                        dispatch(loadingStop());\r\n                    });\r\n            });\r\n        }\r\n        else {\r\n            // console.log('whereValues: ', whereValues);\r\n            // console.log('newValues: ', newValues);\r\n            cobrandEdit(whereValues, newValues)\r\n                .then(response => {\r\n                    // console.log('Success:', response.data);\r\n                    if (password) {\r\n                        // console.log('YOI BRUH');\r\n                        whereValues.password = password;\r\n                    }\r\n                    cobrandLogin(whereValues)\r\n                        .then(response2 => {\r\n                            // console.log('Success 2: ', response2.data);\r\n                            let loginData = response2.data;\r\n                            localStorage.setItem('accessToken', loginData.resultData.token);\r\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\r\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\r\n                            dispatch(loadingStop());\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error('Error:', error);\r\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\r\n                            dispatch(loadingStop());\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error:', error);\r\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\r\n                    dispatch(loadingStop());\r\n                });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let schedule = useSchedule ? scheduleTime : '';\r\n        let data = {\r\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        notificationAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/cms/notifications');\r\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const addAudience = (audianceName, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            audianceName,\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        audienceAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/setting/target-audience');\r\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const addNotifCategory = (category, description, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            category,\r\n            description\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        notifCategoryAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/setting/notification-category');\r\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const addProgCategory = (category, description, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            category,\r\n            description\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        programCategoryAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/setting/program-category');\r\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        adminAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/admin-staff');\r\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const editStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            whereValues: {\r\n                _id: localStorage.getItem('staffSelected')\r\n            },\r\n            newKeyValues: {\r\n                userName, password, userType, cobrandEmail, userLevel, emailUser, phone\r\n            }\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        adminEdit(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/admin-staff');\r\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil diubah.'));\r\n                dispatch(loadingStop());\r\n                localStorage.removeItem('staffSelected');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('User\"' + userName + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const deleteStaff = (cobrandEmail, staffId, retrieveList) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        const deleting = {\r\n            whereValues: {\r\n                _id: staffId[0]\r\n            }\r\n        }\r\n        adminDelete(deleting)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                dispatch(alertSuccess('User \"' + staffId[1] + '\" berhasil dihapus.'));\r\n                dispatch(loadingStop());\r\n                retrieveList();\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                dispatch(alertError('User \"' + staffId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n                retrieveList();\r\n            });\r\n    }\r\n}\r\n\r\nexport const addContentTopic = (topicName, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            topicName\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        contentTopicAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/setting/topic');\r\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            cobrandEmail, controlParameterName, controlParameterValue, unit\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        screenTimeAdd(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/tools/setting/screentime');\r\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n\r\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\r\n    return dispatch => {\r\n        dispatch(loadingStart());\r\n        dispatch({\r\n            type: ALERT_CLOSE\r\n        });\r\n        let data = {\r\n            whereValues: {emailUser: oldEmail},\r\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\r\n        };\r\n\r\n        // console.log(data);\r\n        //Call API ....\r\n\r\n        appUserEdit(data)\r\n            .then(response => {\r\n                // console.log('Success:', response.data);\r\n                history.push('/cms/user');\r\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\r\n                dispatch(loadingStop());\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\r\n                dispatch(loadingStop());\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n}\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useMemo, useEffect, Fragment } from 'react';\r\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\r\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\r\nimport './Table.scss';\r\n\r\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\r\n\r\n    const data = useMemo( () => DATA , [DATA])\r\n\r\n    const initialState = { hiddenColumns: ['_id'] };\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        rows,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        visibleColumns,\r\n        state: {pageIndex, pageSize, expanded},\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable({\r\n        columns: COLUMNS,\r\n        data: data,\r\n        initialState\r\n    }, useGlobalFilter\r\n    , useSortBy\r\n    , useExpanded\r\n    , usePagination)\r\n\r\n    const { globalFilter } = state;\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"utils\">\r\n            <div className=\"pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                {'<<'}\r\n                </button>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                {'<'}\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                {'>'}\r\n                </button>\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                {'>>'}\r\n                </button>\r\n                <span>\r\n                Page {' '}\r\n                <strong>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                </strong>\r\n                </span>\r\n                <span>\r\n                | Go to page:\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue={pageIndex + 1}\r\n                        onChange={e => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                            gotoPage(page)\r\n                        }}\r\n                    />\r\n                </span>\r\n                <select\r\n                value={pageSize}\r\n                onChange={e => {\r\n                    setPageSize(Number(e.target.value))\r\n                }}\r\n                >\r\n                {[10, 15, 20].map(pageSize => (\r\n                    <option key={pageSize} value={pageSize}>\r\n                        Show {pageSize}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"table_props\">\r\n                <span>Total: {rows.length} Data</span>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"table_props_input\"\r\n                    placeholder=\"Search\"\r\n                    value={ globalFilter || '' }\r\n                    onChange={(e) => {\r\n                        setGlobalFilter(e.currentTarget.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"table_container\">\r\n       <table {...getTableProps()}>\r\n           <thead>\r\n               {headerGroups.map(headerGroup => (\r\n                   <tr {...headerGroup.getHeaderGroupProps()}>\r\n                       {headerGroup.headers.map(column => (\r\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                               {column.render('Header')}\r\n                                <span>\r\n                                    {column.isSorted\r\n                                    ? column.isSortedDesc\r\n                                        ? (<BiCaretDown/>)\r\n                                        : (<BiCaretUp/>)\r\n                                    : ''}\r\n                                </span>\r\n                            </th>\r\n                       ))}\r\n                   </tr>\r\n               ))}\r\n           </thead>\r\n           <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <Fragment {...row.getRowProps()}>\r\n                            <tr>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\r\n                                })}\r\n                            </tr>\r\n                            {row.isExpanded ? (\r\n                                <tr>\r\n                                    <td colSpan={visibleColumns.length}>\r\n                                        {/*\r\n                                            Inside it, call our renderRowSubComponent function. In reality,\r\n                                            you could pass whatever you want as props to\r\n                                            a component like this, including the entire\r\n                                            table instance. But for this example, we'll just\r\n                                            pass the row\r\n                                            */}\r\n                                        {renderRowSubComponent({ row })}\r\n                                    </td>\r\n                                </tr>\r\n                            ) : null}\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n           </tbody>\r\n       </table>\r\n       </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst dateFormat = {\r\n    year: 'numeric', month: 'long', day: 'numeric'\r\n}\r\n\r\nconst Columns = (setStepDeleting, setWarning) => {\r\n    return [\r\n        // {\r\n        //     Header: 'Nomor',\r\n        //     accessor: 'index + 1'\r\n        // },\r\n    {\r\n        Header: 'ID Content',\r\n        accessor: '_id'\r\n    },\r\n    {\r\n        Header: 'No. Urut Tahap',\r\n        accessor: 'nomerUrutTahapan'\r\n    },\r\n    {\r\n        Header: 'Nama Tahap',\r\n        accessor: 'namaTahapan'\r\n    },\r\n    {\r\n        Header: 'Judul Tahap',\r\n        accessor: 'contentName'\r\n    },\r\n    // {\r\n    //     Header: 'Jenis Tahap',\r\n    //     accessor: 'contentType'\r\n    // },\r\n    // {\r\n    //     Header: 'Topik Artikel',\r\n    //     accessor: 'topics',\r\n    //     Cell: ({value}) => value.join(', ')\r\n    // },\r\n    // {\r\n    //     Header: 'Target Pembaca',\r\n    //     accessor: 'targetAudiance',\r\n    //     Cell: ({value}) => value.join(', ')\r\n    // },\r\n    // {\r\n    //     Header: 'Tanggal Mulai',\r\n    //     accessor: 'startDate',\r\n    //     Cell: ({value}) => (\r\n    //         <>\r\n    //             {value !== undefined ? new Date(value).toLocaleDateString(\"id-ID\", dateFormat) : ''}\r\n    //         </>\r\n    //     )\r\n    // },\r\n    // {\r\n    //     Header: 'Tanggal Berakhir',\r\n    //     accessor: 'endDate',\r\n    //     Cell: ({value}) => (\r\n    //         <>\r\n    //             {value !== undefined ? new Date(value).toLocaleDateString(\"id-ID\", dateFormat) : ''}\r\n    //         </>\r\n    //     )\r\n    // },\r\n    // {\r\n    //     Header: 'Status',\r\n    //     accessor: 'status',\r\n    //     Cell: ({ value }) => {\r\n    //         if(value === 'active') return <p style={{ color: 'green', fontWeight: 'bold' }}>{value}</p>\r\n    //         else return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\r\n    //     }\r\n    // },\r\n    {\r\n        Header: 'Action',\r\n        // accessor: '_id',\r\n        // disableSortBy: true,\r\n        // disableGlobalFilter: true,\r\n        Cell: ({cell}) => (\r\n            <>\r\n                <NavLink\r\n                    to=\"/cms/program/edit/step\"\r\n                    className=\"nav_btn\"\r\n                    title=\"Edit Tahap\"\r\n                    onClick={() => {\r\n                        localStorage.setItem('stepSelected', cell.row.values._id)\r\n                    }}\r\n                >\r\n                    <button \r\n                    className=\"btn_action\">\r\n                        <div>\r\n                            <FiEdit2 className=\"btn_action-icon\" />\r\n                        </div>\r\n                    </button>\r\n                </NavLink>\r\n                \r\n                <NavLink to=\"/cms/program/edit\"\r\n                    className=\"nav_btn\"\r\n                    title=\"Hapus Tahap\"\r\n                    onClick={() => {\r\n                        setStepDeleting([cell.row.values._id, cell.row.values.contentName]);\r\n                        setWarning(true);\r\n                        document.body.style.overflow = 'hidden';\r\n                    }}\r\n                    >\r\n                    <button\r\n                        className=\"btn_action\"\r\n                    >\r\n                        <div>\r\n                            <FiTrash2 className=\"btn_action-icon\" />\r\n                        </div>\r\n                    </button>\r\n                </NavLink>\r\n            </>\r\n        )\r\n    }\r\n]\r\n};\r\nexport default Columns;","import React, {useEffect, useState} from 'react';\r\nimport Heading from '../../../../components/UI/Heading/Heading';\r\nimport './EditProgram.scss';\r\nimport { Formik } from 'formik';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { editProgram } from '../../../../store/actions/dashboard';\r\nimport { getProgramCategoryList, getAudienceList, getContentList, getProgramList } from './../../../../components/API/filter'\r\nimport { contentDelete } from './../../../../components/API/dashboard'\r\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\r\nimport { connect } from 'react-redux';\r\nimport { validationProgramEdit } from '../../../../helpers/validation/validation';\r\nimport InputComponent from '../../../../components/UI/Input/Input';\r\nimport axios from 'axios';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport Warning from '../../../../components/UI/Warning/Warning'\r\n\r\nimport TableProgram from './../../../../components/UI/Table/Table';\r\nimport columns from './columns'\r\n\r\nimport Select from 'react-select';\r\n\r\nfunction EditProgram({\r\n    onEditProgram,\r\n    isLoading\r\n}) {\r\n\r\n    const [isPageLoading, setPageLoading] = useState(true);\r\n    const [program, setProgram] = useState();\r\n    const [programStartDate, setProgramStartDate] = useState();\r\n\r\n    const history = useHistory();\r\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).cobrandEmail;\r\n    const _id = localStorage.getItem('programSelected');\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [audience, setAudience] = useState([]);\r\n    const [steps, setSteps] = useState([]);\r\n    const [stepDeleting, setStepDeleting] = useState(null);\r\n    const [audienceVal, setAudienceVal] = useState([]);\r\n\r\n    const [showWarning, setShowWarning] = useState(false);\r\n    const [confirmDelete, setConfirmDelete] = useState(false);\r\n    // const [isStepAdded, setStepAdded] = useState(false);\r\n    // const [stepCount, setStepCount] = useState(0);\r\n    // const [responseCount, setResponseCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setPageLoading(true);\r\n        // console.log(_id);\r\n        if(_id) {\r\n            let paramTopic = {};\r\n            let paramAudience = {};\r\n            const params2 = {\r\n                whereKeyValues: {\r\n                    programId: _id\r\n                },\r\n                orderKeyValues: {\r\n                    nomerUrutTahapan: 1\r\n                },\r\n                includeContentData:false,\r\n                limit: Number.MAX_SAFE_INTEGER\r\n            };\r\n            const promiseTopic = getProgramCategoryList(paramTopic);\r\n            const promiseAudience = getAudienceList(paramAudience);\r\n            const promiseStep = getContentList(params2);\r\n\r\n            Promise.all([promiseTopic, promiseAudience, promiseStep]).then(responseAll => {\r\n                // console.log(responseAll[0]);\r\n                // console.log(responseAll[1]);\r\n                var topicRaw = [], audienceRaw = [];\r\n                responseAll[0].data.Data.map(e => {\r\n                    topicRaw.push(e.category);\r\n                })\r\n                responseAll[1].data.Data.map(e => {\r\n                    audienceRaw.push({value: e.audianceName, label: e.audianceName});\r\n                })\r\n                // console.log(\"Topic raw\", topicRaw);\r\n                // console.log(\"Audience raw\", audienceRaw);\r\n                setCategoryList(topicRaw);\r\n                setAudience(audienceRaw);\r\n                // console.log(\"This is \", responseAll[2]);\r\n                setSteps(responseAll[2].data.contents);\r\n                if(responseAll[2].data.contents.length > 0) {\r\n                    localStorage.setItem('responseCount', Object.keys(responseAll[2].data.contents[0].respons).length);\r\n                }\r\n                else localStorage.setItem('responseCount', 0);\r\n                localStorage.setItem('noUrutTahap', responseAll[2].data.contents.length);\r\n\r\n                const params = {\r\n                    whereKeyValues: {\r\n                        cobrandEmail: cobrandEmail,\r\n                        _id: _id\r\n                    }\r\n                };\r\n\r\n                getProgramList(params)\r\n                .then(response => {\r\n                    // console.log(\"Response data: \", response.data);\r\n                    setProgram(response.data.programs[0]);\r\n                    localStorage.setItem('programCategory', response.data.programs[0].category);\r\n                    localStorage.setItem('startDateProgram', response.data.programs[0].startDate);\r\n                    localStorage.setItem('endDateProgram', response.data.programs[0].endDate);\r\n                    var audienceValRaw = [];\r\n                    response.data.programs[0].targetAudiance.map(e => {\r\n                        audienceValRaw.push({value: e, label: e});\r\n                    })\r\n                    setAudienceVal(audienceValRaw);\r\n                    setPageLoading(false);\r\n                    \r\n                })\r\n                .catch(error => {\r\n                    // console.log(error);\r\n                    setPageLoading(false);\r\n                });\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(stepDeleting && confirmDelete) {\r\n            // console.log('yatta!')\r\n            // console.log('ini id step', stepDeleting[0]);\r\n            setPageLoading(true);\r\n            let param = {\r\n                whereValues: {\r\n                    _id: stepDeleting[0]\r\n                }\r\n            };\r\n            contentDelete(param)\r\n            .then(response => {\r\n                setStepDeleting(null);\r\n                setConfirmDelete(false);\r\n                // console.log('ini respon step deleting', response);\r\n                const params2 = {\r\n                    whereKeyValues: {\r\n                        programId: _id\r\n                    },\r\n                    orderKeyValues: {\r\n                        nomerUrutTahapan: 1\r\n                    }\r\n                };\r\n                getContentList(params2)\r\n                .then(res => {\r\n                    // console.log('ini respon ambil step', res);\r\n                    setSteps(res.data.contents);\r\n                    localStorage.setItem('noUrutTahap', res.data.contents.length);\r\n                    setPageLoading(false);\r\n                })\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n            })\r\n        }\r\n    }, [stepDeleting, confirmDelete]);\r\n\r\n    if(isPageLoading || isLoading) {\r\n        return <RKLoader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showWarning ? <Warning setDeleting={setStepDeleting} setConfirmDeleting={setConfirmDelete} setWarning={setShowWarning} message={\"Tahap\"}/> : null}\r\n            <Heading headingName=\"Program\" routes={[\r\n                { path: '/cms/program', name: 'Program' },\r\n                { path: '/cms/program/edit', name: 'Ubah Program Terpilih' }\r\n            ]} />\r\n            <Formik\r\n                initialValues= {{\r\n                    programName: program.programName,\r\n                    programDescription: program.ProgramDescription,\r\n                    startDate: program.startDate.split('T')[0],\r\n                    endDate: program.endDate.split('T')[0],\r\n                    category: program.category,\r\n                    targetAudiance: program.targetAudiance\r\n                }}\r\n                validationSchema = {validationProgramEdit}\r\n                validateOnChange = {true}\r\n                onSubmit = { values => {\r\n                    onEditProgram( _id, cobrandEmail, values.programName, values.programDescription, values.startDate, values.endDate, values.category, values.targetAudiance, history)\r\n                }}\r\n            >\r\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"EditProgram\">\r\n                        <h1>Ubah Program Terpilih: {program.programName}</h1>\r\n                        <div className=\"form-group\">\r\n                            <label>Judul</label>\r\n                            <InputComponent \r\n                                type=\"text\"\r\n                                name=\"programName\"\r\n                                className=\"form-group__input form-group__input--fullwidth\" \r\n                                placeholder=\"Example\"\r\n                                value={values.programName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Kategori Program</label>\r\n                            <select\r\n                                name=\"category\"\r\n                                value={values.category}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {\r\n                                    categoryList.map((category) => {\r\n                                        return (\r\n                                            <option value={category}>{category}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Target Pembaca</label>\r\n                            <Select\r\n                                isMulti\r\n                                value={audienceVal}\r\n                                onChange={(e) => {\r\n                                    setFieldValue(\"targetAudiance\", e)\r\n                                }}\r\n                                name=\"targetAudience\"\r\n                                options={audience}\r\n                                className=\"basic-multi-select\"\r\n                                classNamePrefix=\"select\"\r\n                            />\r\n                            {touched.targetAudiance && <span className=\"message__error\">{errors.targetAudiance}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Deskripsi</label>\r\n                            <InputComponent\r\n                                type=\"textarea\"\r\n                                name=\"programDescription\"\r\n                                placeholder=\"Type Something...\"\r\n                                value={values.programDescription}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                            {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\r\n                        </div>\r\n                        {/*<div className=\"form-group\">\r\n                            <label>New Photo (Optional)</label>\r\n                            <InputComponent\r\n                                type=\"file\"\r\n                                className=\"form-group__input\"\r\n                                name=\"programThumbnailEdit\"\r\n                                onChange={(e) => {\r\n                                    let file = e.currentTarget.files[0];\r\n                                    if(file) {\r\n                                        // console.log(\"File to upload: \", file);\r\n                                        setFieldValue(\"programThumbnailEdit\", file);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <span className=\"message__error\">{errors.programThumbnailEdit}</span>\r\n                        </div>*/}\r\n                        <div className=\"form-group-row\">\r\n                            <div className=\"form-group\">\r\n                                <label>Tanggal Mulai</label>\r\n                                <InputComponent\r\n                                    type=\"date\"\r\n                                    className=\"form-group__input\"\r\n                                    name=\"startDate\"\r\n                                    value={values.startDate}\r\n                                    min={\"2020-01-01\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\r\n                            </div>\r\n                            {/* end date */}\r\n                            <div className=\"form-group\">\r\n                                <label>Tanggal Selesai</label>\r\n                                <InputComponent\r\n                                    type=\"date\"\r\n                                    className=\"form-group__input\"\r\n                                    name=\"endDate\"\r\n                                    value={values.endDate}\r\n                                    min={values.startDate}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                                {touched.endDate && <span className=\"message__error\">{errors.endDate}</span>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"Program__table\">\r\n                                <TableProgram \r\n                                    COLUMNS={columns(setStepDeleting, setShowWarning)} \r\n                                    DATA={steps}  \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <NavLink id=\"add_program\" to=\"/cms/program/edit/add-step\">\r\n                            <FiPlus className=\"IconAdd\" />\r\n                            <span>Tambah Tahap Program</span>  \r\n                        </NavLink>\r\n                        <div>\r\n                            <button className=\"btn btn-submit\" type=\"submit\" onClick={() => {\r\n                                if(Object.keys(errors).length > 0) alert('Ada kolom yang belum diisi. Silakan cek kembali.');\r\n                            }}>\r\n                                Update Program\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n            </Formik>\r\n            {/* {console.log(isLoading)} */}\r\n            {isLoading ? <RKLoader/> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // console.log(state.auth.isLoading);\r\n    return {\r\n        isLoading: state.auth.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onEditProgram: ( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, endDate, category, targetAudiance, history ) =>\r\n            dispatch(editProgram( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, endDate, category, targetAudiance, history ))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (EditProgram)","import React, {useState} from 'react';\r\nimport './Warning.scss';\r\nimport { FiAlertTriangle } from 'react-icons/fi';\r\n\r\nfunction Warning({setDeleting = null, setConfirmDeleting, setWarning, message}) {\r\n\r\n    return (\r\n        <div key={message} className=\"warning\">\r\n            <div className=\"warning-content\">\r\n                <div className=\"warning-content-header\">\r\n                    <h2>Konfirmasi Penghapusan</h2>\r\n                </div>\r\n                <div className=\"warning-content-body\">\r\n                    <FiAlertTriangle className=\"warning-content-body-icon\"/>\r\n                    <div className=\"warning-content-body-message\">\r\n                        <p>Apakah Anda yakin ingin menghapus {message} ini?</p>\r\n                        <div className=\"warning-content-body-message-button\">\r\n                            <div className=\"warning-content-body-message-button-delete\"><button onClick={() => {\r\n                                setConfirmDeleting(true);\r\n                                setWarning(false);\r\n                                document.body.style.overflow = 'unset';\r\n                            }}>Hapus</button></div>\r\n                            <div className=\"warning-content-body-message-button-cancel\"><button onClick={() => {\r\n                                if(setDeleting) setDeleting(null);\r\n                                setWarning(false);\r\n                                document.body.style.overflow = 'unset';\r\n                            }}>Jangan Hapus</button></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Warning;","import axios from \"axios\";\r\nimport url from \"./urlApi\"\r\n\r\nexport const programAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/programAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const programAddv2 = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/v2-programAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n\r\nexport const programEdit = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/programUpdate',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport const programDelete = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/programRemove',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const contentAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/contentAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const contentAddAsync = async (query) => await axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/contentAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const contentEdit = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/contentUpdate',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const contentDelete = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/contentRemove',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const notificationAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/broadcastAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const audienceAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/audianceTargetAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const notifCategoryAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/notificationCategoryAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const programCategoryAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/programCategoryAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const contentTopicAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/contentTopicAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const adminAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/userAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const adminEdit = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/userUpdate',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const adminDelete = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cms/userRemove',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const screenTimeAdd = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/cobrand/configurationAdd',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const appUserEdit = (query) => axios({\r\n    method: 'post',\r\n    url: url + '/user/edit',\r\n    data: query,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Heading.scss';\r\n\r\nfunction Heading({ headingName, routes = [] }) {\r\n    \r\n    return (\r\n        <div className=\"Heading\">\r\n            <h1>{headingName}</h1>\r\n            <ul className=\"Heading__breadcumb\">\r\n                {routes.length > 0 && routes.map((item, i) => {\r\n                    if(item.path){\r\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\r\n                    }else{\r\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\r\n                    }\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n"],"sourceRoot":""}