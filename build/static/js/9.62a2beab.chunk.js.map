{"version":3,"sources":["containers/CoBrand/Program/components/Columns.js","containers/CoBrand/Program/Program.js","components/UI/Table/Table.js"],"names":["Columns","Header","accessor","Cell","value","style","color","fontWeight","row","className","onClick","console","log","Program","useState","to","type","placeholder","Table","COLUMNS","columns","DATA","Data","data","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps"],"mappings":"mkEAqDeA,EAnDC,CACZ,CACIC,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,eACRC,SAAU,gBAEd,CACID,OAAQ,SACRC,SAAU,SACVC,KAAM,YAAe,IAAZC,EAAW,EAAXA,MAEL,OAAO,mBAAGC,MAAO,CAAEC,MAAO,QAASC,WAAY,QAAxC,SAAmDH,MAGlE,CACIH,OAAQ,SACRE,KAAM,SAACK,GAAD,OACF,qCACI,wBACIC,UAAU,aACVC,QAAS,kBAAMC,QAAQC,IAAIJ,IAF/B,SAGI,8BACI,cAAC,IAAD,CAAOC,UAAU,wBAGzB,wBACIA,UAAU,aADd,SAGI,8BACI,cAAC,IAAD,CAASA,UAAU,wBAG3B,wBACIA,UAAU,aADd,SAGI,8BACI,cAAC,IAAD,CAAUA,UAAU,8B,gBCW7BI,UA9Cf,WACI,MAAkCC,oBAAS,GAA3C,mBAQA,OARA,UASI,sBAAKL,UAAU,UAAf,UAEI,yCACA,eAAC,IAAD,CAASM,GAAG,eAAZ,UACI,cAAC,IAAD,CAAQN,UAAU,YACnB,yDAEH,sBAAKA,UAAU,iBAAf,UACI,uBACIO,KAAK,OACLP,UAAU,wBACVQ,YAAY,WAEhB,cAACC,EAAA,EAAD,CACIC,QAASC,EACTC,KAAMC,Y,yECWXJ,IA1Cf,YAAmC,IAAlBG,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,QAEbI,EAAOC,mBAAS,kBAAMH,IAAO,CAACA,IAEpC,EAMII,mBAAS,CACTL,QAASD,EACTI,KAAMA,IAPNG,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,KACAC,EALJ,EAKIA,WAMJ,OACG,kDAAWJ,KAAX,cACI,gCACKE,EAAaG,KAAI,SAAAC,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3B,+CAAQA,EAAOC,kBAAf,kBAAmCD,EAAOE,OAAO,UAAjD,mBAKhB,iDAAWV,KAAX,aACME,EAAKE,KAAI,SAACvB,EAAK8B,GAEZ,OADAR,EAAWtB,GAEP,8CAAQA,EAAI+B,eAAZ,aACK/B,EAAIgC,MAAMT,KAAI,SAAAU,GACX,OAAO,+CAAQA,EAAKC,gBAAb,kBAA+BD,EAAKJ,OAAO,QAA3C,0B","file":"static/js/9.62a2beab.chunk.js","sourcesContent":["import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst Columns = [\n    {\n        Header: 'Category',\n        accessor: 'category'\n    },\n    {\n        Header: 'Title',\n        accessor: 'title'\n    },\n    {\n        Header: 'Created Date',\n        accessor: 'created_date'\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ value}) => {\n            \n            return <p style={{ color: 'green', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n    {\n        Header: 'Action',\n        Cell: (row) => (\n            <>\n                <button \n                    className=\"btn_action\"\n                    onClick={() => console.log(row)}>\n                    <div>\n                        <FiEye className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiEdit2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiTrash2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n            </>\n        )\n    }\n]\n\nexport default Columns;","import  { useState } from 'react';\nimport './Program.scss';\nimport TableProgram from './../../../components/UI/Table/Table';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\n\n// import Modal from '../../../components/UI/Modal/Modal';\n\nfunction Program() {\n    const [showModal, setShowModal] = useState(false);\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n\n    return (\n        <div className=\"Program\">\n         \n            <h1>PROGRAM</h1>\n            <NavLink to=\"/program/add\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Create New Program</span>  \n            </NavLink>\n            <div className=\"Program__table\">\n                <input \n                    type=\"text\" \n                    className=\"Program__table__input\" \n                    placeholder=\"Search\"\n                />\n                <TableProgram \n                    COLUMNS={columns} \n                    DATA={Data}  \n                />\n            </div>\n\n            {/* <button \n                onClick={() => setShowModal(true)}>\n                Show Modal\n            </button> */}\n            \n            {/* <Modal \n                isShow={showModal}\n                onClose={() => setShowModal(false)} \n                onSubmit={submitModal}\n                title=\"Modal Title\"\n            >\n                <p>Hello Worlds</p>\n            </Modal> */}\n        </div>\n    )\n}\n\nexport default Program\n","import React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    })\n\n    return (\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps()}> {column.render('Header')} </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                            })}\n                        </tr>\n                    )\n                })}\n           </tbody>\n       </table>\n    )\n}\n\nexport default Table\n"],"sourceRoot":""}