{"version":3,"sources":["components/UI/Heading/Heading.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Table/Table.js","containers/CoBrand/Report/ControllingStatus/columns.js","containers/CoBrand/Report/ControllingStatus/ControllingStatus.js","components/API/filter.js"],"names":["Heading","headingName","routes","className","length","map","item","i","path","exact","to","name","RKLoader","text","Table","DATA","COLUMNS","renderRowSubComponent","data","useMemo","useTable","columns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","onClick","disabled","type","defaultValue","onChange","e","target","value","Number","placeholder","currentTarget","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","Columns","options","filter","customBodyRender","meta","rowIndex","setCellProps","style","minWidth","maxWidth","setCellHeaderProps","label","sort","tableMeta","updateValue","console","log","StudyLevel","ControllingStatus","useState","isLoading","setLoading","userData","setUserData","useEffect","params","whereKeyValues","packageId","userType","orderKeyValues","nameUser","limit","MAX_SAFE_INTEGER","localStorage","getItem","JSON","parse","getUserList","then","response","users","catch","error","filterType","selectableRows","responsive","getProgramList","query","axios","method","url","getContentList","getRedzoneList"],"mappings":"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","file":"static/js/25.cf4b578e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","//import { Link } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap'\n\n\nconst Columns = [\n    {\n        name: 'No.',\n        options: {\n            filter: false,\n            customBodyRender: (value, meta) => {\n                return (\n                    meta.rowIndex + 1\n                );\n            },\n            setCellProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n            setCellHeaderProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n        }\n    },\n    {\n        label: 'Nama',\n        name: 'nameUser',\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        label: 'Nama Orangtua',\n        name: 'parentName',\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        label: 'Sekolah',\n        name: 'childInfo.schoolName',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        label: 'Pendidikan',\n        name: 'childInfo',\n        options: {\n            filter: true,\n            sort: true,\n            customBodyRender: (value, tableMeta, updateValue) => {\n                console.log(value);\n                if(value != null) return value.StudyLevel;\n                else return ' '\n            },\n\n            setCellProps: () => ({ style: { minWidth: \"100px\", maxWidth: \"100px\" }}),\n            setCellHeaderProps: () => ({ style: { minWidth: \"100px\", maxWidth: \"100px\" }}),\n        }\n    },\n    {\n        label: 'Screen Time Status',\n        name:'screenTimeStatus',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        label: 'Status Mode Asuh',\n        name:'modeAsuh',\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        label: 'Aplikasi yang Diblokir',\n        name: 'blockedApps',\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        label: 'Aplikasi yang Dibatasi',\n        name: 'limitedApps',\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        label: 'Status Jadwal Penggunaan',\n        name: 'usageScheduleStatus',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    // {\n    //     label: 'Tgl. Registrasi',\n    //     name: 'dateCreated',\n    //     Cell: ({ value }) => {\n    //         return <p>{value.split('T')[0]}</p>\n    //     }\n    // },\n];\n\nexport default Columns;","import React, { useState, useEffect, useCallback } from 'react';\nimport TablePengguna from '../../../../components/UI/Table/Table';\nimport columns from './columns';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader.js';\nimport './ControllingStatus.scss';\nimport { getUserList, getAppUsageList } from '../../../../components/API/filter.js'\nimport MUIDataTable from \"mui-datatables\";\n\nconst ControllingStatus = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [userData, setUserData] = useState();\n    const [usageData, setUsageData] = useState();\n\n    const options = {\n        filterType: \"dropdown\",\n        selectableRows: false,\n        responsive: \"scroll\",\n    };\n\n    useEffect(() => {\n        let params={\n            whereKeyValues: {\n                packageId: \"com.byasia.ruangortu\",\n                userType: \"child\"\n            },\n            orderKeyValues: {\n                nameUser: 1\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        console.log(localStorage.getItem('userFilter'));\n        if(localStorage.getItem('userFilter')) params.whereKeyValues = JSON.parse(localStorage.getItem('userFilter'));\n        console.log(params);\n        getUserList(params)\n        .then(response => {\n            console.log(response.data);\n            setUserData(response.data.users);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        })\n    }, []);\n\n    if(isLoading) {\n        return <RKLoader />;\n    }\n    return (\n        <div className=\"Controlling\">\n            <Heading\n                headingName=\"Controlling Status\"\n                routes={[\n                    { name: 'Report', path: '/report/controlling-status' },\n                    { name: 'Controlling Status' }\n                ]}\n            />\n            {/* <div className=\"Pengguna_table\">\n                <TablePengguna\n                    COLUMNS={columns}\n                    DATA={userData}\n                />\n            </div> */}\n            <MUIDataTable\n                data={userData}\n                columns={columns}\n                options={options}\n            />\n        </div>\n    )\n}\n\nexport default ControllingStatus;\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});"],"sourceRoot":""}