{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","containers/CoBrand/Program/AddProgram/AddProgram.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","validationProgramEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","emailUser","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","programEdit","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","connect","state","auth","isLoading","onAddProgram","useHistory","parse","getItem","useState","isPageLoading","setPageLoading","categoryList","setCategoryList","audience","setAudience","isStepAdded","setStepAdded","responseCount","setResponseCount","useEffect","promiseTopic","promiseAudience","Promise","all","responseAll","topicRaw","audienceRaw","Data","label","headingName","routes","path","initialValues","Date","toISOString","split","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","isMulti","options","classNamePrefix","file","currentTarget","files","content","stepErrors","stepTouched","editorState","artikel","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","onClick","for","contentMedia","reader","FileReader","readAsDataURL","onloadend","base64data","res","index","conProg","splice","newResponse","newStep","EditorState","createEmpty","steps","Heading","item","exact","to"],"mappings":"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","file":"static/js/35.19b08e52.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddProgram.scss';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { getProgramCategoryList, getAudienceList } from './../../../../components/API/filter'\nimport { addProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgram } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\n\nimport { ContentState, Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, convertFromRaw, current } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { stateToHTML } from 'draft-js-export-html'\n\nimport Select from 'react-select';\n\nfunction AddProgram({\n    onAddProgram,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [categoryList, setCategoryList] = useState([]);\n    const [audience, setAudience] = useState([]);\n    const [isStepAdded, setStepAdded] = useState(false);\n    const [stepCount, setStepCount] = useState(0);\n    const [responseCount, setResponseCount] = useState(1);\n\n    useEffect(() => {\n        let paramTopic = {};\n        let paramAudience = {};\n        const promiseTopic = getProgramCategoryList(paramTopic);\n        const promiseAudience = getAudienceList(paramAudience);\n\n        Promise.all([promiseTopic, promiseAudience]).then(responseAll => {\n            console.log(responseAll[0]);\n            console.log(responseAll[1]);\n            var topicRaw = [], audienceRaw = [];\n            responseAll[0].data.Data.map(e => {\n                topicRaw.push(e.category);\n            })\n            responseAll[1].data.Data.map(e => {\n                audienceRaw.push({value: e.audianceName, label: e.audianceName});\n            })\n            console.log(\"Topic raw\", topicRaw);\n            console.log(\"Audience raw\", audienceRaw);\n            setCategoryList(topicRaw);\n            setAudience(audienceRaw);\n            setPageLoading(false);\n        })\n    }, [])\n\n    if(isLoading || isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/cms/program', name: 'Program' },\n                { path: '/cms/program/add', name: 'Buat Program Baru' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: '',\n                    programDescription: '',\n                    programThumbnail: '',\n                    startDate: new Date().toISOString().split('T')[0],\n                    endDate: new Date().toISOString().split('T')[0],\n                    category: categoryList[0],\n                    targetAudiance: [],\n                    contentPrograms: []\n                }}\n                validationSchema = {validationProgram}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddProgram( cobrandEmail, values.programName, values.programDescription, values.programThumbnail, values.startDate, values.endDate, values.category, values.targetAudiance, values.contentPrograms, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddProgram\">\n                        <h1>Buat Program Baru</h1>\n                        <div className=\"form-group\">\n                            <label>Judul</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Kategori Program</label>\n                            <select\n                                name=\"category\"\n                                value={values.category}\n                                onChange={handleChange}\n                            >\n                                {\n                                    categoryList.map((category) => {\n                                        return (\n                                            <option value={category}>{category}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Target Pembaca</label>\n                            <Select\n                                isMulti\n                                value={values.targetAudiance}\n                                onChange={(e) => {\n                                    setFieldValue(\"targetAudiance\", e)\n                                }}\n                                name=\"targetAudience\"\n                                options={audience}\n                                className=\"basic-multi-select\"\n                                classNamePrefix=\"select\"\n                            />\n                            {touched.targetAudiance && <span className=\"message__error\">{errors.targetAudiance}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Deskripsi</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                           {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Thumbnail</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnail\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnail\", file);\n                                    }\n                                }}\n                            />\n                            { touched.programThumbnail && <span className=\"message__error\">{errors.programThumbnail}</span> }\n                        </div>\n                        <div className=\"form-group-row\">\n                            <div className=\"form-group\">\n                                <label>Tanggal Mulai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={new Date().toISOString().split('T')[0]}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div>\n                            {/* end date */}\n                            <div className=\"form-group\">\n                                <label>Tanggal Selesai</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"endDate\"\n                                    value={values.endDate}\n                                    min={values.startDate}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.endDate && <span className=\"message__error\">{errors.endDate}</span>}\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>{\"Jumlah Respon (Jawaban) di Setiap Tahap\"}</label>\n                            <InputComponent \n                                type=\"number\"\n                                className=\"form-group__input\"\n                                value={responseCount}\n                                min={1}\n                                onChange={(e) => {\n                                    console.log(e.currentTarget.value);\n                                    setResponseCount(e.currentTarget.value)\n                                }}\n                                disabled={isStepAdded}\n                            />\n                        </div>\n                        {values.contentPrograms.map((content, i) => {\n                            const stepErrors = errors.contentPrograms?.length && errors.contentPrograms[i] || {};\n                            const stepTouched = touched.contentPrograms?.length && touched.contentPrograms[i] || {};\n                            return (\n                                <div className=\"steps\">\n                                    <h2>Tahap {i+1}</h2>\n                                    <div className=\"form-group\">\n                                        <label>Nama Tahap</label>\n                                        <InputComponent\n                                            type=\"text\"\n                                            name=\"namaTahapan\"\n                                            className=\"form-group__input form-group__input--fullwidth\"\n                                            placeholder=\"Example\"\n                                            value={content.namaTahapan}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.namaTahapan`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                        {stepTouched.namaTahapan && <span className=\"message__error\">{stepErrors.namaTahapan}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Tipe Tahap</label>\n                                        <select\n                                            name=\"contentType\"\n                                            value={content.contentType}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.contentType`, e.currentTarget.value);\n                                                setFieldValue(`contentPrograms.${i}.contents`, '');\n                                            }}\n                                        >\n                                            <option value=\"Artikel\">Artikel</option>\n                                            <option value=\"Image\">Image</option>\n                                            <option value=\"Video\">Video</option>\n                                            <option value=\"Pdf\">File Pdf</option>\n                                        </select>\n                                    </div>\n                                    \n                                    <div className=\"form-group\">\n                                        <label>Judul Tahap</label>\n                                        <InputComponent\n                                            type=\"text\"\n                                            name=\"contentName\"\n                                            className=\"form-group__input form-group__input--fullwidth\"\n                                            placeholder=\"Example\"\n                                            value={content.contentName}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.contentName`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                        {stepTouched.contentName && <span className=\"message__error\">{stepErrors.contentName}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Isi Tahap</label>\n                                        {content.contentType === \"Artikel\" ? (\n                                            <Editor\n                                                editorState={content.artikel}\n                                                toolbarClassName=\"toolbarClassName\"\n                                                wrapperClassName=\"wrapperClassName\"\n                                                editorClassName=\"editorClassName\"\n                                                onEditorStateChange={(editorState) => setFieldValue(`contentPrograms.${i}.artikel`, editorState)}\n                                                // onEditorStateChange={updateTextDescription}\n                                                // value={description.values}\n                                                value={draftToHtml(convertToRaw(content.artikel.getCurrentContent()))}\n                                                // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                                name=\"contents\"\n                                                onChange={() => {\n                                                    // setTextValue(editorState);\n                                                    // setFieldValue(\"contentDescription\", description);\n                                                    setFieldValue(`contentPrograms.${i}.contents`, draftToHtml(convertToRaw(content.artikel.getCurrentContent())));\n                                                    // console.log(textDeskripsi);\n                                                    // console.log(values.contents)\n                                                }}\n\n                                            />\n                                        ) : null}\n                                        {content.contentType === \"Image\" ? (\n                                            <div>\n                                                <p>Pilih media yang ingin di upload :</p>\n                                                <form>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                        onClick={() => { setFieldValue(`contentPrograms.${i}.contentMedia`, 'internal') }}\n                                                    />\n                                                    <label for=\"internal\" >Media Internal Komputer</label>\n                                                    <br></br>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                        onClick={() => setFieldValue(`contentPrograms.${i}.contentMedia`, 'url')}\n                                                    />\n                                                    <label for=\"url\" >Alamat URL</label>\n                                                    <br></br>\n                                                </form>\n\n                                                {content.contentMedia === 'internal' ?\n                                                    <InputComponent\n                                                        type=\"file\"\n                                                        className=\"form-group__input\"\n                                                        name=\"contents\"\n                                                        onBlur={handleBlur}\n                                                        onChange={(e) => {\n                                                            let file = e.currentTarget.files[0];\n                                                            if (file) {\n                                                                const reader = new FileReader();\n                                                                reader.readAsDataURL(file);\n                                                                reader.onloadend = function() {\n                                                                    var base64data = reader.result;                \n                                                                    setFieldValue(`contentPrograms.${i}.contents`, base64data);\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                    :\n                                                    <InputComponent\n                                                        type=\"text\"\n                                                        name=\"contents\"\n                                                        className=\"form-group__input form-group__input--fullwidth\"\n                                                        placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                                        value={content.contents}\n                                                        onChange={(e) => {\n                                                            setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                }\n\n                                            </div>\n\n                                        ) : null}\n                                        {content.contentType === \"Video\" ?\n                                            <InputComponent\n                                                type=\"text\"\n                                                name=\"contents\"\n                                                className=\"form-group__input form-group__input--fullwidth\"\n                                                placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                                value={content.contents}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            : null}\n                                        {content.contentType === \"Pdf\" ? (\n                                            <div>\n                                                <p>Pilih media yang ingin di upload :</p>\n                                                <form>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                        onClick={() => { setFieldValue(`contentPrograms.${i}.contentMedia`, 'internal') }}\n                                                    />\n                                                    <label for=\"internal\" >Media Internal - Maks 300kb</label>\n                                                    <br></br>\n                                                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                        onClick={() => setFieldValue(`contentPrograms.${i}.contentMedia`, 'url')}\n                                                    />\n                                                    <label for=\"url\" >Alamat URL</label>\n                                                    <br></br>\n                                                </form>\n\n                                                {content.contentMedia === 'internal' ?\n                                                    <InputComponent\n                                                        type=\"file\"\n                                                        className=\"form-group__input\"\n                                                        name=\"contents\"\n                                                        onBlur={handleBlur}\n                                                        //   value={values.contents}\n                                                        //   onChange={handleChange}\n                                                        onChange={(e) => {\n                                                            let file = e.currentTarget.files[0];\n                                                            if (file) {\n                                                                const reader = new FileReader();\n                                                                reader.readAsDataURL(file);\n                                                                reader.onloadend = function() {\n                                                                    var base64data = reader.result;                \n                                                                    setFieldValue(`contentPrograms.${i}.contents`, base64data);\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                    :\n                                                    <InputComponent\n                                                        type=\"text\"\n                                                        name=\"contents\"\n                                                        className=\"form-group__input form-group__input--fullwidth\"\n                                                        placeholder=\"Type Pdf URL... (Pdf file)\"\n                                                        value={content.contents}\n                                                        onChange={(e) => {\n                                                            setFieldValue(`contentPrograms.${i}.contents`, e.currentTarget.value);\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                }\n                                            </div>\n\n                                        ) : null}\n                                        {stepTouched.contents && <span className=\"message__error\">{stepErrors.contents}</span>}\n                                    </div>\n                                    <div className=\"form-group\">\n                                    <label>Respon</label>\n                                    {content.response.map((res, index) => {\n                                        console.log(\"Content response:\", content.response)\n                                        return <InputComponent\n                                            type=\"text\"\n                                            name=\"response\"\n                                            className=\"form-group__input form-group__input--halfwidth\"\n                                            placeholder=\"Example\"\n                                            value={res}\n                                            onChange={(e) => {\n                                                setFieldValue(`contentPrograms.${i}.response.${index}`, e.currentTarget.value);\n                                            }}\n                                            onBlur={handleBlur}\n                                        />\n                                    })}\n                                    </div>\n                                    <div className=\"form-group-row\">\n                                        <div className=\"form-group\">\n                                            <label>Tanggal Mulai</label>\n                                            <InputComponent\n                                                type=\"date\"\n                                                className=\"form-group__input\"\n                                                name=\"startDate\"\n                                                value={content.startDate}\n                                                min={new Date().toISOString().split('T')[0]}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.startDate`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            {stepTouched.startDate && <span className=\"message__error\">{stepErrors.startDate}</span>}\n                                        </div>\n                                        {/* end date */}\n                                        <div className=\"form-group\">\n                                            <label>Tanggal Selesai</label>\n                                            <InputComponent\n                                                type=\"date\"\n                                                className=\"form-group__input\"\n                                                name=\"endDate\"\n                                                value={content.endDate}\n                                                min={content.startDate}\n                                                onChange={(e) => {\n                                                    setFieldValue(`contentPrograms.${i}.endDate`, e.currentTarget.value);\n                                                }}\n                                                onBlur={handleBlur}\n                                            />\n                                            {stepTouched.endDate && <span className=\"message__error\">{stepErrors.endDate}</span>}\n                                        </div>\n                                    </div>\n                                    <button id=\"add_program\" type=\"button\" onClick={() => {\n                                        let conProg = values.contentPrograms;\n                                        conProg.splice(i, 1);\n                                        if(conProg.length < 1) setStepAdded(false); \n                                        setFieldValue('contentPrograms', conProg);\n                                    }}>\n                                        <FiMinus className=\"IconDelete\" />\n                                        <span>Hapus Tahap Ini</span>  \n                                    </button>\n                                </div>\n                            )\n                        })}\n                        <button id=\"add_program\" type=\"button\" onClick={() => {\n                            if(!isStepAdded) setStepAdded(true);\n                            var newResponse = [];\n                            for(var x = 0; x < responseCount; x++) {\n                                newResponse.push('');\n                            }\n                            console.log(\"New response\", newResponse);\n                            let newStep = {\n                                artikel: EditorState.createEmpty(),\n                                contentMedia: 'url',\n\n                                nomerUrutTahapan: values.contentPrograms.length + 1,\n                                namaTahapan: '',\n                                contentName: '',\n                                contentType: 'Artikel',\n                                contentSource: '',\n                                contents: '',\n                                startDate: values.startDate,\n                                endDate: values.endDate,\n                                topics: [],\n                                targetAudiance: [],\n                                response: newResponse\n                            }\n                            let steps = values.contentPrograms;\n                            steps.push(newStep);\n                            setFieldValue(\"contentPrograms\", steps);\n                        }}>\n                            <FiPlus className=\"IconAdd\" />\n                            <span>Tambah Tahap Program</span>  \n                        </button>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\" onClick={() => {\n                                console.log(\"Touched\", touched);\n                                console.log(\"Error\", errors)\n                            }}>\n                                Buat Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddProgram: ( cobrandEmail, programName, programDescription, programThumbnail, startDate, endDate, category, targetAudiance, contentPrograms, history ) =>\n            dispatch(addProgram( cobrandEmail, programName, programDescription, programThumbnail, startDate, endDate, category, targetAudiance, contentPrograms, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProgram)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}