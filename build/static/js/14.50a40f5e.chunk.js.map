{"version":3,"sources":["containers/CoBrand/Content/components/Columns.js","containers/CoBrand/Content/Content.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Table/Table.js"],"names":["dateFormat","year","month","day","Columns","Header","accessor","Cell","cell","Date","row","values","startDate","toLocaleDateString","disableSortBy","disableFilters","to","className","title","onClick","localStorage","setItem","_id","window","location","reload","replace","Content","useState","isLoading","setLoading","contentList","setContentList","userData","JSON","parse","getItem","params","whereKeyValues","cobrandEmail","email","useEffect","retrieveList","axios","method","url","data","headers","then","response","console","log","contents","catch","error","deleting","whereValues","removeItem","RKLoader","id","Table","COLUMNS","columns","DATA","text","useMemo","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","type","placeholder","value","onChange","e","currentTarget","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","getCellProps"],"mappings":"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","file":"static/js/14.50a40f5e.chunk.js","sourcesContent":["import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom'\n\n\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = [\n    {\n        Header: 'Category',\n        accessor: 'contentType'\n    },\n    {\n        Header: 'Title',\n        accessor: 'contentName'\n    },\n    {\n        Header: 'Start Date',\n        accessor: 'startDate',\n        Cell: ({cell}) => (\n            <>\n                {new Date(cell.row.values.startDate).toLocaleDateString(\"en-UK\", dateFormat)}\n            </>\n        )\n    },\n    {\n        Header: 'Status',\n        accessor: 'status'\n    },\n    {\n        Header: 'Action',\n        accessor: '_id',\n        disableSortBy: true,\n        disableFilters: true,\n        Cell: ({cell}) => (\n            <>\n                <NavLink\n                    to=\"/content/view/\"\n                    className=\"nav_btn\"\n                    title=\"View Detail\"\n                    onClick={() => {\n                        localStorage.setItem('contentSelected', cell.row.values._id)\n                    }}\n                >\n                <button \n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiEye className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                </NavLink>\n                <NavLink\n                    to=\"/content/edit\"\n                    className=\"nav_btn\"\n                    title=\"Edit Content\"\n                    onClick={() => {\n                        localStorage.setItem('contentSelected', cell.row.values._id)\n                    }}\n                >\n                    <button \n                    className=\"btn_action\">\n                        <div>\n                            <FiEdit2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n                \n                <NavLink to=\"/content\"\n                    className=\"nav_btn\"\n                    title=\"Delete Content\"\n                    onClick={() => {\n                        localStorage.setItem('contentDeleting', cell.row.values._id);\n                        window.location.reload();\n                    }}\n                    replace>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiTrash2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n            </>\n        )\n    }\n];\n\nexport default Columns;","import React from 'react';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport TableContent from './../../../components/UI/Table/Table';\nimport './Content.scss';\nimport { FiPlus } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\n\n\nfunction Content() {\n    const [isLoading, setLoading] = useState(true);\n    const [contentList, setContentList] = useState();\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    //FOR LATER USE\n    /*const [program, setProgram] = useState();\n    if(localStorage.getItem('programForContent')) {\n\n        console.log(localStorage.getItem('programForContent'));\n        const userData = JSON.parse(localStorage.getItem('userData'));\n        const programData = JSON.parse(localStorage.getItem('programForContent'));\n        const params = {\n            whereKeyValues: {\n                cobrandEmail: userData.email,\n                programName: programData.programName\n            }\n        };\n        \n        useEffect(() => {\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setProgram(response.data.programs[0]);\n                console.log(\"This is \", program);\n        \n                const contentParams = {\n                    whereKeyValues: {\n                        programId: response.data.programs[0]\n                    }\n                }\n        \n                return (\n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentFilter',\n                        data: contentParams,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                    .then(response => {\n                        console.log(\"Content list: \", response.data);\n                        setContentList(response.data.contents);\n                        setLoading(false);\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setLoading(false);\n                    })\n                )\n        \n            })\n            .catch(error => {\n                console.log(error);\n            });\n        }, []);\n    //}*/\n\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.email\n        }\n    };\n    \n    useEffect(() => {\n        setLoading(true);\n        function retrieveList() {\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Content list: \", response.data);\n                setContentList(response.data.contents);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.log(error);\n                setLoading(false);\n            });\n        }\n        if(localStorage.getItem('contentDeleting')) {\n            const deleting = {\n                whereValues: {\n                    cobrandEmail: userData.email,\n                    _id: localStorage.getItem('contentDeleting')\n                }\n            }\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentRemove',\n                data: deleting,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(response.data);\n                localStorage.removeItem('contentDeleting');\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                localStorage.removeItem('contentDeleting');\n                retrieveList();\n            });\n        }\n        else retrieveList();\n        localStorage.removeItem('contentDeleting');\n    }, []);\n\n\n    if(isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"Content\">\n            <h1>CONTENT</h1>\n            <NavLink to=\"/content/add\" id=\"add_content\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Create New Content</span>  \n            </NavLink>\n            <div className=\"Content__table\">\n                <TableContent COLUMNS={columns} DATA={contentList}  />\n            </div>\n            {\n            /*<div className=\"ProgramPreview\">\n                <img src={program.programthumnail}/>\n            </div>*/\n            }\n        </div>\n    )\n}\n\nexport default Content\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Keluarga HKBP</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React, { useMemo } from 'react';\nimport { useGlobalFilter, useSortBy, useTable } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }\n    , useGlobalFilter\n    , useSortBy)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <input \n            type=\"text\" \n            placeholder=\"Search\"\n            className=\"tableInput\"\n            value={ globalFilter || '' }\n            onChange={(e) => {\n                setGlobalFilter(e.currentTarget.value);\n            }}\n        />\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                           </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                            })}\n                        </tr>\n                    )\n                })}\n           </tbody>\n       </table>\n       </>\n    )\n}\n\nexport default Table\n"],"sourceRoot":""}