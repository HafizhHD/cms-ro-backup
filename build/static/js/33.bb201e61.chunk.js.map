{"version":3,"sources":["components/API/filter.js","components/UI/Table/TableFilter.js","components/UI/Table/TableWithFilter.js","containers/CoBrand/Dashboard/columns.js","containers/CoBrand/Dashboard/component/StackedChart.js","containers/CoBrand/Dashboard/component/BarChart.js","containers/CoBrand/Dashboard/component/DonutChart.js","containers/CoBrand/Dashboard/Dashboard.js","components/UI/RKLoaderSpinner/RKLoader.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","length","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","values","has","add","map","option","i","NumberRangeColumnFilter","min","max","Math","style","display","type","val","old","parseInt","width","marginRight","marginLeft","DateRangeColumnFilter","Date","console","log","toISOString","slice","fuzzyTextFilterFn","rows","matchSorter","keys","dateBetweenFilterFn","filterValues","sd","ed","filter","r","time","autoRemove","TableWithFilter","DATA","COLUMNS","renderRowSubComponent","showCheckbox","notifContext","filterTypes","fuzzyText","dateBetween","text","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","useTable","columns","initialState","hiddenColumns","useFilters","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","selectedRowIds","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","downloadAsCSV","currentRecords","data_to_download","record_to_download","cells","colIndex","Object","prototype","toString","call","isNaN","split","className","currentTarget","onClick","dataRaw","doc","jsPDF","setFontSize","content","startY","head","body","autoTable","save","to","localStorage","setItem","getItem","stringEmail","jsonData","original","emailUser","userType","includes","JSON","stringify","parentEmail","some","disabled","defaultValue","Number","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cell","getCellProps","Array","isArray","isExpanded","colSpan","Columns","accessor","disableFilters","color","fontWeight","StackedChart","props","useState","series","colors","chart","height","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","position","offsetX","offsetY","plotOptions","bar","horizontal","xaxis","categories","label","decimalsInFloat","yaxis","labels","formatter","toFixed","fill","opacity","subsState","borderRadius","dataLabels","DonutChart","pie","donut","total","showAlways","tooltip","custom","seriesIndex","w","dataPointIndex","selected","config","Dashboard","isLoading","setLoading","isLoadingSpinner","setLoadingSpinner","localData","parse","absStart","today","period","setPeriod","startDate","setStartDate","endDate","setEndDate","userData","setUserData","countUser","setCountUser","conProgData","setConProgData","userDataLabel","setUserDataLabel","topUsageData","setTopUsageData","topUsageLabel","setTopUsageLabel","notifData","setNotifData","notifLabel","setNotifLabel","topicCountLabel","setTopicCountLabel","topicCountData","setTopicCountData","topicViewLabel","setTopicViewLabel","topicViewData","setTopicViewData","usageStudyLevelData","setUsageStudyLevelData","setColors","topUsageLabelDummy","notifLabelDummy","topicLabelDummy","userDummy","name","conProgDummy","topUsageDummy","notifDummy","topicCountDummy","topicViewDummy","usageStudyLevelDummy","tk","smp","sma","parent","coparent","countingUser","paramUser","whereKeyValues","packageId","dateCreated","orderKeyValues","nameUser","limit","MAX_SAFE_INTEGER","paramContent","cobrandEmail","email","status","contentName","includeContentData","paramProgram","programName","includeThumbnailData","paramUsage","dateCreate","paramNotification","scheduleTime","paramNotificationCategory","promiseUser","promiseContent","promiseProgram","promiseUsage","promiseNotification","promiseNotificationCategory","Promise","all","then","responseAll","dataUser","users","x","childInfo","StudyLevel","userDataObj","contentLength","contents","programLength","programs","usageData","appUsages","usageLabel","usageFreq","j","y","usageHour","appName","indexOf","list","sort","a","b","age","k","notifCat","notifDat","Data","category","resultData","retrieveData","changedStartDate","changedEndDate","setDate","getDate","setTimeout","RKLoader","Heading","headingName","href","BarChart","routes","item","path","exact"],"mappings":"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","file":"static/js/33.bb201e61.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React from 'react'\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// A great library for fuzzy filtering/sorting items\nimport {matchSorter} from 'match-sorter'\n\nexport function GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n      setGlobalFilter(value || undefined)\n    }, 200)\n  \n    return (\n      <span>\n        Search:{' '}\n        <input\n          value={value || \"\"}\n          onChange={e => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n          style={{\n            fontSize: '1.1rem',\n            border: '0',\n          }}\n        />\n      </span>\n    )\n  }\n  \n  // Define a default UI for filtering\n  export function DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n  }) {\n    const count = preFilteredRows.length\n  \n    return (\n      <input\n        value={filterValue || ''}\n        onChange={e => {\n          setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search...`}\n      />\n    )\n  }\n  \n  // This is a custom filter UI for selecting\n  // a unique option from a list\n  export function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set()\n      preFilteredRows.forEach(row => {\n        if(row.values[id] !== undefined && !options.has(row.values[id])) options.add(row.values[id])\n      })\n      return [...options.values()]\n    }, [id, preFilteredRows])\n  \n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined)\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    )\n  }\n  \n  // This is a custom filter UI that uses a\n  // slider to set the filter value between a column's\n  // min and max values\n  export function SliderColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the min and max\n    // using the preFilteredRows\n  \n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <>\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          value={filterValue || min}\n          onChange={e => {\n            setFilter(parseInt(e.target.value, 10))\n          }}\n        />\n        <button onClick={() => setFilter(undefined)}>Off</button>\n      </>\n    )\n  }\n  \n  // This is a custom UI for our 'between' or number range\n  // filter. It uses two number boxes and filters rows to\n  // ones that have values between the two\n  export function NumberRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id },\n  }) {\n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <input\n          value={filterValue[0] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n          }}\n          min={min}\n          placeholder={`Min (${min})`}\n          style={{\n            width: '70px',\n            marginRight: '0.5rem',\n          }}\n        />\n        to\n        <input\n          value={filterValue[1] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n          }}\n          min={min}\n          placeholder={`Max (${max})`}\n          style={{\n            width: '70px',\n            marginLeft: '0.5rem',\n          }}\n        />\n      </div>\n    )\n  }\n\n  export function DateRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id }}) \n  {\n    const [min, max] = React.useMemo(() => {\n        let min = new Date('2020-01-01')\n        let max = new Date('2099-12-31')\n        preFilteredRows.forEach(row => {\n            min = row.values[id] ? new Date(row.values[id]) <= min ? new Date(row.values[id]) : min : min\n            max = row.values[id] ? new Date(row.values[id]) >= max ? new Date(row.values[id]) : max : max\n        });\n        return [min, max];\n    }, [id, preFilteredRows]);\n    console.log(min, max)\n    return (\n        <div\n            style={{\n                display: \"flex\"\n            }}\n        >\n            <input\n                value={filterValue[0] || min.toISOString().slice(0, 10)}\n                type=\"date\"\n                min={min.toISOString().slice(0, 10)}\n                max={filterValue[1] || max.toISOString().slice(0, 10)}\n                onChange={e => {\n                    const val = e.target.value;\n                    console.log(e.target.value);\n                    setFilter((old = []) => [val ? (val) : undefined, old[1]]);\n                }}\n                style={{\n                    width: \"130px\",\n                    marginRight: \"0.2rem\"\n                }}\n            />\n            to\n      <input\n                value={filterValue[1] || max.toISOString().slice(0, 10)}\n                type=\"date\"\n                min={filterValue[0] || min.toISOString().slice(0, 10)}\n                max={max.toISOString().slice(0, 10)}\n                onChange={e => {\n                    const val = e.target.value;\n                    setFilter((old = []) => [old[0], val ? (val) : undefined]);\n                }}\n                style={{\n                    width: \"130px\",\n                    marginLeft: \"0.2rem\"\n                }}\n            />\n        </div>\n    );\n}\n\n  export function filterGreaterThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue >= filterValue\n    })\n  }\n\n  export function filterLessThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue <= filterValue\n    })\n  }\n  \n  export function fuzzyTextFilterFn(rows, id, filterValue) {\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n  }\n  \n  // Let the table remove the filter if the string is empty\n  fuzzyTextFilterFn.autoRemove = val => !val\n\n  export function dateBetweenFilterFn(rows, id, filterValues) {\n    let sd = new Date(filterValues[0]);\n    let ed = new Date(filterValues[1]);\n    console.log(rows, id, filterValues)\n    return rows.filter(r => {\n        var time = new Date(r.values[id]);\n        console.log(time, ed, sd)\n        if (filterValues.length === 0) return rows;\n        return (time >= sd && time <= ed);\n    });\n}\n\ndateBetweenFilterFn.autoRemove = val => !val;\n  ","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter, useFilters, useRowSelect } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\nimport { DefaultColumnFilter, fuzzyTextFilterFn, dateBetweenFilterFn } from './TableFilter'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nimport { FaFilePdf, FaTable, FaBell } from \"react-icons/fa\";\n\nfunction TableWithFilter({ DATA, COLUMNS, renderRowSubComponent, showCheckbox = false, notifContext = '' }) {\n    const filterTypes = React.useMemo(\n        () => ({\n          // Add a new fuzzyTextFilterFn filter type.\n          fuzzyText: fuzzyTextFilterFn,\n          dateBetween: dateBetweenFilterFn,\n          // Or, override the default text filter to use\n          // \"startWith\"\n          text: (rows, id, filterValue) => {\n            return rows.filter(row => {\n              const rowValue = row.values[id]\n              return rowValue !== undefined\n                ? String(rowValue)\n                    .toLowerCase()\n                    .startsWith(String(filterValue).toLowerCase())\n                : true\n            })\n          },\n        }),\n        []\n      )\n    \n      const defaultColumn = React.useMemo(\n        () => ({\n          // Let's set up our default Filter UI\n          Filter: DefaultColumnFilter,\n        }),\n        []\n      )\n\n      const IndeterminateCheckbox = React.forwardRef(\n        ({ indeterminate, ...rest }, ref) => {\n          const defaultRef = React.useRef()\n          const resolvedRef = ref || defaultRef\n      \n          React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n          }, [resolvedRef, indeterminate])\n      \n          return (\n            <>\n              <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n          )\n        }\n      )\n\n    const data = useMemo( () => DATA , [DATA]);\n\n    const initialState = { hiddenColumns: ['emailUser', 'parentEmail', '_id'] };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        selectedFlatRows,\n        state: { selectedRowIds },\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        defaultColumn, // Be sure to pass the defaultColumn option\n        filterTypes,\n        initialState\n    }, useFilters\n    , useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination\n    , useRowSelect\n    , hooks => {\n        if(showCheckbox) hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n      })\n\n    const { globalFilter } = state;\n\n    const downloadAsCSV = () => {\n        const currentRecords = rows;\n        console.log(currentRecords);\n        var data_to_download = [];\n        for (var i = 0; i < currentRecords.length; i++) {\n            let record_to_download = {};\n            prepareRow(currentRecords[i]);\n            console.log(currentRecords[i].cells);\n            for (var colIndex = 0; colIndex < currentRecords[i].cells.length; colIndex++) {\n                if(currentRecords[i].cells[colIndex].column.id !== 'rowNumber' &&\n                currentRecords[i].cells[colIndex].column.id !== 'selection' &&\n                currentRecords[i].cells[colIndex].column.id !== 'buttonStatus') {\n                    if(currentRecords[i].cells[colIndex].value && Object.prototype.toString.call(currentRecords[i].cells[colIndex].value) === \"[object Date]\" && !isNaN(currentRecords[i].cells[colIndex].value))\n                        record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                        currentRecords[i].cells[colIndex].value.toISOString().split('T')[0];\n                    else record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                        currentRecords[i].cells[colIndex].value;\n                }\n            }\n            data_to_download.push(record_to_download);\n        }\n        return data_to_download;\n    }\n\n    const downloadAsPDF = () => {\n        const dataRaw = downloadAsCSV();\n        if(dataRaw.length > 0) {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(15);\n\n            const title = \"Report\";\n            const headers = [Object.keys(dataRaw[0])];\n\n            const data = dataRaw.map(e => Object.values(e));\n\n            let content = {\n                startY: 50,\n                head: headers,\n                body: data\n            };\n\n            doc.text(title, marginLeft, 40);\n            doc.autoTable(content);\n            doc.save(\"report.pdf\");\n        }\n    }\n\n    return (\n        <>\n        <div className=\"tools\">\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n            <button className=\"btn_tools\"><FaTable/> <CSVLink data={downloadAsCSV()}>Download as CSV</CSVLink></button>\n            <button className=\"btn_tools\" onClick={downloadAsPDF}><FaFilePdf/> Download as PDF</button>\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = [];\n                    console.log(selectedFlatRows);\n                    var jsonData = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        if(selectedFlatRows[i].original.userType === 'child') {\n                            if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        }\n                        console.log(stringEmail);\n                        jsonData.push(selectedFlatRows[i].original);\n                    }\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\n                    console.log(localStorage.getItem('jsonData'));\n                    localStorage.setItem('emailTo', stringEmail.toString());\n                    console.log(localStorage.getItem('emailTo'));\n                    localStorage.setItem('selectedUserType', 'child');\n                }}>Send Notifications to Child</NavLink></button>\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to Child</span></button> : null}\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = [];\n                    console.log(selectedFlatRows);\n                    var jsonData = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        if(selectedFlatRows[i].original.parentEmail !== undefined) {\n                            if(!stringEmail.some(r => selectedFlatRows[i].original.parentEmail.includes(r))) {\n                                if(selectedFlatRows[i].original.userType === 'child') stringEmail.push(...selectedFlatRows[i].original.parentEmail);\n                                else stringEmail.push(selectedFlatRows[i].original.emailUser);\n                            }\n                        }\n                        console.log(stringEmail);\n                        jsonData.push(selectedFlatRows[i].original);\n                    }\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\n                    console.log(localStorage.getItem('jsonData'));\n                    localStorage.setItem('emailTo', stringEmail.toString());\n                    console.log(localStorage.getItem('emailTo'));\n                    localStorage.setItem('selectedUserType', 'parent');\n                }}>Send Notifications to Parent</NavLink></button>\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to Parent</span></button> : null}\n            {showCheckbox ? selectedFlatRows.length > 0 ? (<button className=\"btn_tools\"><FaBell/><NavLink to='/cms/notifications/add' className=\"btn_tools\" onClick={() => {\n                    localStorage.setItem('notifContext', notifContext);\n                    console.log(localStorage.getItem('notifContext'));\n                    var stringEmail = [];\n                    console.log(selectedFlatRows);\n                    var jsonData = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        if(selectedFlatRows[i].original.parentEmail !== undefined) {\n                            if(!stringEmail.some(r => selectedFlatRows[i].original.parentEmail.includes(r))) stringEmail.push(selectedFlatRows[i].original.parentEmail);\n                        }\n                        console.log(stringEmail);\n                        jsonData.push(selectedFlatRows[i].original);\n                    }\n                    localStorage.setItem('jsonData', JSON.stringify(jsonData));\n                    console.log(localStorage.getItem('jsonData'));\n                    localStorage.setItem('emailTo', stringEmail.toString());\n                    console.log(localStorage.getItem('emailTo'));\n                    localStorage.setItem('selectedUserType', 'all');\n                }}>Send Notifications to All</NavLink></button>\n             ) : <button className=\"btn_tools_disabled\"><FaBell/><span className=\"btn_tools_disabled\">Send Notifications to All</span></button> : null}\n        </div>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <>\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n                   <tr>\n                        {headerGroup.headers.map(column => (\n                            <th>{column.canFilter ? column.render('Filter') : null}</th>\n                        ))}\n                   </tr>\n                   </>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    console.log(cell);\n                                    return <td {...cell.getCellProps()} className={(cell.value && !Array.isArray(cell.value)) || (Array.isArray(cell.value) && cell.value.length > 0) || cell.column.id === 'selection'\n                                    || cell.column.id === 'rowNumber' ? \"cell\" : \"cell\"}> {cell.column.id !== 'rowNumber' ? \n                                         cell.render('Cell')\n                                        : i + 1 + (pageIndex * pageSize)} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default TableWithFilter\n","\n\nconst Columns = [\n    {\n        Header: 'Pendidikan',\n        accessor: 'studyLevel',\n        disableFilters: true\n    },\n    {\n        Header: 'Jumlah Anak',\n        accessor: 'totalChild',\n        disableFilters: true\n    },\n    {\n        Header: 'Jumlah Anak Pemakaian Anak Tak Wajar',\n        accessor: 'totalChildOver',\n        disableFilters: true,\n        Cell: ({value}) => {\n            return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n\n    {\n        Header: 'Rata-Rata Waktu Pemakaian',\n        accessor: 'avgChildOver',\n        disableFilters: true,\n        Cell: ({value}) => {\n            return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n\n    {\n        Header: 'Standar Waktu Pemakaian Wajar',\n        accessor: 'standardUsage',\n        disableFilters: true\n    },\n\n    {\n        Header: 'Jumlah Anak Pemakaian Anak Wajar',\n        accessor: 'totalChildUnder',\n        disableFilters: true,\n        Cell: ({value}) => {\n            return <p style={{ color: 'blue', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n    {\n        Header: 'Rata-Rata Waktu Pemakaian',\n        accessor: 'avgChildUnder',\n        disableFilters: true,\n        Cell: ({value}) => {\n            return <p style={{ color: 'blue', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n];\n\n// const Columns = [\n//     {\n//         name: 'No.',\n//         options: {\n//             filter: false,\n//             customBodyRender: (value, meta) => {\n//                 return (\n//                     meta.rowIndex + 1\n//                 );\n//             },\n//             setCellProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n//             setCellHeaderProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n//         }\n//     },\n//     {\n//         label: 'Nama',\n//         name: 'nameUser',\n//         options: {\n//             filter: false,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Nama Orangtua',\n//         name: 'parentName',\n//         options: {\n//             filter: false,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Sekolah',\n//         name: 'childInfo.schoolName',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Pendidikan',\n//         name: 'childInfo',\n//         options: {\n//             filter: true,\n//             sort: true,\n//             customBodyRender: (value, tableMeta, updateValue) => {\n//                 console.log(value);\n//                 if(value != null) return value.StudyLevel;\n//                 else return ' '\n//             },\n\n//             setCellProps: () => ({ style: { minWidth: \"100px\", maxWidth: \"100px\" }}),\n//             setCellHeaderProps: () => ({ style: { minWidth: \"100px\", maxWidth: \"100px\" }}),\n//         }\n//     },\n//     {\n//         label: 'Screen Time Status',\n//         name:'screenTimeStatus',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Status Mode Asuh',\n//         name:'modeAsuh',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     {\n//         label: 'Aplikasi yang Diblokir',\n//         name: 'blockedApps',\n//         options: {\n//             filter: true,\n//             sort: true,\n//             filterType: 'textField'\n//         }\n//     },\n//     {\n//         label: 'Aplikasi yang Dibatasi',\n//         name: 'limitedApps',\n//         options: {\n//             filter: true,\n//             sort: true,\n//             filterType: 'textField'\n//         }\n//     },\n//     {\n//         label: 'Status Jadwal Penggunaan',\n//         name: 'usageScheduleStatus',\n//         options: {\n//             filter: true,\n//             sort: true,\n//         }\n//     },\n//     // {\n//     //     label: 'Tgl. Registrasi',\n//     //     name: 'dateCreated',\n//     //     Cell: ({ value }) => {\n//     //         return <p>{value.split('T')[0]}</p>\n//     //     }\n//     // },\n// ];\n\nexport default Columns;","import React, { useState } from 'react';\nimport ApexCharts from 'react-apexcharts';\n\nconst StackedChart = (props) => {\n\n    const [subsState] = useState({\n        series: props.data,\n        options: {\n            colors: props.colors,\n            chart: {\n                type: \"bar\",\n                height: props.height,\n                stacked: true,\n                toolbar: {\n                    show: true\n                },\n                zoom: {\n                    enabled: true\n                }\n            },\n            responsive: [\n                {\n                    breakpoint: 480,\n                    options: {\n                        legend: {\n                        position: \"bottom\",\n                        offsetX: -10,\n                        offsetY: 0\n                        }\n                    }\n                }\n            ],\n            plotOptions: {\n                bar: {\n                    horizontal: false\n                }\n            },\n            xaxis: {\n                type: \"category\",\n                categories: props.label,\n                decimalsInFloat: 0\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function(val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            legend: {\n                position: \"bottom\",\n                offsetX: -10\n            },\n            fill: {\n                opacity: 1\n            }\n        }\n    });\n\n    if(props.data.length === 0) return <h2>No Data</h2>\n    return <ApexCharts options={subsState.options} series={subsState.series} type={subsState.options.chart.type} height={subsState.options.chart.height} />\n}\n\nexport default StackedChart;\n","import React, { useState } from 'react';\nimport ApexCharts from 'react-apexcharts';\n\nconst StackedChart = (props) => {\n\n    const [subsState] = useState({\n        series: props.data,\n        options: {\n            chart: {\n              type: 'bar',\n              height: props.height,\n              toolbar: {\n                show: true\n              },\n              zoom: {\n                  enabled: true\n              }\n            },\n            plotOptions: {\n              bar: {\n                borderRadius: 4,\n                horizontal: true,\n              }\n            },\n            dataLabels: {\n              style: {\n                colors: ['#DDDDDD']\n              }\n            },\n            xaxis: {\n                categories: props.label\n            },\n        }\n    });\n\n    if(props.data.length === 0) return <h2>No Data</h2>\n    return <ApexCharts options={subsState.options} series={subsState.series} type={subsState.options.chart.type} height={subsState.options.chart.height} />\n}\n\nexport default StackedChart;\n","import React, { useState } from 'react';\nimport ApexCharts from 'react-apexcharts';\n\nconst DonutChart = (props) => {\n\n    const [subsState] = useState({\n        series: props.data,\n        options: {\n            colors: props.colors,\n            chart: {\n                width: props.width,\n                type: 'donut',\n                toolbar: {\n                  show: true\n                },\n            },\n            plotOptions: {\n                pie: {\n                    donut: {\n                        labels: {\n                            show: true,\n                            total: {\n                                showAlways: true,\n                                show: true\n                            }\n                        }\n                    }\n                }\n            },\n            labels: props.label,\n            tooltip: {\n                enabled: true,\n                custom: ({ series, seriesIndex, dataPointIndex, w }) => {\n                    let total = 0;\n                    for (let x of series) { total += x; }\n                    let selected = series[seriesIndex];\n                    return '<div style=\"color:white;padding:5px;background-color:' + props.colors[seriesIndex] + ';font-weight:bold\" >' + w.config.labels[seriesIndex] + \": \" + selected + \" (\" + (selected / total * 100).toFixed(1) + \"%)\" + '</div>';\n                }\n            },\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n          \n          \n        \n    });\n\n    if(props.data.length === 0) return <h2>No Data</h2>\n    return <ApexCharts options={subsState.options} series={subsState.series} type={subsState.options.chart.type} />\n}\n\nexport default DonutChart;\n","import React, {useState, useEffect} from 'react';\nimport './Dashboard.scss';\nimport Table from './../../../components/UI/Table/TableWithFilter'\nimport { FiArrowRightCircle, FiAlertCircle } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport axios from 'axios';\nimport columns from'./columns';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport RKLoaderSpinner from '../../../components/UI/RKLoaderSpinner/RKLoader';\nimport { useHistory } from 'react-router';\nimport { getContentList, getProgramList, getUserList, getAppUsageList, getNotificationCategoryList, getNotificationList } from '../../../components/API/filter';\nimport {FaWhatsapp} from 'react-icons/fa'\n\nimport StackedChart from './component/StackedChart'\nimport BarChart from './component/BarChart'\nimport DonutChart from './component/DonutChart'\n\nfunction Dashboard() {\n\n    const [isLoading, setLoading] = useState(true);\n    const [isLoadingSpinner, setLoadingSpinner] = useState(false);\n\n    const localData = JSON.parse(localStorage.getItem('userData'));\n\n    const absStart = new Date(\"2021-01-01\");\n    const today = new Date();\n\n    const [period, setPeriod] = useState('today');\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [userData, setUserData] = useState([]);\n    const [countUser, setCountUser] = useState([0,0,0]);\n    const [conProgData, setConProgData] = useState([]);\n    const [userDataLabel, setUserDataLabel] = useState([\"Orang tua: 0\", \"Anak: 0\"]);\n    const conProgDataLabel = [\"Artikel\", \"Program\"];\n    const [topUsageData, setTopUsageData] = useState([]);\n    const [topUsageLabel, setTopUsageLabel] = useState([]);\n    const [notifData, setNotifData] = useState([]);\n    const [notifLabel, setNotifLabel] = useState([]);\n    const [topicCountLabel, setTopicCountLabel] = useState([]);\n    const [topicCountData, setTopicCountData] = useState([]);\n    const [topicViewLabel, setTopicViewLabel] = useState([]);\n    const [topicViewData, setTopicViewData] = useState([]);\n    const [usageStudyLevelData, setUsageStudyLevelData] = useState([]);\n    const [colors, setColors] = useState([]);\n\n    const topUsageLabelDummy = [\"Youtube\", \"Google\", \"Facebook\", \"Twitter\", \"Chrome\", \"Telegram\", \"TikTok\", \"Mobile Legends\", \"Chess\", \"Minecraft\"];\n    const notifLabelDummy = [\"Pembayaran\", \"Pemberitahuan\", \"Promosi\", \"Laporan\"];\n    const topicLabelDummy = [\"Agama\", \"Pendidikan\", \"Kesehatan\", \"Keluarga\", \"Berita Internal\", \"Berita Nasional\", \"Berita Dunia\", \"Informasi Teknologi\", \"Olah Raga\", \"Umum\"];\n    \n    const userDummy = [\n        {\n            name: \"TK\",\n            data: [0, 12]\n        },\n        {\n            name: \"SD\",\n            data: [0, 50]\n        },\n        {\n            name: \"SMP\",\n            data: [0, 121]\n        },\n        {\n            name: \"SMA\",\n            data: [0, 68]\n        },\n        {\n            name: \"Parent\",\n            data: [250, 0]\n        },\n        {\n            name: \"Co-Parent\",\n            data: [99, 0]\n        }\n    ];\n    const conProgDummy = [{data: [200, 50]}];\n    const topUsageDummy = [500000, 153258, 67384, 53321, 39212, 19030, 4239, 3990, 3218, 1089];\n    const notifDummy = [{data:[100, 231, 8 ,300]}];\n    const topicCountDummy = [{data: [20,\n        230,\n        87,\n        121,\n        66,\n        34,\n        22,\n        312,\n        97,\n        38]}];\n    const topicViewDummy = [{data:[23000,\n        18000,\n        10000,\n        9500,\n        8700,\n        6000,\n        4000,\n        21500,\n        4200,\n        1200]}];\n\n    function retrieveDummy() {\n        setCountUser([500, 349, 151]);\n        setUserDataLabel(['Orang tua: 349', 'Anak: 151']);\n        setUserData(userDummy);\n        setConProgData(conProgDummy);\n        setTopUsageLabel(topUsageLabelDummy);\n        setTopUsageData(topUsageDummy);\n        setNotifLabel(notifLabelDummy);\n        setNotifData(notifDummy);\n        setTopicCountLabel(topicLabelDummy);\n        setTopicCountData(topicCountDummy);\n        setTopicViewLabel(topicLabelDummy);\n        setTopicViewData(topicViewDummy);\n        setUsageStudyLevelData(usageStudyLevelDummy);\n        setLoadingSpinner(false);\n        setTimeout(() => {setLoading(true)},50);\n        setTimeout(() => {setLoading(false)}, 80);\n    }\n\n    const usageStudyLevelDummy = [\n        {\"studyLevel\": 'SD', \"totalChild\": 50, \"totalChildOver\": 35, \"avgChildOver\": 14, \"standardUsage\": 10, \"totalChildUnder\": 15, \"avgChildUnder\": 8},\n        {\"studyLevel\": 'SMP', \"totalChild\": 121, \"totalChildOver\": 108, \"avgChildOver\": 16, \"standardUsage\": 12, \"totalChildUnder\": 13, \"avgChildUnder\": 11},\n        {\"studyLevel\": 'SMA', \"totalChild\": 68, \"totalChildOver\": 54, \"avgChildOver\": 15, \"standardUsage\": 14, \"totalChildUnder\": 14, \"avgChildUnder\": 10},\n    ]\n    \n\n    function retrieveData() {\n        var tk = [0,0],\n        sd = [0, 0],\n        smp = [0,0],\n        sma = [0,0],\n        parent = [0,0],\n        coparent = [0,0];\n\n        var countingUser = [0,0,0];\n\n        let paramUser = {\n            whereKeyValues: {\n                packageId: \"com.byasia.ruangortu\",\n                dateCreated: {\n                    \"$gte\": startDate.toISOString().split('T')[0],\n                    \"$lte\": endDate.toISOString().split('T')[0]\n                }\n            },\n            orderKeyValues: {\n                nameUser: 1\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        }\n\n        let paramContent = {\n            whereKeyValues: {\n                cobrandEmail: localData.email,\n                status: {\"$in\" : [\"active\", \"inactive\"]},\n                dateCreated: {\n                    \"$gte\": startDate.toISOString().split('T')[0],\n                    \"$lte\": endDate.toISOString().split('T')[0]\n                }\n            },\n            orderKeyValues: {\n                contentName: 1\n            },\n            includeContentData: false,\n            limit: Number.MAX_SAFE_INTEGER\n        }\n\n        let paramProgram = {\n            whereKeyValues: {\n                cobrandEmail: localData.email,\n                dateCreated: {\n                    \"$gte\": startDate.toISOString().split('T')[0],\n                    \"$lte\": endDate.toISOString().split('T')[0]\n                }\n            },\n            orderKeyValues: {\n                programName: 1\n            },\n            includeThumbnailData: false,\n            limit: Number.MAX_SAFE_INTEGER\n        }\n\n        let paramUsage = {\n            whereKeyValues: {\n                dateCreate: {\n                    \"$gte\": startDate.toISOString().split('T')[0],\n                    \"$lte\": endDate.toISOString().split('T')[0]\n                }\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        }\n\n        let paramNotification = {\n            whereKeyValues: {\n                scheduleTime: {\n                    \"$gte\": startDate.toISOString().split('T')[0],\n                    \"$lte\": endDate.toISOString().split('T')[0]\n                }\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        }\n\n        let paramNotificationCategory = {\n            limit: Number.MAX_SAFE_INTEGER\n        }\n\n        const promiseUser = getUserList(paramUser);\n        const promiseContent = getContentList(paramContent);\n        const promiseProgram = getProgramList(paramProgram);\n        const promiseUsage = getAppUsageList(paramUsage);\n        const promiseNotification = getNotificationList(paramNotification);\n        const promiseNotificationCategory = getNotificationCategoryList(paramNotificationCategory);\n\n        Promise.all([promiseUser, promiseContent, promiseProgram, promiseUsage, promiseNotification, promiseNotificationCategory]).then(responseAll => {\n            console.log(responseAll[0]);\n            const dataUser = responseAll[0].data.users;\n            countingUser[0] = dataUser.length;\n            // console.log(dataUser);\n            for(var i = 0; i < dataUser.length; i++) {\n                let x = dataUser[i];\n                if(x.userType === 'parent') {\n                    countingUser[1]++;\n                    // console.log(\"Parent email: \" + x.parentEmail);\n                    if(x.parentEmail === undefined) parent[0]++;\n                    else coparent[0]++;\n                }\n                else if(x.userType === 'child') {\n                    countingUser[2]++;\n                    if(x.childInfo.StudyLevel === 'TK') tk[1]++;\n                    else if(x.childInfo.StudyLevel === 'SD') sd[1]++;\n                    else if(x.childInfo.StudyLevel === 'SMP') smp[1]++;\n                    else if(x.childInfo.StudyLevel === 'SMA') sma[1]++;\n                }\n            }\n            const userDataObj = [\n                {\n                    name: \"TK\",\n                    data: tk\n                },\n                {\n                    name: \"SD\",\n                    data: sd\n                },\n                {\n                    name: \"SMP\",\n                    data: smp\n                },\n                {\n                    name: \"SMA\",\n                    data: sma\n                },\n                {\n                    name: \"Parent\",\n                    data: parent\n                },\n                {\n                    name: \"Co-Parent\",\n                    data: coparent\n                }\n            ]\n            \n            console.log(\"Colors length: \" + colors.length);\n            setCountUser(countingUser);\n            setUserData(userDataObj);\n            setUserDataLabel(['Orang tua: ' + countingUser[1], 'Anak: ' + countingUser[2]]);\n\n            const contentLength = responseAll[1].data.contents.length;\n            // console.log(responseAll[1].data.contents);\n            // console.log(responseAll[2].data.programs);\n            const programLength = responseAll[2].data.programs.length;\n\n            const dataConProg = [contentLength, programLength];\n            // console.log(dataConProg);\n            const conProgObj = [{\n                data: dataConProg\n            }];\n            setConProgData(conProgObj);\n\n            // console.log(responseAll[3].data);\n\n            const usageData = responseAll[3].data.appUsages;\n            // console.log(usageData);\n            var usageLabel = [], usageFreq = [];\n            for(var i = 0; i < usageData.length; i++) {\n                let x = usageData[i].appUsages;\n                // console.log(x);\n                for(var j = 0; j < x.length; j++) {\n                    let y = x[j];\n                    // console.log(y);\n                    if(y.usageHour !== undefined && y.usageHour.length > 0) {\n                        if(!usageLabel.includes(y.appName)) {\n                            usageLabel.push(y.appName);\n                            usageFreq.push(0);\n                        }\n                        let idx = usageLabel.indexOf(y.appName);\n                        usageFreq[idx] += y.usageHour.length;\n                    }\n                }\n            }\n\n            //1) combine the arrays:\n            var list = [];\n            for (var j = 0; j < usageLabel.length; j++) \n                list.push({'name': usageLabel[j], 'age': usageFreq[j]});\n\n            //2) sort:\n            list.sort(function(a, b) {\n                return ((a.age < b.age) ? 1 : ((a.age == b.age) ? 0 : -1));\n                //Sort could be modified to, for example, sort on the age \n                // if the name is the same.\n            });\n\n            //3) separate them back out:\n            for (var k = 0; k < list.length; k++) {\n                usageLabel[k] = list[k].name;\n                usageFreq[k] = list[k].age;\n            }\n            // console.log(usageLabel.slice(0,10));\n            // console.log(usageFreq.slice(0,10));\n\n            setTopUsageData(usageFreq.slice(0,10));\n            setTopUsageLabel(usageLabel.slice(0,10));\n\n            console.log(responseAll[4].data);\n            console.log(responseAll[5].data);\n            var notifCat = [];\n            var notifDat = [];\n            responseAll[5].data.Data.map(e => {\n                notifCat.push(e.category);\n                notifDat.push(0);\n            });\n            responseAll[4].data.resultData.map(e => {\n                for(var i = 0; i < notifDat.length; i++) {\n                    if(e.category === notifCat[i]) {\n                        notifDat[i]++;\n                        break;\n                    }\n                }\n            });\n            setNotifData([{data: notifDat}]);\n            setNotifLabel(notifCat);\n            setTopicCountLabel([]);\n            setTopicCountData([]);\n            setTopicViewLabel([]);\n            setTopicViewData([]);\n            setUsageStudyLevelData([]);\n\n            if(isLoading) setLoading(false);\n            else if(isLoadingSpinner) {\n                setLoadingSpinner(false);\n                setLoading(true);\n                setLoading(false);\n            }\n        });\n    }\n\n    useEffect(() => {\n        retrieveData();\n\n    }, [, endDate]);\n\n    useEffect(() => {\n\n        var colors2 = ['#44a6cc', '#cc44a6', '#a6cc44', '#44cca6', '#cca644', '#a644cc', '#117399', '#991173', '#739911', '#119973'];\n        // for(var i = 0; i < 10; i++) {\n        //     const colorPallete = \"#\" + ('00000'+(Math.random()*(1<<24)|0).toString(16)).slice(-3);\n        //     colors2.push(colorPallete);\n        // }\n        setColors(colors2);\n    }, []);\n\n    useEffect(() => {\n        var changedStartDate = new Date();\n        var changedEndDate = new Date();\n        switch(period) {\n            case 'today':\n                setStartDate(changedStartDate);\n                setEndDate(changedEndDate);\n                break;\n            case 'yesterday': \n                changedStartDate.setDate(today.getDate() - 1);\n                changedEndDate.setDate(today.getDate() - 1);\n                setStartDate(changedStartDate);\n                setEndDate(changedEndDate);\n                break;\n            case 'week': \n                changedStartDate.setDate(today.getDate() - 7);\n                setEndDate(today);\n                setStartDate(changedStartDate);\n                break;\n            case 'month': \n                changedStartDate.setDate(today.getDate() - 30);\n                setEndDate(today);\n                setStartDate(changedStartDate);\n                break;\n            case 'year': \n                changedStartDate.setDate(today.getDate() - 365);\n                setEndDate(today);\n                setStartDate(changedStartDate);\n                break;\n            case 'all': \n                setEndDate(today);\n                setStartDate(absStart);\n                break;\n            case 'dummy':\n                retrieveDummy();\n                break;\n            default:\n                break;           \n        }\n    }, [period]);\n\n    if(isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n        {isLoadingSpinner ? <RKLoaderSpinner/> : null}\n        <div className=\"Dashboard\">\n            <div className='div1'>\n                <Heading headingName=\"DASHBOARD\" />\n                <a className='wa2' href='http://wa.me/628119004410' target=\"_blank\"><FaWhatsapp className='whatshap'/> Need Help? Click Here!</a>\n            </div>\n\n            <div className=\"Dashboard_real_period\">\n                <button className={period === 'today' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'today') {\n                            setLoadingSpinner(true);\n                            setPeriod('today');\n                        }\n                    }}>Today</button>\n                <button className={period === 'yesterday' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'yesterday') {\n                            setLoadingSpinner(true);\n                            setPeriod('yesterday');\n                        }\n                    }}>Yesterday</button>\n                <button className={period === 'week' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'week') {\n                            setLoadingSpinner(true);\n                            setPeriod('week');\n                        }\n                    }}>7 Days</button>\n                <button className={period === 'month' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'month') {\n                            setLoadingSpinner(true);\n                            setPeriod('month');\n                        }\n                    }}>30 Days</button>\n                <button className={period === 'year' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'year') {\n                            setLoadingSpinner(true);\n                            setPeriod('year');\n                        }\n                    }}>365 Days</button>\n                <button className={period === 'all' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'all') {\n                            setLoadingSpinner(true);\n                            setPeriod('all');\n                        }\n                    }}>All Time</button>\n                <button className={period === 'dummy' ? \"Dashboard_real_period_option-active\" : \"Dashboard_real_period_option\"}\n                    onClick={() => {\n                        if(period !== 'dummy') {\n                            setLoadingSpinner(true);\n                            setPeriod('dummy');\n                        }\n                    }}>Dummy</button>\n            </div>\n            \n\n            {/* Dashboard Cards  */}\n            <div className=\"Dashboard_1\">\n                <div className=\"Dashboard_1_cards\">\n                    <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>{'Populasi User (Total: ' + countUser[0] + ')'}</h3>\n                            </div>\n                            \n\n                            <StackedChart\n                                    data={userData}\n                                    label={userDataLabel}\n                                    height={400}\n                                    colors={colors}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p></p>\n                                {/* <p>{'Orangtua: ' + countUser[1]}</p>\n                                <p>{'Anak: ' + countUser[2]}</p> */}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>Top 10 Apps by Usage</h3>\n                            </div>\n                            \n\n                            <DonutChart\n                                    data={topUsageData}\n                                    label={topUsageLabel}\n                                    width={380}\n                                    colors={colors}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p> </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>Jumlah Postingan Artikel &amp; Program Berdasarkan Topik</h3>\n                            </div>\n                            \n\n                            <BarChart\n                                    data={topicCountData}\n                                    label={topicCountLabel}\n                                    height={400}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p> </p>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>User Population</h3>\n                            </div>\n                            \n\n                            <StackedChart\n                                    data={userData}\n                                    label={userDataLabel}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p> </p>\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n\n                <div className=\"Dashboard_1_cards\">\n                    <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>Total Artikel &amp; Program</h3>\n                            </div>\n                            \n\n                            <BarChart\n                                    data={conProgData}\n                                    label={conProgDataLabel}\n                                    height={200}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p> </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>Jumlah Kirim Notifikasi</h3>\n                            </div>\n                            \n\n                            <BarChart\n                                    data={notifData}\n                                    label={notifLabel}\n                                    height={350}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p> </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"Dashboard_1_cards_card\">\n                        <div className=\"Dashboard_1_cards_card_item\">\n                            <div className=\"Dashboard_1_cards_card_item-heading\">\n                                <h3>Jumlah Pageview Artikel &amp; Program Berdasarkan Topik</h3>\n                            </div>\n                            \n\n                            <BarChart\n                                    data={topicViewData}\n                                    label={topicViewLabel}\n                                    height={600}\n                            />\n                            \n                            <div className=\"Dashboard_1_cards_card_item-details\">\n                                <p> </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* End Dashboard Cards  */}\n\n            <div className=\"Dashboard_table\">\n                <Table\n                    COLUMNS={columns}\n                    DATA={usageStudyLevelData}\n                />\n            </div>\n\n            {/* Dashboard Cards  */}\n            {/* <div className=\"Dashboard_1_cards\">\n                <div className=\"Dashboard_1_cards_item\">\n                    <div className=\"Dashboard_1_cards_item-heading\">\n                        <h3>Total Program Views</h3>\n                        <select\n                            name=\"programTotalSelect\"\n                            value={programTotalSelect}\n                            onChange={(e) => {\n                                console.log('bruh');\n                                console.log(e.currentTarget.value);\n                                setProgramTotalSelect(e.currentTarget.value);\n                                setUpdatingActive(true);\n                            }}>\n                            <option value=\"1\">Today</option>\n                            <option value=\"2\">Last 7 Days</option>\n                            <option value=\"3\">Last 30 Days</option>\n                            <option value=\"4\">Last 365 Days</option>\n                            <option value=\"5\">All Time</option>\n                        </select>\n                    </div>\n                    <h1>{programTotal}</h1>\n                    \n                    \n                    <div className=\"Dashboard_1_cards_item-details\">\n                        <NavLink to=\"/program\">Lihat Detail \n                            <FiArrowRightCircle className=\"Dashboard_1_cards_item-icon\" />\n                        </NavLink>\n                    </div>\n                </div>\n                <div className=\"Dashboard_1_cards_item\">\n                    <div className=\"Dashboard_1_cards_item-heading\">\n                        <h3>Total Content Views</h3>\n                        <select\n                            name=\"contentTotalSelect\"\n                            value={contentTotalSelect}\n                            onChange={(e) => {\n                                console.log('bruh');\n                                console.log(e.currentTarget.value);\n                                setContentTotalSelect(e.currentTarget.value);\n                                setUpdatingActive(true);\n                            }}>\n                            <option value=\"1\">Today</option>\n                            <option value=\"2\">Last 7 Days</option>\n                            <option value=\"3\">Last 30 Days</option>\n                            <option value=\"4\">Last 365 Days</option>\n                            <option value=\"5\">All Time</option>\n                        </select>\n                    </div>\n                    <h1>{contentTotal}</h1>\n                    <div className=\"Dashboard_1_cards_item-details\">\n                        <NavLink to=\"/content\">Lihat Detail \n                            <FiArrowRightCircle className=\"Dashboard_1_cards_item-icon\" />\n                        </NavLink>\n                    </div>\n                </div>\n            </div> */}\n            {/* End Dashboard Cards  */}\n\n\n\n        </div>\n        </>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkSpinner\">\n            <Spinner />\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}