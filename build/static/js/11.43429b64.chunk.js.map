{"version":3,"sources":["components/UI/Table/Table.js","components/UI/Map/Map.js","containers/CoBrand/RedZone/components/Columns.js","containers/CoBrand/RedZone/RedZone.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js"],"names":["Table","DATA","COLUMNS","data","useMemo","useTable","columns","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","type","placeholder","className","value","onChange","e","currentTarget","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Map","ReactMapboxGl","accessToken","GoogleMaps","search","console","log","style","containerStyle","height","center","zoom","id","layout","coordinates","Columns","Header","accessor","Cell","original","lat","lon","onClick","RedZone","useState","mapSearch","mapSearchInput","Heading","headingName","routes","name","path","Input","urlBuilder","encodeURI","axios","method","url","then","response","features","catch","error","Data","length","item","exact","to","onBlur","message","min","isError","memo"],"mappings":"uLAyEeA,IApEf,YAAmC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAEbC,EAAOC,mBAAS,kBAAMH,IAAO,CAACA,IAEpC,EAQII,mBAAS,CACTC,QAASJ,EACTC,KAAMA,GAERI,kBACAC,aAZEC,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,KACAC,EALJ,EAKIA,WACAC,EANJ,EAMIA,MACAC,EAPJ,EAOIA,gBAQIC,EAAiBF,EAAjBE,aAER,OACI,qCACA,uBACIC,KAAK,OACLC,YAAY,SACZC,UAAU,aACVC,MAAQJ,GAAgB,GACxBK,SAAU,SAACC,GACPP,EAAgBO,EAAEC,cAAcH,UAGzC,kDAAWX,KAAX,cACI,gCACKE,EAAaa,KAAI,SAAAC,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3B,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACKF,EAAOG,OAAO,UACd,+BACKH,EAAOI,SACNJ,EAAOK,aACF,cAAC,IAAD,IACA,cAAC,IAAD,IACL,oBAO3B,iDAAWvB,KAAX,aACME,EAAKY,KAAI,SAACU,EAAKC,GAEZ,OADAtB,EAAWqB,GAEP,8CAAQA,EAAIE,eAAZ,aACKF,EAAIG,MAAMb,KAAI,SAAAc,GACX,OAAO,+CAAQA,EAAKC,gBAAb,kBAA+BD,EAAKP,OAAO,QAA3C,6B,8gBCzDjCS,EAAMC,YAAc,CACtBC,YACE,sGAgCSC,EA3BI,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAGjB,OAFAC,QAAQC,IAAIF,GAGR,cAACJ,EAAD,CACEO,MAAM,oCACNC,eAAgB,CACdC,OAAQ,QAEVC,OACEN,EAASA,EAAOM,OAAQ,CAAC,GAAI,IAE/BC,KAAM,CAAC,IART,SAUA,cAAC,IAAD,CACElC,KAAK,SACLmC,GAAG,SACHC,OAAQ,CAAE,aAAc,aAH1B,SAKE,cAAC,IAAD,CAASC,YACLV,EAASA,EAAOM,OAAQ,CAAC,EAAG,U,gBCuB3BK,EArDC,CACZ,CACIC,OAAQ,KACRC,SAAU,MAEd,CACID,OAAQ,OACRC,SAAU,QAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,UACRE,KAAM,YAAY,IAAVxB,EAAS,EAATA,IACJ,OAAOA,EAAIyB,SAASC,IAAM,IAAI1B,EAAIyB,SAASE,MAGnD,CACIL,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,SACRE,KAAM,SAACxB,GAAD,OACF,qCACI,wBACIf,UAAU,aACV2C,QAAS,kBAAMjB,QAAQC,IAAIZ,IAF/B,SAGI,8BACI,cAAC,IAAD,CAAOf,UAAU,wBAGzB,wBACIA,UAAU,aADd,SAGI,8BACI,cAAC,IAAD,CAASA,UAAU,wBAG3B,wBACIA,UAAU,aADd,SAGI,8BACI,cAAC,IAAD,CAAUA,UAAU,8B,SCyB7B4C,UA7Df,WACI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAK/C,UAAU,UAAf,UACI,cAACgD,EAAA,EAAD,CAASC,YAAY,UAAUC,OAAQ,CACnC,CAAEC,KAAM,gBACR,CAAEC,KAAM,WAAYD,KAAM,mBAG9B,sBAAKnD,UAAU,eAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,0CACA,cAACqD,EAAA,EAAD,CACIrD,UAAU,gBACVF,KAAK,OACLC,YAAY,SACZoD,KAAK,SACLjD,SAAU,SAACC,GACPuB,QAAQC,IAAIxB,EAAEC,cAAcH,OAC5B,IAAIqD,EAAa,qDAAuDC,UAAUpD,EAAEC,cAAcH,OAAjF,uHACjBuD,IAAM,CACJC,OAAQ,MACRC,IAAKJ,IAENK,MAAK,SAAAC,GAEFb,EAAea,EAAS5E,KAAK6E,SAAS,OAEzCC,OAAM,SAAAC,GACHrC,QAAQC,IAAIoC,YAK5B,qBAAK/D,UAAU,gBAAf,SACI,cAAC,EAAD,CAAcyB,OAAQqB,SAI9B,sBAAK9C,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,8CACA,cAACqD,EAAA,EAAD,CACIrD,UAAU,gBACVF,KAAK,OACLC,YAAY,SACZoD,KAAK,cAGb,qBAAKnD,UAAU,gBAAf,SACI,cAACnB,EAAA,EAAD,CACIE,QAASqD,EACTtD,KAAMkF,c,gCChE9B,+BAsBehB,IAlBf,YAAgD,IAA7BC,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAKlD,UAAU,UAAf,UACI,6BAAKiD,IACL,oBAAIjD,UAAU,qBAAd,SACKkD,EAAOe,OAAS,GAAKf,EAAO7C,KAAI,SAAC6D,EAAMlD,GACpC,OAAGkD,EAAKd,KACG,qBAAIpD,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASmE,OAAK,EAACC,GAAIF,EAAKd,KAAxB,SAA+Bc,EAAKf,OAApF,MAA6CnC,GAE7C,qBAAIhB,UAAU,0BAAd,cAAiD,+BAAOkE,EAAKf,OAA7D,MAA6CnC,a,qDCd5E,0BAGA,SAASqC,EAAT,GAWI,IAVAtD,EAUD,EAVCA,YACAD,EASD,EATCA,KACAI,EAQD,EARCA,SACAmE,EAOD,EAPCA,OACApE,EAMD,EANCA,MACAD,EAKD,EALCA,UACAsE,EAID,EAJCA,QACAnB,EAGD,EAHCA,KACAoB,EAED,EAFCA,IACAC,EACD,EADCA,QAEA,MAAY,aAAT1E,EAEC,qCACI,0BACIqD,KAAMA,EACNlB,GAAIkB,EACJnD,UAAWA,EACXD,YAAaA,EACbG,SAAUA,EACVmE,OAAQA,EACRpE,MAAOA,IAEVuE,GACG,qBAAKxE,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCsE,SAMjC,SAATxE,EAEA,qCACI,uBACIqD,KAAMA,EACNnD,UAAWA,EACXF,KAAMA,EACNC,YAAaA,EACbG,SAAUA,EACVmE,OAAQA,EACRpE,MAAOA,EACPsE,IAAKA,IAERC,GACG,qBAAKxE,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCsE,SAOlD,qCACI,uBACInB,KAAMA,EACNnD,UAAWA,EACXF,KAAMA,EACNC,YAAaA,EACbG,SAAUA,EACVmE,OAAQA,EACRpE,MAAOA,IAEVuE,GACG,qBAAKxE,UAAU,UAAf,SACI,sBAAMA,UAAU,iBAAhB,SAAkCsE,SAOvCG,mBAAKpB,I","file":"static/js/11.43429b64.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { useGlobalFilter, useSortBy, useTable } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }\n    , useGlobalFilter\n    , useSortBy)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <input \n            type=\"text\" \n            placeholder=\"Search\"\n            className=\"tableInput\"\n            value={ globalFilter || '' }\n            onChange={(e) => {\n                setGlobalFilter(e.currentTarget.value);\n            }}\n        />\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                           </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                            })}\n                        </tr>\n                    )\n                })}\n           </tbody>\n       </table>\n       </>\n    )\n}\n\nexport default Table\n","import React, { useState, useEffect } from 'react';\nimport ReactMapboxGl, { Layer, Feature, Marker } from 'react-mapbox-gl';\nimport axios from 'axios';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = ReactMapboxGl({\n    accessToken:\n      'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg'\n});\n\nexport const accessToken = 'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg';\n\nconst GoogleMaps = ({search}) => {\n    console.log(search);\n    \n    return (\n        <Map\n          style=\"mapbox://styles/mapbox/streets-v9\"\n          containerStyle={{\n            height: '50vh'\n          }}\n          center={\n            search ? search.center: [10, 10]\n          }\n          zoom={[11]}\n        >\n        <Layer\n          type=\"symbol\" \n          id=\"marker\" \n          layout={{ 'icon-image': 'marker-15' }}\n        >\n          <Feature coordinates={\n              search ? search.center: [5, 5]\n          } />\n        </Layer>\n      </Map>\n    )\n}\n\nexport default GoogleMaps;\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst Columns = [\n    {\n        Header: 'No',\n        accessor: 'id'\n    },\n    {\n        Header: 'Name',\n        accessor: 'name'\n    },\n    {\n        Header: 'Location',\n        accessor: 'location'\n    },\n    {\n        Header: 'Geo Tag',\n        Cell: ({row}) => {\n            return row.original.lat + ' '+row.original.lon;\n        }\n    },\n    {\n        Header: 'Created At',\n        accessor: 'created_at'\n    },\n    {\n        Header: 'Action',\n        Cell: (row) => (\n            <>\n                <button \n                    className=\"btn_action\"\n                    onClick={() => console.log(row)}>\n                    <div>\n                        <FiEye className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiEdit2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiTrash2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n            </>\n        )\n    }\n];\n\nexport default Columns;","import React, { useState } from 'react';\nimport './RedZone.scss';\nimport Heading from './../../../components/UI/Heading/Heading';\nimport InputComponent from './../../../components/UI/Input/Input';\nimport MapComponent, { accessToken } from './../../../components/UI/Map/Map';\nimport TableRedZone from './../../../components/UI/Table/Table';\nimport Columns from './components/Columns';\nimport Data from './components/redzone.json';\nimport axios from 'axios';\n\n\nfunction RedZone() {\n    const [mapSearch, mapSearchInput] = useState('');\n\n    return (\n        <div className=\"RedZone\">\n            <Heading headingName=\"Redzone\" routes={[\n                { name: 'Data Redzone' },\n                { path: '/redzone', name: 'List Redzone' }\n            ]} />\n\n            <div className=\"RedZone__map\">\n                <div className=\"RedZone__heading\">\n                    <h3>Map View</h3>\n                    <InputComponent \n                        className=\"Input-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        name=\"search\"\n                        onChange={(e) => {\n                            console.log(e.currentTarget.value);\n                            let urlBuilder = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + encodeURI(e.currentTarget.value) + '.json?access_token=' + accessToken;\n                            axios({\n                              method: 'get',\n                              url: urlBuilder\n                            })\n                            .then(response => {\n                                //console.log(\"Response data: \", response.data);\n                                mapSearchInput(response.data.features[0]);\n                            })\n                            .catch(error => {\n                                console.log(error);\n                            });\n                        }}\n                    />\n                </div>\n                <div className=\"RedZone__data\">\n                    <MapComponent search={mapSearch}/>\n                </div>\n            </div>\n\n            <div className=\"RedZone__list\">\n                <div className=\"RedZone__heading\">\n                    <h3>Redzone List</h3>\n                    <InputComponent \n                        className=\"Input-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        name=\"search\"\n                    />\n                </div>\n                <div className=\"RedZone__data\">\n                    <TableRedZone \n                        COLUMNS={Columns}\n                        DATA={Data}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RedZone\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n"],"sourceRoot":""}