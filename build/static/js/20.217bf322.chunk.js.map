{"version":3,"sources":["components/UI/Input/Input.js","store/actions/dashboard.js","containers/CoBrand/SchoolControl/SchoolControl.js","containers/CoBrand/GlobalParam.js","components/API/dashboard.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-select/dist/useAsync-9deee0fa.esm.js","../node_modules/react-select/async/dist/react-select.esm.js","components/UI/Heading/Heading.js","components/API/filter.js"],"names":["Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","programName","ProgramDescription","photo","startDate","endDate","category","targetAudience","contentProg","history","dispatch","ALERT_CLOSE","toBase64","then","result","programthumnail","targetAudiance","j","length","push","data1","programAdd","response","console","log","data","programId","resultData","progrram","_id","contentPrograms1","i","x","respons","realContents","contents","dataRaw","nomerUrutTahapan","namaTahapan","contentName","contentType","contentSource","topics","status","answerKey","contentAddAsync","response2","paramUser","whereKeyValues","userType","packageId","limit","Number","MAX_SAFE_INTEGER","getUserList","responseUser","users","userEmails","forEach","y","emailUser","z","join","data2","destination","messageSubject","messageContent","scheduleTime","mediaType","notificationAdd","catch","error","editProgram","whereValues","newValues","programEdit","addStep","contentAdd","editStep","contentEdit","deleteProgram","retrieveList","deleting","programDelete","paramu","contentDelete","addContent","contentDescription","isActive","community","groupMitraAsuhId","schoolId","cobrandComId","topic","audi","map","e","contentThumbnail","getEmbedUrl","hasil","cobrandComunityId","sekolah","orderKeyValues","nameUser","r","includes","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","cobrandName","phoneNumber","address","password","email","Object","assign","thumbnail","cobrandEdit","cobrandLogin","loginData","localStorage","removeItem","setItem","token","JSON","stringify","user","addNotification","useSchedule","schedule","addAudience","audianceName","audienceAdd","addNotifCategory","description","notifCategoryAdd","addProgCategory","programCategoryAdd","addStaff","userName","userLevel","phone","adminAdd","editStaff","getItem","newKeyValues","adminEdit","deleteStaff","staffId","adminDelete","addCommunity","cobrandComunityName","partComunityId","communityAdd","addSchoolGroup","groupMitraAsuhName","memberSekolah","schoolGroupAdd","addPraytimeMessage","prayDate","shubuh","dzuhur","ashr","maghrib","isya","praytimeMessageEdit","editPraytimeMessage","praytimeMessageAdd","deleteCommunity","communityId","communityDelete","deleteSchoolGroup","schoolGroupId","schoolGroupDelete","deletePraytimeMessage","praytimeMessageId","praytimeMessageDelete","addContentTopic","topicName","contentTopicAdd","addScreenTime","controlParameterName","controlParameterValue","unit","screenTimeAdd","editAppUser","gender","birdDate","imagePhoto","appUserEdit","userCommunity","communityMemberDelete","param","communityMemberAddAsync","childControl","userEmail","isModeAsuh","appLimitBlock","modeAsuh","deviceSchedule","setReload","setPageLoading","promises","isChanged","mode","prm","appId","appCategory","pro","appBlockLimitAdd","appBlockLimitDelete","appBlockLimitEdit","modeAsuhName","modeAsuhAdd","willBeRemoved","deviceScheduleDelete","scheduleName","scheduleDescription","scheduleType","deviceUsageDays","deviceUsageStartTime","deviceUsageEndTime","deviceScheduleEdit","deviceScheduleAdd","Promise","all","setTimeout","schoolControl","appWhiteListId","setLoading","alwaysOnAppsDelete","k","apid","t","params","applications","prox","alwaysOnAppsAdd","connect","state","isLoading","auth","onSchoolControl","useHistory","parse","useState","isPageLoading","isReload","whitelist","setWhitelist","setUserEmails","isDeleted","setDeleted","isScheduleAdded","setScheduleAdded","colourStyles","control","styles","backgroundColor","width","border","loadOptions","inputValue","callback","getAppDetailList","appName","options","appIcons","label","useEffect","dateCreated","absStart","toISOString","split","paramSchedule","paramAlwaysOn","userList","deviceUsageList","getDeviceScheduleList","alwaysOnList","getAlwaysOnApps","p","deviceUsageSchedules","slice","res","headingName","initialValues","onSubmit","values","handleChange","handleSubmit","setFieldValue","handleBlur","errors","touched","onClick","q","index","target","checked","indexArr","indexOf","splice","locale","format","disableClock","cacheOptions","defaultOptions","isMulti","defaultValue","emailTester","Date","query","axios","method","url","headers","a","module","exports","instance","Constructor","TypeError","__esModule","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","setPrototypeOf","subClass","superClass","create","constructor","_setPrototypeOf","o","bind","__proto__","_excluded","AsyncSelect","forwardRef","ref","stateManagedProps","_ref","_ref$defaultOptions","propsDefaultOptions","_ref$cacheOptions","propsLoadOptions","_ref$isLoading","propsIsLoading","propsOnInputChange","onInputChange","_ref$filterOption","filterOption","restSelectProps","_objectWithoutProperties","propsInputValue","lastRequest","useRef","undefined","mounted","_useState","Array","isArray","_useState2","_slicedToArray","setDefaultOptions","_useState3","_useState4","stateInputValue","setStateInputValue","_useState5","_useState6","setIsLoading","_useState7","_useState8","loadedInputValue","setLoadedInputValue","_useState9","_useState10","loadedOptions","setLoadedOptions","_useState11","_useState12","passEmptyOptions","setPassEmptyOptions","_useState13","_useState14","optionsCache","setOptionsCache","_useState15","_useState16","prevDefaultOptions","setPrevDefaultOptions","_useState17","_useState18","prevCacheOptions","setPrevCacheOptions","current","useCallback","loader","newValue","actionMeta","handleInputChange","request","_objectSpread2","_defineProperty","useAsync","selectProps","useStateManager","React","Select","_extends","Heading","routes","item","path","exact","to","getProgramList","getContentList","getRedzoneList","getAppUsageList","getAppLimitList","getModeAsuhList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getContentResponseList","getContentViewList","getProgramCategoryList","getAdminList","getCommunityList","getCommunityMemberList","getSchoolList","getSchoolGroupList","getPraytimeMessageList","getUserInstalledApps"],"mappings":"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","file":"static/js/20.217bf322.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentAddAsync, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, adminEdit, adminDelete, contentTopicAdd, screenTimeAdd, appUserEdit, communityAdd, communityDelete, communityMemberAddAsync, communityMemberDelete,\n schoolGroupAdd, schoolGroupDelete, praytimeMessageAdd, praytimeMessageEdit, praytimeMessageDelete,\n appBlockLimitAdd, appBlockLimitDelete, appBlockLimitEdit, modeAsuhAdd, modeAsuhEdit, modeAsuhDelete,\ndeviceScheduleAdd, deviceScheduleEdit, deviceScheduleDelete, alwaysOnAppsAdd, alwaysOnAppsDelete} from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\nimport { getCommunityMemberList, getUserList } from '../../components/API/filter';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            // console.log(typeof result);\n            const programthumnail = result;\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data1 = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance\n            };\n\n            programAdd(data1)\n            .then(response => {\n                console.log('response:', response.data);\n                let programId = response.data.resultData.progrram._id;\n                let contentPrograms1 = [];\n                for(var i = 0; i < contentProg.length; i++) {\n                    let x = contentProg[i];\n                    let respons = {};\n                    for(var j = 0; j < x.response.length; j++) {\n                        respons[x.response[j]] = 0;\n                    }\n                    let realContents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                            + '<head>'\n                            + '<meta charset=\"utf-8\">'\n                            + '<style>'\n                            + '#contents {'\n                            + 'overflow-y: scroll;'\n                            + 'text-align: justify;'\n                            + 'font-family: Arial, Helvetica, sans-serif;'\n                            + 'padding: 1%;'\n                            + '}'\n                            + '#contents li {'\n                            + 'margin-left: 5%;'\n                            + '}'\n                            + '</style>'\n                            + '</head>'\n                            + '<body>'\n                            + '<div id=\"contents\">'\n                            + x.contents\n                            + '</div>'\n                            + '</body>'\n                            + '</html>';\n                    let dataRaw = {\n                        programId: programId,\n                        cobrandEmail: cobrandEmail,\n                        nomerUrutTahapan: x.nomerUrutTahapan,\n                        namaTahapan: x.namaTahapan,\n                        contentName: x.contentName,\n                        contentType: x.contentType,\n                        contentSource: x.contentSource,\n                        contents: realContents,\n                        startDate: x.startDate,\n                        endDate: x.endDate,\n                        topics: x.topics,\n                        targetAudiance: x.targetAudiance,\n                        status: 'active',\n                        respons: respons,\n                        answerKey: x.answerKey\n                    }\n\n                    contentPrograms1.push(contentAddAsync(dataRaw).then(response2 => {\n                        console.log('Respons ' + i, response2)\n                    }));\n                    console.log('content Program 1', contentPrograms1);\n                }\n                let paramUser = {\n                    whereKeyValues: {\n                        userType: \"parent\",\n                        packageId: \"com.byasia.ruangortu\"\n                    },\n                    limit: Number.MAX_SAFE_INTEGER\n                }\n                getUserList(paramUser)\n                .then(responseUser => {\n                    console.log(responseUser);\n                    var x = responseUser.data.users;\n                    var userEmails = [];\n                    x.forEach(y => {\n                        userEmails.push(y.emailUser);\n                    })\n                    var z = userEmails.join(',');\n                    if(contentPrograms1.length === contentProg.length) {\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                        let data2 = {\n                            cobrandEmail,\n                            destination: z,\n                            messageSubject: \"Program Baru Untuk Anak\",\n                            messageContent: \"Hi Papa mama Ada Program Baru Lho! Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, papa mama bisa bagikan program tersebut ke anak Anda. Yuk ikuti program barunya.\",\n                            scheduleTime: startDate,\n                            mediaType: \"Device\",\n                            category: \"Informasi\"\n                        }\n                        notificationAdd(data2).then(() => {\n                            data2.destination = targetAudiance.join(\", \");\n                            data2.messageSubject = \"Hi Adik-Adik Ada Program Baru Lho!\"\n                            data2.messageContent = \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, yuk adik-adik kita ikuti program baru nya, Seru Lho!\"\n                            history.push('/cms/program');\n                            dispatch(alertError('Program \"' + programName + '\" berhasil ditambahkan.'));\n                            dispatch(loadingStop());\n                        });;\n                    }\n                    else {\n                        let data2 = {\n                            cobrandEmail,\n                            destination: z,\n                            messageSubject: \"Hai Papa Mama Ada Program Baru Lho! \",\n                            messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, papa mama bisa bagikan program tersebut ke anak Anda. Yuk ikuti program barunya.\",\n                            scheduleTime: startDate,\n                            mediaType: \"Device\",\n                            category: \"Informasi\"\n                        }\n                        notificationAdd(data2).then(() => {\n                            data2.destination = targetAudiance.join(\", \");\n                            data2.messageSubject = \"Hi Adik-Adik Ada Program Baru Lho!\"\n                            data2.messageContent = \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa program baru, yuk adik-adik kita ikuti program baru nya, Seru Lho!\"\n                            history.push('/cms/program');\n                            dispatch(alertError('Program \"' + programName + '\" berhasil ditambahkan, namun beberapa tahap gagal ditambahkan.'));\n                            dispatch(loadingStop());\n                        });\n                    }})\n            })\n            .catch(error => {\n                console.log('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            })\n\n            // let contentPrograms = [];\n            // for(var i = 0; i < contentProg.length; i++) {\n            //     let x = contentProg[i];\n            //     let respons = {};\n            //     for(var j = 0; j < x.response.length; j++) {\n            //         respons[x.response[j]] = 0;\n            //     }\n            //     let realContents = '<!DOCTYPE html>'\n            //             + '<html lang=\"en\">'\n            //             + '<head>'\n            //             + '<meta charset=\"utf-8\">'\n            //             + '<style>'\n            //             + '#contents {'\n            //             + 'overflow-y: scroll;'\n            //             + 'text-align: justify;'\n            //             + 'font-family: Arial, Helvetica, sans-serif;'\n            //             + 'padding: 1%;'\n            //             + '}'\n            //             + '#contents li {'\n            //             + 'margin-left: 5%;'\n            //             + '}'\n            //             + '</style>'\n            //             + '</head>'\n            //             + '<body>'\n            //             + '<div id=\"contents\">'\n            //             + x.contents\n            //             + '</div>'\n            //             + '</body>'\n            //             + '</html>';\n            //     let dataRaw = {\n            //         nomerUrutTahapan: x.nomerUrutTahapan,\n            //         namaTahapan: x.namaTahapan,\n            //         contentName: x.contentName,\n            //         contentType: x.contentType,\n            //         contentSource: x.contentSource,\n            //         contents: realContents,\n            //         startDate: x.startDate,\n            //         endDate: x.endDate,\n            //         topics: x.topics,\n            //         targetAudiance: x.targetAudiance,\n            //         respons: respons,\n            //         answerKey: x.answerKey\n            //     }\n            //     contentPrograms.push(dataRaw);\n            // }\n\n            // let targetAudiance = [];\n            // for(var j = 0; j < targetAudience.length; j++) {\n            //     targetAudiance.push(targetAudience[j].value);\n            // }\n\n            // let data = {\n            //     cobrandEmail,\n            //     programName,\n            //     ProgramDescription,\n            //     programthumnail,\n            //     startDate,\n            //     endDate,\n            //     category,\n            //     targetAudiance,\n            //     contentPrograms\n            // };\n\n            // // console.log(data);\n            // //Call API ....\n\n            // // programAdd(data)\n            // programAddv2(data)\n            //     .then(response => {\n            //         // console.log('Success:', response.data);\n            //         history.push('/cms/program');\n            //         dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n            //         dispatch(loadingStop());\n            //     })\n            //     .catch((error) => {\n            //         console.error('Error:', error);\n            //         dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n            //         dispatch(loadingStop());\n            //     });\n            // // console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, startDate, endDate, category, targetAudiance, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                programName,\n                ProgramDescription,\n                startDate,\n                endDate,\n                category,\n                targetAudiance\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        programEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/program');\n                dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const addStep = (programId, cobrandEmail, nomerUrutTahapan, namaTahapan, contentName, contentType, contentSource, contents, startDate, endDate, topics, targetAudiance, response, answerKey, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let respons = {};\n        for(var j = 0; j < response.length; j++) {\n            respons[response[j]] = 0;\n        }\n        let realContents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                            + '<head>'\n                            + '<meta charset=\"utf-8\">'\n                            + '<style>'\n                            + '#contents {'\n                            + 'overflow-y: scroll;'\n                            + 'text-align: justify;'\n                            + 'font-family: Arial, Helvetica, sans-serif;'\n                            + 'padding: 1%;'\n                            + '}'\n                            + '#contents li {'\n                            + 'margin-left: 5%;'\n                            + '}'\n                            + '</style>'\n                            + '</head>'\n                            + '<body>'\n                            + '<div id=\"contents\">'\n                            + contents\n                            + '</div>'\n                            + '</body>'\n                            + '</html>';\n        let data = {\n            programId,\n            cobrandEmail,\n            nomerUrutTahapan,\n            namaTahapan,\n            contentName,\n            contentType,\n            contentSource,\n            contents: realContents,\n            startDate,\n            endDate,\n            topics,\n            targetAudiance,\n            respons,\n            answerKey,\n            status: 'active'\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/program/edit/');\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const editStep = (_id, cobrandEmail, namaTahapan, contentName, contents, response, answerKey, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let respons = {};\n        for(var j = 0; j < response.length; j++) {\n            respons[response[j]] = 0;\n        }\n        let realContents = '<!DOCTYPE html>'\n                            + '<html lang=\"en\">'\n                            + '<head>'\n                            + '<meta charset=\"utf-8\">'\n                            + '<style>'\n                            + '#contents {'\n                            + 'overflow-y: scroll;'\n                            + 'text-align: justify;'\n                            + 'font-family: Arial, Helvetica, sans-serif;'\n                            + 'padding: 1%;'\n                            + '}'\n                            + '#contents li {'\n                            + 'margin-left: 5%;'\n                            + '}'\n                            + '</style>'\n                            + '</head>'\n                            + '<body>'\n                            + '<div id=\"contents\">'\n                            + contents\n                            + '</div>'\n                            + '</body>'\n                            + '</html>';\n        let data = {\n            whereValues: {\n                cobrandEmail,\n                _id\n            },\n            newValues: {\n                namaTahapan,\n                contentName,\n                contents: realContents,\n                respons,\n                answerKey\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        contentEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/program/view/step');\n                dispatch(alertSuccess('Tahap program \"' + contentName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Tahap program \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                let paramu = {\n                    whereValues: {\n                        programId: programId[0]\n                    }\n                }\n                contentDelete(paramu)\n                .then(response2 => {\n                    // console.log(response2.data);\n                    dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                    dispatch(loadingStop());\n                    retrieveList();\n                })\n                .catch(error => {\n                    // console.log(error);\n                    dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus, namun tahap pada program gagal dihapus.'));\n                    dispatch(loadingStop());\n                    retrieveList();\n                });\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, community, groupMitraAsuhId, schoolId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n        console.log('Comunity: ' + community);\n        let cobrandComId = community;\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            // console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi,\n                            cobrandComunityId: community,\n                            groupMitraAsuhId,\n                            sekolah: schoolId\n                        };\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                let paramUser = \n                                schoolId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        sekolah: schoolId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } :\n                                groupMitraAsuhId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        groupMitraAsuhId: groupMitraAsuhId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } : \n                                cobrandComId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        cobrandComunityId: cobrandComId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } : {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                };\n                                getUserList(paramUser)\n                                .then(responseUser => {\n                                    console.log(responseUser);\n                                    var x = responseUser.data.users;\n                                    var userEmails = [];\n                                    x.forEach(y => {\n                                        userEmails.push(y.emailUser);\n                                    })\n                                    var z = userEmails.join(',');\n                                    let data2 = {\n                                        cobrandEmail,\n                                        destination: z,\n                                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                        scheduleTime: startDate,\n                                        mediaType: \"Device\",\n                                        category: \"Informasi\"\n                                    }\n                                    notificationAdd(data2).then(r => {\n                                        history.push('/cms/content');\n                                        dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                        dispatch(loadingStop());\n                                    });\n                                });\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        // console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi,\n                            cobrandComunityId: community,\n                            groupMitraAsuhId,\n                            sekolah: schoolId\n                        };\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                let paramUser =\n                                schoolId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        sekolah: schoolId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } :\n                                groupMitraAsuhId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        groupMitraAsuhId: groupMitraAsuhId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } : \n                                cobrandComId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        cobrandComunityId: cobrandComId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } : {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                };\n                                getUserList(paramUser)\n                                .then(responseUser => {\n                                    console.log(responseUser);\n                                    var x = responseUser.data.users;\n                                    var userEmails = [];\n                                    x.forEach(y => {\n                                        userEmails.push(y.emailUser);\n                                    })\n                                    var z = userEmails.join(',');\n                                    let data2 = {\n                                        cobrandEmail,\n                                        destination: z,\n                                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                        scheduleTime: startDate,\n                                        mediaType: \"Device\",\n                                        category: \"Informasi\"\n                                    }\n                                    notificationAdd(data2).then(r => {\n                                        history.push('/cms/content');\n                                        dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                        dispatch(loadingStop());\n                                    });\n                                });\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi,\n                            cobrandComunityId: community,\n                            groupMitraAsuhId,\n                            sekolah: schoolId\n                        };\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                let paramUser = \n                                schoolId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        sekolah: schoolId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } :\n                                groupMitraAsuhId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        groupMitraAsuhId: groupMitraAsuhId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } : \n                                cobrandComId !== '' ? {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                        cobrandComunityId: cobrandComId,\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                } : {\n                                    whereKeyValues: {\n                                        packageId: \"com.byasia.ruangortu\",\n                                    },\n                                    orderKeyValues: {\n                                        nameUser: 1\n                                    },\n                                    limit: Number.MAX_SAFE_INTEGER\n                                };\n                                getUserList(paramUser)\n                                .then(responseUser => {\n                                    console.log(responseUser);\n                                    var x = responseUser.data.users;\n                                    var userEmails = [];\n                                    x.forEach(y => {\n                                        userEmails.push(y.emailUser);\n                                    })\n                                    var z = userEmails.join(',');\n                                    let data2 = {\n                                        cobrandEmail,\n                                        destination: z,\n                                        messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                        messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                        scheduleTime: startDate,\n                                        mediaType: \"Device\",\n                                        category: \"Informasi\"\n                                    }\n                                    notificationAdd(data2).then(r => {\n                                        history.push('/cms/content');\n                                        dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                        dispatch(loadingStop());\n                                    });\n                                });\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            // console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi,\n                cobrandComunityId: community,\n                groupMitraAsuhId,\n                sekolah: schoolId\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    // console.log('Success:', response.data);\n                    // getUserList(paramUser)\n                        let paramUser = \n                        schoolId !== '' ? {\n                            whereKeyValues: {\n                                packageId: \"com.byasia.ruangortu\",\n                                sekolah: schoolId,\n                            },\n                            orderKeyValues: {\n                                nameUser: 1\n                            },\n                            limit: Number.MAX_SAFE_INTEGER\n                        } :\n                        groupMitraAsuhId !== '' ? {\n                            whereKeyValues: {\n                                packageId: \"com.byasia.ruangortu\",\n                                groupMitraAsuhId: groupMitraAsuhId,\n                            },\n                            orderKeyValues: {\n                                nameUser: 1\n                            },\n                            limit: Number.MAX_SAFE_INTEGER\n                        } : \n                        cobrandComId !== '' ? {\n                            whereKeyValues: {\n                                packageId: \"com.byasia.ruangortu\",\n                                cobrandComunityId: cobrandComId,\n                            },\n                            orderKeyValues: {\n                                nameUser: 1\n                            },\n                            limit: Number.MAX_SAFE_INTEGER\n                        } : {\n                            whereKeyValues: {\n                                packageId: \"com.byasia.ruangortu\",\n                            },\n                            orderKeyValues: {\n                                nameUser: 1\n                            },\n                            limit: Number.MAX_SAFE_INTEGER\n                        };\n                        getUserList(paramUser)\n                        .then(responseUser => {\n                            console.log(responseUser);\n                            var x = responseUser.data.users;\n                            var userEmails = [];\n                            x.forEach(y => {\n                                userEmails.push(y.emailUser);\n                            })\n                            var z = userEmails.join(',');\n                            let data2 = {\n                                cobrandEmail,\n                                destination: z,\n                                messageSubject: \"Hai, Ada Artikel Baru Lho!\",\n                                messageContent: \"Saat ini aplikasi Ruang Ortu by ASIA sudah menambahkan beberapa artikel baru, yuk dicek sekarang.\",\n                                scheduleTime: startDate,\n                                mediaType: \"Device\",\n                                category: \"Informasi\"\n                            }\n                            notificationAdd(data2).then(r => {\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            });\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            // console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:30vh;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"30vh\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        // console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        // console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                // console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Artikel \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        // console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            // console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            // console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    // console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Artikel \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Artikel \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            // console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Artikel \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Artikel \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                // console.log('whereValues: ', whereValues);\n                // console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        // console.log('Success:', response.data);\n                        if (password) {\n                            // console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                // console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            // console.log('whereValues: ', whereValues);\n            // console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    // console.log('Success:', response.data);\n                    if (password) {\n                        // console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            // console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (cobrandEmail, destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, cobrandComunityId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            cobrandEmail, destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category, cobrandComunityId\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, sekolah, emailUser, phone, cobrandComunityId, groupMitraAsuhId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, sekolah, emailUser, phone, cobrandComunityId, groupMitraAsuhId\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const editStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, sekolah, phone, cobrandComunityId, groupMitraAsuhId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                _id: localStorage.getItem('staffSelected')\n            },\n            newKeyValues: {\n                userName, password, userType, cobrandEmail, userLevel, emailUser, sekolah, phone, cobrandComunityId, groupMitraAsuhId\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        adminEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n                localStorage.removeItem('staffSelected');\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const deleteStaff = (cobrandEmail, staffId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                _id: staffId[0]\n            }\n        }\n        adminDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('User \"' + staffId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('User \"' + staffId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addCommunity = (cobrandComunityName, cobrandEmail, partComunityId, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let partCom = cobrandComunityName + \"-\" + partComunityId\n        let data = {\n            cobrandComunityId: cobrandComunityName,\n            cobrandComunityName,\n            cobrandEmail,\n            partComunityId: partCom\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        communityAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/komunitas');\n                dispatch(alertSuccess('Komunitas \"' + cobrandComunityName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Komunitas \"' + cobrandComunityName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addSchoolGroup = (groupMitraAsuhName, cobrandEmail, memberSekolah, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            groupMitraAsuhId: groupMitraAsuhName,\n            groupMitraAsuhName,\n            cobrandEmail,\n            memberSekolah\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        schoolGroupAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/school-group');\n                dispatch(alertSuccess('Kelompok mitra asuh \"' + groupMitraAsuhName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kelompok mitra asuh \"' + groupMitraAsuhName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addPraytimeMessage = (prayDate, shubuh, dzuhur, ashr, maghrib, isya, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            prayDate, shubuh, dzuhur, ashr, maghrib, isya\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        praytimeMessageEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/praytime-message');\n                dispatch(alertSuccess('Hadits/Pesan untuk tanggal \"' + prayDate + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Hadits/Pesan untuk tanggal \"' + prayDate + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const editPraytimeMessage = (_id, prayDate, shubuh, dzuhur, ashr, maghrib, isya, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {\n                _id\n            },\n            newValues: {\n                prayDate, shubuh, dzuhur, ashr, maghrib, isya\n            }\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        praytimeMessageAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/cms/praytime-message');\n                dispatch(alertSuccess('Hadits/Pesan untuk tanggal \"' + prayDate + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Hadits/Pesan untuk tanggal \"' + prayDate + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const deleteCommunity = (cobrandEmail, communityId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandComunityId: communityId[0]\n            }\n        }\n        communityDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Komunitas \"' + communityId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Komunitas \"' + communityId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const deleteSchoolGroup = (cobrandEmail, schoolGroupId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                groupMitraAsuhId: schoolGroupId[0]\n            }\n        }\n        schoolGroupDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Kelompok mitra asuh \"' + schoolGroupId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Kelompok mitra asuh \"' + schoolGroupId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const deletePraytimeMessage = (cobrandEmail, praytimeMessageId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                _id: praytimeMessageId[0]\n            }\n        }\n        praytimeMessageDelete(deleting)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(alertSuccess('Hadits/Pesan tanggal \"' + praytimeMessageId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                // console.log(error);\n                dispatch(alertError('Hadits/Pesan tanggal \"' + praytimeMessageId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber, community, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        // console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                // console.log('Success:', response.data);\n                let userCommunity = [];\n                communityMemberDelete({whereValues: {emailUser: oldEmail}})\n                .then(response2 => {\n                    console.log(response2.data);\n                    community.map(e => {\n                        let param = {\n                            cobrandComunityId: e.value,\n                            emailUser: emailUser\n                        }\n                        userCommunity.push(communityMemberAddAsync(param));\n                    })\n                    history.push('/cms/user');\n                        dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                });\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        // console.log(data);\n    }\n\n}\n\nexport const childControl = (userEmail, isModeAsuh, appLimitBlock, modeAsuh, deviceSchedule, setReload, setPageLoading, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        setPageLoading(true);\n        var promises = [];\n\n        //block limit app\n        for(var i = 0; i < appLimitBlock.length; i++) {\n            let x = appLimitBlock[i];\n            if(x.isChanged) {\n                if(x._id === '') {\n                    if(x.mode === '1') {\n                        let prm = {\n                            emailUser: userEmail,\n                            appId: x.packageId,\n                            limit: 0,\n                            appCategory: x.appCategory,\n                            status: ''\n                        }\n                        const pro = appBlockLimitAdd(prm);\n                        promises.push(pro);\n                    }\n                    else if(x.mode === '2') {\n                        let prm = {\n                            emailUser: userEmail,\n                            appId: x.packageId,\n                            limit: x.limit,\n                            appCategory: x.appCategory,\n                            status: ''\n                        }\n                        const pro = appBlockLimitAdd(prm);\n                        promises.push(pro);\n                    }\n                }\n                else {\n                    if(x.mode === '0') {\n                        let prm = {\n                            whereValues: {\n                                emailUser: userEmail,\n                                appId: x.packageId\n                            }\n                        }\n                        const pro = appBlockLimitDelete(prm);\n                        promises.push(pro);\n                    }\n                    else if(x.mode === '1') {\n                        let prm = {\n                            whereValues: {\n                                emailUser: userEmail,\n                                appId: x.packageId\n                            },\n                            newValues: {\n                                limit: 0\n                            }\n                        }\n                        const pro = appBlockLimitEdit(prm);\n                        promises.push(pro);\n                    }\n                    else if(x.mode === '2') {\n                        let prm = {\n                            whereValues: {\n                                emailUser: userEmail,\n                                appId: x.packageId\n                            },\n                            newValues: {\n                                limit: x.limit\n                            }\n                        }\n                        const pro = appBlockLimitEdit(prm);\n                        promises.push(pro);\n                    }\n                }\n            }\n        }\n\n        //mode asuh\n        // if(isModeAsuh) {\n        //     let prm = {\n        //         whereValues: {\n        //             emailUser: userEmail\n        //         }\n        //     }\n        //     const pro = modeAsuhDelete(prm);\n        //     promises.push(pro);\n        // }\n        let prm = {\n            emailUser: userEmail,\n            modeAsuhName: modeAsuh\n        }\n        const pro = modeAsuhAdd(prm);\n        promises.push(pro);\n\n        //jadwal penguncian\n        for(var j = 0; j < deviceSchedule.length; j++) {\n            let x = deviceSchedule[j];\n            if(x.willBeRemoved) {\n                let prm = {\n                    whereValues: {\n                        _id: x._id\n                    }\n                }\n                const pro = deviceScheduleDelete(prm);\n                promises.push(pro);\n            }\n            else {\n                if(x._id !== '') {\n                    let prm = {\n                        whereValues: {\n                            _id: x._id\n                        },\n                        newValues: {\n                            scheduleName: x.scheduleName,\n                            scheduleDescription: x.scheduleDescription,\n                            scheduleType: x.schedule,\n                            deviceUsageDays: x.deviceUsageDays,\n                            deviceUsageStartTime: x.deviceUsageStartTime,\n                            deviceUsageEndTime: x.deviceUsageEndTime,\n                            status: x.status\n                        }\n                    }\n                    const pro = deviceScheduleEdit(prm);\n                    promises.push(pro);\n                }\n                else {\n                    let prm = x;\n                    const pro = deviceScheduleAdd(prm);\n                    promises.push(pro);\n                }\n            }\n        }\n\n        Promise.all(promises)\n        .then((response) => {\n            setTimeout(() => {\n                setReload(true);\n            }, 1000);\n            setTimeout(() => {\n                setReload(false);\n                setPageLoading(false);\n                \n                dispatch(alertSuccess('Pengguna Anak \"' + userEmail + '\" berhasil dikontrol.'));\n                dispatch(loadingStop());\n            }, 1000);\n        })\n        \n    }\n\n}\n\nexport const schoolControl = (userEmails, appWhiteListId, deviceSchedule, sekolah, setReload, setLoading) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        setLoading(true);\n\n        alwaysOnAppsDelete({\n            sekolah: sekolah\n        })\n        .then(() => {\n            var promises = [];\n            for(var j = 0; j < deviceSchedule.length; j++) {\n                let x = deviceSchedule[j];\n                if(x.willBeRemoved) {\n                    if(x._id !== ''){\n                        let prm = {\n                            whereValues: {\n                                scheduleName: {\n                                    \"$regex\": sekolah\n                                }\n                            }\n                        }\n                        const pro = deviceScheduleDelete(prm);\n                        promises.push(pro);\n                    }\n                }\n                else {\n                    if(x._id !== '') {\n                        let prm = {\n                            whereValues: {\n                                scheduleName: {\n                                    \"$regex\": sekolah\n                                }\n                            },\n                            newValues: {\n                                scheduleName: x.scheduleName,\n                                scheduleDescription: x.scheduleDescription,\n                                scheduleType: x.schedule,\n                                deviceUsageDays: x.deviceUsageDays,\n                                deviceUsageStartTime: x.deviceUsageStartTime,\n                                deviceUsageEndTime: x.deviceUsageEndTime,\n                                status: x.status\n                            }\n                        }\n                        const pro = deviceScheduleEdit(prm);\n                        promises.push(pro);\n                    }\n                    else {\n                        let prm = x;\n                        for(var k = 0; k < userEmails.length; k++) {\n                            prm[\"emailUser\"] = userEmails[k];\n                            let pro = deviceScheduleAdd(prm);\n                            promises.push(pro);\n                        }\n                    }\n                }\n            }\n            let apid = [];\n            for(var t = 0; t < appWhiteListId.length; t++) {\n                apid.push(appWhiteListId[t].value);\n            }\n            let params = {\n                sekolah: sekolah,\n                applications: apid\n            }\n            let prox = alwaysOnAppsAdd(params);\n            promises.push(prox);\n\n\n            Promise.all(promises)\n            .then((response) => {\n                setTimeout(() => {\n                    setReload(true);\n                }, 1000);\n                setTimeout(() => {\n                    setReload(false);\n                    setLoading(false);\n                    dispatch(alertSuccess('Seluruh murid sekolah berhasil dikontrol.'));\n                    dispatch(loadingStop());\n                }, 1000);\n            })\n            .catch(error => {\n                console.log('error: ', error);\n                setLoading(false);\n            })\n        })\n\n        \n\n       \n\n    }\n\n}\n\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport './SchoolControl.scss';\nimport './../../../components/UI/Table/Table.scss'\nimport TimePicker from 'react-time-picker';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { getUserList, getAppDetailList, getDeviceScheduleList, getAlwaysOnApps } from './../../../components/API/filter'\nimport { schoolControl } from '../../../store/actions/dashboard';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport InputComponent from '../../../components/UI/Input/Input';\nimport {absStart} from '../GlobalParam';\nimport { getEmbedUrl } from '../../../helpers/fileHelper/fileHelper'\nimport AsyncSelect from 'react-select/async';\nimport { FiPlus } from 'react-icons/fi'\n\nfunction SchoolControl({\n    onSchoolControl,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).cobrandEmail;\n    const sekolah = JSON.parse(localStorage.getItem('userData')).sekolah;\n\n    const [isPageLoading, setPageLoading] = useState(true);\n\n    const [modeAsuh, setModeAsuh] = useState('normal')\n    const [isModeAsuh, setIsModeAsuh] = useState(false);\n\n    const [isReload, setReload] = useState(false);\n\n    const [whitelist, setWhitelist] = useState([]);\n\n    const [userEmails, setUserEmails] = useState([]);\n    const [isDeleted, setDeleted] = useState(false);\n\n    const [isScheduleAdded, setScheduleAdded] = useState([]);\n    const [scheduleCount, setScheduleCount] = useState(0);\n\n    // const [categoryList, setCategoryList] = useState([]);\n    // const [audience, setAudience] = useState([]);\n    // const [responseCount, setResponseCount] = useState(1);\n\n    const colourStyles = {\n        control: styles => ({ ...styles, backgroundColor: '#cccccc66', width: '40%', border: 'none' }),\n    };\n\n    const loadOptions = (inputValue, callback) => {\n        setTimeout(() => {\n          getAppDetailList({\n            whereKeyValues: {\n              appName: {\n                \"$regex\": inputValue,\n                \"$options\": \"i\"\n              }\n            },\n            orderKeyValues: {\n              appName: 1\n            },\n            limit: 20\n          })\n          .then(response => {\n            console.log(response.data);\n            const options = [];\n            response.data.appIcons.forEach(e => {\n                options.push({\n                    label: e.appName + \" (\" + e.appId + \")\",\n                    value: e.appId\n                })\n            });\n            callback(options);\n        })\n          .catch(error => {\n              callback([]);\n          });\n        }, 500);\n      };\n\n    useEffect(() => {\n        let param = {\n            whereKeyValues: {\n                packageId: \"com.byasia.ruangortu\",\n                \"childInfo.schoolName\": sekolah,\n                dateCreated: {\n                    \"$gte\": absStart.toISOString().split(\"T\")[0]\n                },\n                // emailUser: {\n                //     \"$nin\": emailTester\n                // }\n            },\n            orderKeyValues: {\n                nameUser: 1\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        }  \n\n        let paramSchedule = {\n            whereKeyValues: {\n                scheduleName: {\n                    \"$regex\": sekolah\n                }\n            }\n        }\n\n        let paramAlwaysOn = {\n            whereKeyValues: {\n                sekolah: sekolah\n            }\n        }\n\n        const userList = getUserList(param);\n        const deviceUsageList = getDeviceScheduleList(paramSchedule);\n        const alwaysOnList = getAlwaysOnApps(paramAlwaysOn);\n\n        Promise.all([userList, deviceUsageList, alwaysOnList]).then(response => {\n            let p = [];\n            response[0].data.users.forEach(x => {\n                p.push(x.emailUser);\n            })\n            setUserEmails(p);\n            console.log(\"Bjir lu net\")\n            setScheduleAdded(response[1].data.deviceUsageSchedules.slice(0,1));\n            console.log(\"Bjir lu net2\")\n\n            let z = response[2].data.resultData;\n            console.log(z);\n            if(z.length > 0) {\n                let y = z[0].applications;\n                console.log(z);\n                getAppDetailList({\n                    whereKeyValues: {\n                        appId: {\n                            \"$in\": y\n                        }\n                    }\n                })\n                .then(res => {\n                    console.log(res);\n                    let options = [];\n                    res.data.appIcons.forEach(e => {\n                        options.push({\n                            label: e.appName + \" (\" + e.appId + \")\",\n                            value: e.appId\n                        })\n                    });\n                    setWhitelist(options);\n                    setPageLoading(false);\n                    setPageLoading(true);\n                    setPageLoading(false);\n                })\n            }\n            else {\n                setPageLoading(false);\n            }\n            // setPageLoading(false);\n        })\n    }, [isReload])\n\n    if(isLoading || isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName={'Kontrol Murid Sekolah'} />\n            <Formik\n                initialValues={{\n                    appWhiteListId: whitelist,\n                    deviceSchedule: isScheduleAdded[0] ? [isScheduleAdded[0]] : []\n                }}\n                // validationSchema={validationStepEdit}\n                // validateOnChange={true}\n                onSubmit={values => {\n                    onSchoolControl(userEmails, values.appWhiteListId, values.deviceSchedule, sekolah, setReload, setPageLoading)\n                }}\n            >\n\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"SchoolControl\">\n                            {/* <div className=\"form-group\">\n                                <label>Mode Asuh</label>\n                                <select value={values.modeAsuhSelected} onChange={(e) => {\n                                    setFieldValue('modeAsuhSelected', e.currentTarget.value);\n                                }}>\n                                    <option value='normal'>Normal</option>\n                                    <option value='diawasi'>Diawasi</option>\n                                    <option value='dihukum'>Dihukum</option>\n                                </select>\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label>Jadwal Belajar Sekolah </label>\n                                {values.deviceSchedule.length <= 0 || isDeleted ? <button type=\"button\" onClick={() => {\n                                    if(isDeleted) {\n                                        setFieldValue(`deviceSchedule.${0}.willBeRemoved`, false);\n                                    }\n                                    else {\n                                        let p = {\n                                            _id: '',\n                                            scheduleName: 'Jadwal Belajar ' + sekolah,\n                                            scheduleDescription: '',\n                                            scheduleType: 'harian',\n                                            deviceUsageDays: [],\n                                            deviceUsageStartTime: '07:00',\n                                            deviceUsageEndTime: '15:00',\n                                            status: 'aktif',\n                                            willBeRemoved: false\n                                        }\n                                        let q = values.deviceSchedule;\n                                        q.push(p);\n                                        setFieldValue('deviceSchedule', q);\n                                    }\n                                    setDeleted(false);\n                                }} id=\"add_schedule\">\n                                    <FiPlus className=\"IconAdd\"/>\n                                    <span>Tambah Jadwal</span></button> : null}\n                                <table>\n                                    <tr>\n                                        <th>Nama Jadwal</th>\n                                        <th>Deskripsi</th>\n                                        {/* <th>Harian/Terjadwal</th> */}\n                                        <th>Hari</th>\n                                        <th>Waktu Mulai</th>\n                                        <th>Waktu Selesai</th>\n                                        <th>Action</th>\n                                    </tr>\n                                    {values.deviceSchedule.map((x, index) => {\n                                        console.log(x)\n                                        if(!x.willBeRemoved) return (<tr>\n                                            <td>\n                                                {/* <InputComponent\n                                                    name=\"scheduleName\"\n                                                    className=\"form-group__input\"\n                                                    value={x.scheduleName}\n                                                    type=\"text\"\n                                                    onChange={(e) => {\n                                                        setFieldValue(`deviceSchedule.${index}.scheduleName`, e.target.value);\n                                                    }}\n                                                /> */}\n                                                <p>{x.scheduleName}</p>\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"scheduleDescription\"\n                                                    className=\"form-group__input\"\n                                                    value={x.scheduleDescription}\n                                                    type=\"text\"\n                                                    onChange={(e) => {\n                                                        setFieldValue(`deviceSchedule.${index}.scheduleDescription`, e.target.value);\n                                                    }}\n                                                />\n                                            </td>\n                                            {/* <td>\n                                                <select onChange={(e) => {\n                                                    if(e.target.value === 'harian') {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageStartTime`, '00:00');\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, '00:01');\n                                                    }\n                                                    else {\n                                                        console.log(new Date().toLocaleDateString('id-ID'));\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageStartTime`, new Date().toLocaleDateString('id-ID'));\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, new Date().toLocaleDateString('id-ID'));\n                                                    }\n                                                    setFieldValue(`deviceSchedule.${index}.scheduleType`, e.target.value);\n                                                }}>\n                                                    <option value=\"harian\">Harian</option>\n                                                </select>\n                                            </td> */}\n                                            <td>\n                                                {['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'].map((y) => {\n                                                    return <label><input type=\"checkbox\" name={y} value={y}\n                                                        checked={x.deviceUsageDays.includes(y)}\n                                                        onChange={(e) => {\n                                                            var p = x.deviceUsageDays;\n                                                            let indexArr = p.indexOf(e.target.value);\n                                                            if(indexArr >= 0) {\n                                                                p.splice(indexArr, 1);\n                                                            }\n                                                            else {\n                                                                p.push(e.target.value);\n                                                            }\n                                                            setFieldValue(`deviceSchedule.${index}.deviceUsageDays`, p);\n                                                        }}\n                                                    />{y}</label>\n                                                })}\n                                            </td>\n                                            <td>\n                                                <TimePicker\n                                                    locale=\"id-ID\"\n                                                    format=\"HH:mm\"\n                                                    disableClock={true}\n                                                    value={x.deviceUsageStartTime}\n                                                    onChange={(value) => {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageStartTime`, value);\n                                                    }}\n                                                />\n                                            </td>\n                                            <td>\n                                                <TimePicker\n                                                    locale=\"id-ID\"\n                                                    format=\"HH:mm\"\n                                                    disableClock={true}\n                                                    value={x.deviceUsageEndTime}\n                                                    onChange={(value) => {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, value);\n                                                    }}\n                                                />\n                                            {/* {x.scheduleType === 'harian' ? <span>\n                                                <InputComponent\n                                                    name=\"endHour\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={parseInt(x.deviceUsageEndTime.split(':')[0])}\n                                                    min={0}\n                                                    max={23}\n                                                    onChange={(e) => {\n                                                        var h = e.target.value.toString();\n                                                        var m = x.deviceUsageEndTime.split(':')[1]\n                                                        if(h.length < 2) m = '0' + h;\n                                                        var str = h + \":\" + m;\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, str);\n                                                    }}\n                                                /> : <InputComponent\n                                                    name=\"endMinute\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={parseInt(x.deviceUsageEndTime.split(':')[0])}\n                                                    min={0}\n                                                    max={59}\n                                                    onChange={(e) => {\n                                                        var h = x.deviceUsageEndTime.split(':')[0];\n                                                        var m = e.target.value.toString();\n                                                        if(m.length < 2) m = '0' + m;\n                                                        var str = h + \":\" + m;\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, str);\n                                                    }}\n                                                />\n                                                </span>\n                                                :\n                                                <DatePicker\n                                                    selected={new Date(x.deviceUsageEndTime)}\n                                                    onChange={(date) => {\n                                                        setFieldValue(`deviceSchedule.${index}.deviceUsageEndTime`, date.toLocaleDateString(\"id-ID\"));\n                                                    }}\n                                                />\n                                                } */}\n                                            </td>\n                                            <td>\n                                                <button type=\"submit\" onClick={() => {\n                                                    setFieldValue(`deviceSchedule.${index}.willBeRemoved`, true);\n                                                    setDeleted(true);\n                                                }}>\n                                                    Hapus\n                                                </button>\n                                            </td>\n                                            {/* <td onChange={(e) => {\n                                                console.log(e);\n                                                console.log(values.appLimitBlock[index].mode);\n                                                setFieldValue(`appLimitBlock.${index}.mode`, e.target.value);\n                                                setFieldValue(`appLimitBlock.${index}.isChanged`, true);\n                                                if(e.target.value === 2) setFieldValue(`appLimitBlock.${index}.limit`, 1);\n                                                console.log(values.appLimitBlock[index].mode);\n                                            }}>\n                                                <label><input type=\"radio\" value={1} na me={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 1} />Ya</label>\n                                                <label><input type=\"radio\" value={0} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 0} />Tidak</label>\n                                                <label><input type=\"radio\" value={2} name={'block_status_' + index.toString()} checked={values.appLimitBlock[index].mode === 2} />Pakai Limit Penggunaan</label>\n                                            </td>\n                                            <td>\n                                                <InputComponent\n                                                    name=\"limit\"\n                                                    className=\"form-group__input\"\n                                                    type=\"number\"\n                                                    value={values.appLimitBlock[index].limit}\n                                                    min={1}\n                                                    disabled={values.appLimitBlock[index].mode !== 2}\n                                                    onChange={(e) => {\n                                                        setFieldValue(`appLimitBlock.${index}.limit`, e.target.value);\n                                                    }}\n                                                />\n                                            </td> */}\n                                        </tr>)\n                                    })}\n                                </table>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Aplikasi yang Diperbolehkan</label>\n                                <AsyncSelect\n                                    cacheOptions defaultOptions isMulti\n                                    defaultValue={values.appWhiteListId}\n                                    styles={colourStyles}\n                                    placeholder={\"Pilih aplikasi...\"} loadOptions={loadOptions} onChange={(value) => {\n                                        console.log(value);\n                                        setFieldValue('appWhiteListId', value);\n                                    }}\n                                />\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>Isi Tahap</label>\n                                {values.contentType === \"Artikel\" || \"Ujian\" ? (\n                                    <SunEditor \n                                    setOptions={{\n                                        buttonList: editorButtonList,\n                                        imageWidth: '360px'\n                                    }}\n                                    onChange={(content) => {\n                                        setFieldValue('contents', content);\n                                    }}\n                                    height='500px'/>\n                                    // <Editor\n                                    //     editorState={artikel}\n                                    //     toolbarClassName=\"toolbarClassName\"\n                                    //     wrapperClassName=\"wrapperClassName\"\n                                    //     editorClassName=\"editorClassName\"\n                                    //     onEditorStateChange={(editorState) => setArtikel(editorState)}\n                                    //     // onEditorStateChange={updateTextDescription}\n                                    //     // value={description.values}\n                                    //     value={draftToHtml(convertToRaw(artikel.getCurrentContent()))}\n                                    //     // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                    //     name=\"contents\"\n                                    //     toolbar={{\n                                    //         list: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         textAlign: {\n                                    //             inDropdown: true,\n                                    //         },\n                                    //         image: {\n                                    //             uploadEnabled: true,\n                                    //             alignmentEnabled: true,\n                                    //             previewImage: true,\n                                    //             uploadCallback: uploadCallback,\n                                    //             inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         },\n                                    //         embedded:{\n                                    //             embedCallback: embedVideoCallBack,\n                                    //             defaultSize: {\n                                    //                 height: 'auto',\n                                    //                 width: '360px',\n                                    //             },\n                                    //         }\n                                    //     }}\n                                    //     onChange={() => {\n                                    //         // setTextValue(editorState);\n                                    //         // setFieldValue(\"contentDescription\", description);\n                                    //         setFieldValue('contents', draftToHtml(convertToRaw(artikel.getCurrentContent())));\n                                    //         // // console.log(textDeskripsi);\n                                    //         // // console.log(values.contents)\n                                    //     }}\n\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    // <img src={conFromImgVid}></img>\n\n                                    <InputComponent\n                                        type=\"file\"\n                                        className=\"form-group__input\"\n                                        name=\"contents\"\n                                        onBlur={handleBlur}\n                                        // value={values.contents}\n                                        // onChange={handleChange}\n                                        onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            // console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contents\", file);\n                                        }\n                                    }}\n                                    />\n\n                                    // <InputComponent\n                                    //     type=\"text\"\n                                    //     name=\"contents\"\n                                    //     className=\"form-group__input form-group__input--fullwidth\" \n                                    //     placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    //     value={values.contents}\n                                    //     onChange={handleChange}\n                                    //     onBlur={handleBlur}\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Video\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Pdf URL... (just for pdf file)\"\n                                        // placeholder={values.contents}\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    // untuk internal masih diupdate\n                                    //url ok\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            <div>\n                            {responseCount === 0 ? \n                            <div className=\"form-group\">\n                                <label>{\"Jumlah Respon/Jawaban di Setiap Tahap\"}</label>\n                                <InputComponent \n                                    type=\"number\"\n                                    className=\"form-group__input\"\n                                    value={resCount}\n                                    min={1}\n                                    max={100}\n                                    onChange={(e) => {\n                                        // console.log(e.currentTarget.value);\n                                        e.currentTarget.value = e.currentTarget.value.replace(/^0+/, '');\n                                        // console.log('After', e.currentTarget.value);\n                                        if(e.currentTarget.value) {\n                                            // console.log('Yes masuk');\n                                            if(resCount > e.currentTarget.value) {\n                                                var y = values.response;\n                                                if(values.response.length > 0 && values.answerKey === values.response[values.response.length-1] && localStorage.getItem('programCategory') === 'Ujian') setFieldValue('answerKey', values.response[0])\n                                                y.splice(e.currentTarget.value-resCount, resCount-e.currentTarget.value);\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            else {\n                                                // // console.log(\"Nambah loh\");\n                                                var y = values.response;\n                                                for(var j = 0; j < e.currentTarget.value-resCount; j++) {\n                                                    // console.log(\"Ini nambah?\");\n                                                    y.push('');\n                                                }\n                                                // // console.log('Panjang respon: ' + y.length)\n                                                setFieldValue('response', y);\n                                            }\n                                            setResCount(e.currentTarget.value)\n                                        }\n                                        else {\n                                            setResCount(0);\n                                            setFieldValue('response', []);\n                                        }\n                                    }}\n                                    disabled={false}\n                                />\n                            </div> : null\n                            }\n                            <div className=\"form-group\">\n                                <label>Respon/Jawaban</label>\n                                {values.response.map((res, index) => {\n                                    // console.log(\"Content response:\", res)\n                                    return <InputComponent\n                                        type=\"text\"\n                                        name=\"response\"\n                                        className=\"form-group__input form-group__input--halfwidth\"\n                                        placeholder=\"Example\"\n                                        value={res}\n                                        onChange={(e) => {\n                                            var x = '';\n                                            for(var i = 0; i < e.currentTarget.value.length; i++) {\n                                                if(e.currentTarget.value.charAt(i) !== '.') x += e.currentTarget.value.charAt(i);\n                                                else x += '․';\n                                            }\n                                            setFieldValue(`response.${index}`, x);\n                                        }}\n                                        onBlur={handleBlur}\n                                    />\n                                })}\n                            </div>\n                            {localStorage.getItem('programCategory') === 'Ujian' ? (\n                                <div className=\"form-group\">\n                                    <label>Kunci Jawaban</label>\n                                    <select\n                                        name=\"answerKey\"\n                                        value={values.answerKey}\n                                        onChange={(e) => {\n                                            setFieldValue('answerKey', e.currentTarget.value)\n                                        }}\n                                    >\n                                        <option value='-1' disabled>{\" \"}</option>\n                                        {\n                                            values.response.map((category) => {\n                                                return (\n                                                    <option value={category}>{category}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            ) : null} */}\n                                <button className=\"btn btn-submit\" type=\"submit\">\n                                    Simpan\n                                </button>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {/* {console.log(isLoading)} */}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    // console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSchoolControl: ( userEmails, appWhiteListId, deviceSchedule, sekolah, setReload, setLoading ) =>\n            dispatch(schoolControl( userEmails, appWhiteListId, deviceSchedule, sekolah, setReload, setLoading ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SchoolControl)\n","export const emailTester = [\"singgih.zuliangga@defghi.id\", \"ortuasiaparent01@gmail.com\", \"ortuasiaparent02@gmail.com\", \"ortuasiachild01@gmail.com\", \"ortuasiachild02@gmail.com\", \"yaswin.rw@gnail.com\", \"yaswin.retdy@gmail.com\", \"rickotesting@gmail.com\", \"kartono@defghi.id\", \"kartono.cc@gmail.com\", \"mirza.dzaky.azizi@gmail.com\", \"helwaanyapanjang@gmail.com \", \"uwawwaunch@gmail.com\", \"ilhamanwar@gmail.com\", \"ricky.rachadi@gmail.com\", \"ruangortuchild@gmail.com\", \"gowesjersey02@gmail.com\", \"hafizh.dary@defghi.id\", \"hafizhd.jp@gmail.com\", \"abcwirayudaha56@gmail.com\", \"hervyguitar@gmai.com\", \"rickorajagukguk23@gmail.com\", \"ortuasiatestchild@gmail.com\", \"ortuasiatestparent@gmail.com\", \"roichildtest01@gmail.com\", \"roiparenttest01@gmail.com\", \"ruangortutesting02@gmail.com\", \"ruangortutesting01@gmail.com\", \"ruangortuchild2@gmail.com\", \"ruangortuparent@gmail.com\", \"ruangortutesting01@gmail.com\"];\nexport const absStart = new Date(\"2022-08-13\");","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAddAsync = async (query) => await axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityMemberAddAsync = async (query) => await axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const communityMemberDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const schoolGroupAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandGroupMitraAsuhAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const schoolGroupDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandGroupMitraAsuhRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const praytimeMessageAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/prayAlertMessageAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const praytimeMessageEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/prayAlertMessageUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const praytimeMessageDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/prayAlertMessageRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appBlockLimitAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const appBlockLimitEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const appBlockLimitDelete = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const modeAsuhAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const modeAsuhEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const modeAsuhDelete = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const deviceScheduleAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const deviceScheduleEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const deviceScheduleDelete = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const alwaysOnAppsAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/appAlwaysOnBySekolahAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\n// export const alwaysOnAppsEdit = (query) => axios({\n//     method: 'post',\n//     url: url + '/user/appAlwaysOnBySekolahUpdate',\n//     data: query,\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n// })\n\nexport const alwaysOnAppsDelete = (query) => axios({\n    method: 'post',\n    url: url + '/user/appAlwaysOnBySekolahRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { N as handleInputChange, a as _objectSpread2 } from './index-a7690a33.esm.js';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useRef, useState, useEffect, useCallback } from 'react';\n\nvar _excluded = [\"defaultOptions\", \"cacheOptions\", \"loadOptions\", \"options\", \"isLoading\", \"onInputChange\", \"filterOption\"];\nfunction useAsync(_ref) {\n  var _ref$defaultOptions = _ref.defaultOptions,\n      propsDefaultOptions = _ref$defaultOptions === void 0 ? false : _ref$defaultOptions,\n      _ref$cacheOptions = _ref.cacheOptions,\n      cacheOptions = _ref$cacheOptions === void 0 ? false : _ref$cacheOptions,\n      propsLoadOptions = _ref.loadOptions;\n      _ref.options;\n      var _ref$isLoading = _ref.isLoading,\n      propsIsLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      propsOnInputChange = _ref.onInputChange,\n      _ref$filterOption = _ref.filterOption,\n      filterOption = _ref$filterOption === void 0 ? null : _ref$filterOption,\n      restSelectProps = _objectWithoutProperties(_ref, _excluded);\n\n  var propsInputValue = restSelectProps.inputValue;\n  var lastRequest = useRef(undefined);\n  var mounted = useRef(false);\n\n  var _useState = useState(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultOptions = _useState2[0],\n      setDefaultOptions = _useState2[1];\n\n  var _useState3 = useState(typeof propsInputValue !== 'undefined' ? propsInputValue : ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateInputValue = _useState4[0],\n      setStateInputValue = _useState4[1];\n\n  var _useState5 = useState(propsDefaultOptions === true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadedInputValue = _useState8[0],\n      setLoadedInputValue = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loadedOptions = _useState10[0],\n      setLoadedOptions = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passEmptyOptions = _useState12[0],\n      setPassEmptyOptions = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      optionsCache = _useState14[0],\n      setOptionsCache = _useState14[1];\n\n  var _useState15 = useState(undefined),\n      _useState16 = _slicedToArray(_useState15, 2),\n      prevDefaultOptions = _useState16[0],\n      setPrevDefaultOptions = _useState16[1];\n\n  var _useState17 = useState(undefined),\n      _useState18 = _slicedToArray(_useState17, 2),\n      prevCacheOptions = _useState18[0],\n      setPrevCacheOptions = _useState18[1];\n\n  if (cacheOptions !== prevCacheOptions) {\n    setOptionsCache({});\n    setPrevCacheOptions(cacheOptions);\n  }\n\n  if (propsDefaultOptions !== prevDefaultOptions) {\n    setDefaultOptions(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined);\n    setPrevDefaultOptions(propsDefaultOptions);\n  }\n\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  var loadOptions = useCallback(function (inputValue, callback) {\n    if (!propsLoadOptions) return callback();\n    var loader = propsLoadOptions(inputValue, callback);\n\n    if (loader && typeof loader.then === 'function') {\n      loader.then(callback, function () {\n        return callback();\n      });\n    }\n  }, [propsLoadOptions]);\n  useEffect(function () {\n    if (propsDefaultOptions === true) {\n      loadOptions(stateInputValue, function (options) {\n        if (!mounted.current) return;\n        setDefaultOptions(options || []);\n        setIsLoading(!!lastRequest.current);\n      });\n    } // NOTE: this effect is designed to only run when the component mounts,\n    // so we don't want to include any hook dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  var onInputChange = useCallback(function (newValue, actionMeta) {\n    var inputValue = handleInputChange(newValue, actionMeta, propsOnInputChange);\n\n    if (!inputValue) {\n      lastRequest.current = undefined;\n      setStateInputValue('');\n      setLoadedInputValue('');\n      setLoadedOptions([]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n      return;\n    }\n\n    if (cacheOptions && optionsCache[inputValue]) {\n      setStateInputValue(inputValue);\n      setLoadedInputValue(inputValue);\n      setLoadedOptions(optionsCache[inputValue]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n    } else {\n      var request = lastRequest.current = {};\n      setStateInputValue(inputValue);\n      setIsLoading(true);\n      setPassEmptyOptions(!loadedInputValue);\n      loadOptions(inputValue, function (options) {\n        if (!mounted) return;\n        if (request !== lastRequest.current) return;\n        lastRequest.current = undefined;\n        setIsLoading(false);\n        setLoadedInputValue(inputValue);\n        setLoadedOptions(options || []);\n        setPassEmptyOptions(false);\n        setOptionsCache(options ? _objectSpread2(_objectSpread2({}, optionsCache), {}, _defineProperty({}, inputValue, options)) : optionsCache);\n      });\n    }\n  }, [cacheOptions, loadOptions, loadedInputValue, optionsCache, propsOnInputChange]);\n  var options = passEmptyOptions ? [] : stateInputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n  return _objectSpread2(_objectSpread2({}, restSelectProps), {}, {\n    options: options,\n    isLoading: isLoading || propsIsLoading,\n    onInputChange: onInputChange,\n    filterOption: filterOption\n  });\n}\n\nexport { useAsync as u };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { S as Select } from '../../dist/Select-e6f4af24.esm.js';\nimport { u as useStateManager } from '../../dist/useStateManager-68425271.esm.js';\nimport { u as useAsync } from '../../dist/useAsync-9deee0fa.esm.js';\nexport { u as useAsync } from '../../dist/useAsync-9deee0fa.esm.js';\nimport '../../dist/index-a7690a33.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'memoize-one';\n\nvar AsyncSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var stateManagedProps = useAsync(props);\n  var selectProps = useStateManager(stateManagedProps);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, selectProps));\n});\n\nexport default AsyncSelect;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getContentResponseList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userContentResponFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getContentViewList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userContentViewFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getAdminList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getCommunityList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getCommunityMemberList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getSchoolList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/AlAzharSchoolFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getSchoolGroupList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandGroupMitraAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getPraytimeMessageList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/prayAlertMessageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getUserInstalledApps = (query) => axios({\n    method: 'post',\n    url: url + '/user/appDeviceFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getAlwaysOnApps = (query) => axios({\n    method: 'post',\n    url: url + '/user/appAlwaysOnBySekolahFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});"],"sourceRoot":""}