{"version":3,"sources":["components/API/filter.js","components/API/dashboard.js","store/actions/dashboard.js","containers/CoBrand/Program/components/Columns.js","containers/CoBrand/Program/Program.js","components/UI/Table/Table.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","programEdit","contentAdd","contentEdit","loadingStart","type","AUTH_START","loadingStop","AUTH_FAILED","alertError","message","id","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","programName","ProgramDescription","photo","startDate","endDate","category","targetAudience","contentProg","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","contentPrograms","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","namaTahapan","contentName","contentType","contentSource","contents","topics","targetAudiance","answerKey","push","value","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentDescription","isActive","topic","audi","map","e","contentThumbnail","status","getEmbedUrl","hasil","includes","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","cobrandName","phoneNumber","address","password","email","Object","assign","thumbnail","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","destination","messageSubject","messageContent","useSchedule","scheduleTime","mediaType","schedule","join","addAudience","audianceName","addNotifCategory","description","addProgCategory","addStaff","userName","userType","userLevel","emailUser","phone","addContentTopic","topicName","addScreenTime","controlParameterName","controlParameterValue","unit","editAppUser","nameUser","gender","birdDate","imagePhoto","Columns","setProgramDeleting","Header","accessor","disableFilters","Cell","row","undefined","index","disableSortBy","disableGlobalFilter","cell","to","className","title","onClick","values","replace","connect","state","isCurrentlyLoading","auth","isLoading","onDeleteProgram","deletingProgram","useState","setLoading","programList","setProgramList","programDeleting","userData","parse","getItem","params","whereKeyValues","includeThumbnailData","limit","Number","MAX_SAFE_INTEGER","useEffect","RKLoader","Table","COLUMNS","columns","DATA","programs","renderRowSubComponent","useMemo","useTable","initialState","hiddenColumns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","disabled","defaultValue","onChange","target","placeholder","currentTarget","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","getCellProps","isExpanded","colSpan"],"mappings":"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","file":"static/js/58.cdb2298b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons,\n                    answerKey: x.answerKey\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = (setProgramDeleting) => {\n    return ([\n        {\n            Header: 'ID',\n            accessor: '_id'\n        },\n        {\n            Header: 'Nama Program',\n            accessor: 'programName',\n            disableFilters: true\n        },\n        {\n            Header: 'Kategori Program',\n            accessor: 'category',\n            // Filter: SelectColumnFilter,\n            // filter: 'equals',\n    \n            Cell: ({value, row}) => {\n                if(value !== undefined) return value;\n                else {\n                    if(row.index % 3 === 1) return <p>Pendidikan Agama</p>\n                    else return <p>Pengetahuan Siswa Umum</p>\n                }\n            }\n        },\n        {\n            Header: 'Target Pembaca',\n            accessor: 'targetAudiance',\n            // Filter: SelectColumnFilter,\n            // filter: 'equals',\n            Cell: ({value, row}) => {\n                if(value !== undefined) return value.join(', ');\n                else return <p>Semua</p>\n            }\n        },\n        {\n            Header: 'Status',\n            accessor: 'status',\n            // Filter: SelectColumnFilter,\n            // filter: 'equals'\n        },\n        {\n            Header: 'Action',\n            disableSortBy: true,\n            disableGlobalFilter: true,\n            Cell: ({cell}) => (\n                <>\n                    <NavLink \n                        to=\"/cms/program/view\"\n                        className=\"nav_btn\"\n                        title=\"View Detail\"\n                        onClick={() => {\n                            localStorage.setItem('programSelected', cell.row.values._id)\n                        }}>\n                        <button \n                            className=\"btn_action\">\n                            <div>\n                                <FiEye className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                    <NavLink to=\"/cms/program/edit\"\n                        className=\"nav_btn\"\n                        title=\"Edit Program\"\n                        onClick={() => {\n                            localStorage.setItem('programSelected', cell.row.values._id)\n                        }}>\n                        <button\n                            className=\"btn_action\"\n                        >\n                            <div>\n                                <FiEdit2 className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                    <NavLink to=\"/cms/program\"\n                        className=\"nav_btn\"\n                        title=\"Delete Program\"\n                        onClick={() => {\n                            setProgramDeleting([cell.row.values._id, cell.row.values.programName]);\n                        }}\n                        replace>\n                        <button\n                            className=\"btn_action\"\n                        >\n                            <div>\n                                <FiTrash2 className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                </>\n            )\n        }\n    ]);\n}\n\nexport default Columns;","import  { useState, useEffect } from 'react';\nimport './Program.scss';\nimport TableProgram from './../../../components/UI/Table/Table';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport { deleteProgram } from '../../../store/actions/dashboard';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport axios from 'axios';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport {connect} from 'react-redux';\nimport { getProgramList } from '../../../components/API/filter';\n\n// import Modal from '../../../components/UI/Modal/Modal';\n\nfunction Program({\n    isCurrentlyLoading,\n    onDeleteProgram\n}) {\n    const [showModal, setShowModal] = useState(false);\n\n    const [isLoading, setLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [programDeleting, setProgramDeleting] = useState(null);\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.email\n        },\n        includeThumbnailData :false,\n        limit: Number.MAX_SAFE_INTEGER\n    };\n\n    \n    function retrieveList() {\n        getProgramList(params)\n        .then(response => {\n            setProgramList(response.data);\n            console.log(response.data);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        });\n    }\n    \n    useEffect(() => {\n        setLoading(true);\n        if(localStorage.getItem('programDeleting')) {\n            setProgramDeleting(localStorage.getItem('programDeleting'));\n            localStorage.removeItem('programDeleting');\n        }\n        retrieveList();\n    }, []);\n\n    useEffect(() => {\n        if(programDeleting) {\n            setLoading(true);\n            onDeleteProgram(userData.email, programDeleting, retrieveList);\n        }\n    }, [programDeleting]);\n\n    if(isLoading || isCurrentlyLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"Program\">\n            <h1>PROGRAM</h1>\n            {/* <NavLink to=\"/cms/program/revisilist\" id=\"add_program\">\n                <FiPlus className=\"IconAdd\" />\n               <span>revisilist</span>  \n            </NavLink> */}\n            <NavLink to=\"/cms/program/add\" id=\"add_program\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Buat Program Baru</span>  \n            </NavLink>\n            <div className=\"Program__table\">\n                <TableProgram \n                    COLUMNS={columns(setProgramDeleting)} \n                    DATA={programList.programs}  \n                />\n            </div>\n\n            {/* <button \n                onClick={() => setShowModal(true)}>\n                Show Modal\n            </button> */}\n            \n            {/* <Modal \n                isShow={showModal}\n                onClose={() => setShowModal(false)} \n                onSubmit={submitModal}\n                title=\"Modal Title\"\n            >\n                <p>Hello Worlds</p>\n            </Modal> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isCurrentlyLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteProgram: (email, deletingProgram, retrieveList) => dispatch(deleteProgram(email, deletingProgram, retrieveList))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Program)\n","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n\n    const initialState = { hiddenColumns: ['_id'] };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        initialState\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n"],"sourceRoot":""}