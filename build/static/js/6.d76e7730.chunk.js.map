{"version":3,"sources":["components/UI/Map/Map.js","containers/CoBrand/RedZone/components/Columns.js","containers/CoBrand/RedZone/RedZone.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","components/UI/Table/Table.js"],"names":["Map","ReactMapboxGl","accessToken","GoogleMaps","props","style","containerStyle","height","type","id","layout","coordinates","Columns","Header","accessor","Cell","row","original","lat","lon","className","onClick","console","log","RedZone","Heading","headingName","routes","name","path","Input","placeholder","Table","COLUMNS","DATA","Data","length","map","item","i","exact","to","onChange","onBlur","value","message","isError","memo","data","useMemo","useTable","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps"],"mappings":"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","file":"static/js/6.d76e7730.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = ReactMapboxGl({\n    accessToken:\n      'pk.eyJ1Ijoid2FoeXVhbGZhcmlzaSIsImEiOiJja3B3Mm5ta3QxZ2loMnBxcjUyMXdxaWE4In0.MAGeb1tYnIwwMx9chvnHwg'\n});\n\n\nconst GoogleMaps = (props) => {\n    return (\n        <Map\n          style=\"mapbox://styles/mapbox/streets-v9\"\n          containerStyle={{\n            height: '50vh'\n          }}\n        >\n        <Layer\n          type=\"symbol\" \n          id=\"marker\" \n          layout={{ 'icon-image': 'marker-15' }}\n        >\n          <Feature coordinates={\n              [-0.481747846041145, 51.3233379650232]\n          } />\n        </Layer>\n      </Map>\n    )\n}\n\nexport default GoogleMaps;\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst Columns = [\n    {\n        Header: 'No',\n        accessor: 'id'\n    },\n    {\n        Header: 'Name',\n        accessor: 'name'\n    },\n    {\n        Header: 'Location',\n        accessor: 'location'\n    },\n    {\n        Header: 'Geo Tag',\n        Cell: ({row}) => {\n            return row.original.lat + ' '+row.original.lon;\n        }\n    },\n    {\n        Header: 'Created At',\n        accessor: 'created_at'\n    },\n    {\n        Header: 'Action',\n        Cell: (row) => (\n            <>\n                <button \n                    className=\"btn_action\"\n                    onClick={() => console.log(row)}>\n                    <div>\n                        <FiEye className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiEdit2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                <button\n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiTrash2 className=\"btn_action-icon\" />\n                    </div>\n                </button>\n            </>\n        )\n    }\n];\n\nexport default Columns;","import React from 'react';\nimport './RedZone.scss';\nimport Heading from './../../../components/UI/Heading/Heading';\nimport InputComponent from './../../../components/UI/Input/Input';\nimport MapComponent from './../../../components/UI/Map/Map';\nimport TableRedZone from './../../../components/UI/Table/Table';\nimport Columns from './components/Columns';\nimport Data from './components/redzone.json';\n\n\nfunction RedZone() {\n    return (\n        <div className=\"RedZone\">\n            <Heading headingName=\"Redzone\" routes={[\n                { name: 'Data Redzone' },\n                { path: '/redzone', name: 'List Redzone' }\n            ]} />\n\n            <div className=\"RedZone__map\">\n                <div className=\"RedZone__heading\">\n                    <h3>Map View</h3>\n                    <InputComponent \n                        className=\"Input-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        name=\"search\"\n                    />\n                </div>\n                <div className=\"RedZone__data\">\n                    <MapComponent />\n                </div>\n            </div>\n\n            <div className=\"RedZone__list\">\n                <div className=\"RedZone__heading\">\n                    <h3>Redzone List</h3>\n                    <InputComponent \n                        className=\"Input-control\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        name=\"search\"\n                    />\n                </div>\n                <div className=\"RedZone__data\">\n                    <TableRedZone \n                        COLUMNS={Columns}\n                        DATA={Data}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RedZone\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else return (\n    <>\n        <input\n            name={name}\n            className={className} \n            type={type}\n            placeholder={placeholder}\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n        {isError && (\n            <div className=\"message\">\n                <span className=\"message__error\">{message}</span>\n            </div>\n        )}\n    </>\n    )\n}\n\nexport default memo(Input) \n","import React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    })\n\n    return (\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps()}> {column.render('Header')} </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                            })}\n                        </tr>\n                    )\n                })}\n           </tbody>\n       </table>\n    )\n}\n\nexport default Table\n"],"sourceRoot":""}