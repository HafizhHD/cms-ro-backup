{"version":3,"sources":["helpers/validation/validation.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","containers/CoBrand/Setting/Setting.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","type","size","phoneNumber","matches","address","min","confirmPassword","when","schema","message","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","validationProgramEdit","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","ThemeContext","React","prefixes","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","displayName","Component","defaultProps","BsComponent","ref","className","bsPrefix","as","Tag","props","resolvedPrefix","_jsx","p","CardImg","variant","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","connect","state","isLoading","auth","dispatch","onEditProfile","oldEmail","oldPassword","photo","editProfile","userData","JSON","parse","localStorage","getItem","useState","photoRaw","setPhotoRaw","cover","setCover","photoPreview","setPhotoPreview","useEffect","toBase64","then","result","catch","error","console","log","RKLoader","Heading","headingName","routes","name","initialValues","validationSchema","validateOnChange","onSubmit","values","handleChange","handleBlur","handleSubmit","setFieldValue","touched","errors","Input","onChange","onBlur","isError","Boolean","disabled","placeholder","e","file","currentTarget","files","style","width","borderRadius","backgroundImage","src","textAlign","map","item","path","exact","to","id","max","memo","programEdit","query","axios","method","url","data","headers","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","history","ALERT_CLOSE","programthumnail","response","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/12.fe3142af.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React, { useState, useEffect } from 'react';\nimport Heading from '../../../components/UI/Heading/Heading';\nimport InputComponent from '../../../components/UI/Input/Input';\nimport RKLoader from '../../../components/UI/RKLoader/RKLoader';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport { validationFormEdit } from './../../../helpers/validation/validation';\nimport { toBase64 } from '../../../helpers/fileHelper/fileHelper';\nimport { editProfile } from '../../../store/actions/dashboard';\nimport { Card, CardImg, Button, Modal } from 'react-bootstrap';\nimport './Setting.scss';\n// import { toBase64} from './helper'\n\nfunction Setting({\n    onEditProfile,\n    isLoading\n}) {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const [photoRaw, setPhotoRaw] = useState();\n    // const [coverRaw, setCoverRaw] = useState();\n    const [cover, setCover] = useState();\n    const [photoPreview, setPhotoPreview] = useState(userData.thumbnail);\n\n    useEffect(() => {\n        if(photoRaw) {\n            let convertedPhoto = toBase64(photoRaw);\n            convertedPhoto.then((result) => {\n                setPhotoPreview(result);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        // } else if(coverRaw) {\n        //     let convertedPhoto = toBase64(coverRaw);\n        //     convertedPhoto.then((result) => {\n        //         setPhotoPreview(result);\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //     })\n        }\n    }, [photoRaw])\n\n    if(isLoading) {\n        return <RKLoader/>;\n    }\n    return (\n        <div className=\"Setting\">\n            <Heading \n                headingName=\"Setting\"\n                routes={[\n                    { name: 'Setting' }\n                ]}\n            />\n            <div className=\"Setting_card mt-medium\">\n                <div className=\"Setting_card_inputs\">\n                    <h2>Edit Account</h2>\n                    <Formik\n                        initialValues= {{\n                            email: userData.email,\n                            password: '',\n                            confirmPassword: '',\n                            cobrandName: userData.cobrandName,\n                            phoneNumber: userData.phoneNumber,\n                            address: userData.address,\n                            thumbnail: ''\n                        }}\n                        validationSchema = {validationFormEdit}\n                        validateOnChange = {true}\n                        onSubmit = {values => {\n                            onEditProfile(userData.email, userData.password, values.cobrandName, values.thumbnail, values.phoneNumber, values.address, values.password)\n                        }}\n                    >\n                    {({handleChange, handleBlur, handleSubmit, setFieldValue, touched, values, errors}) => (\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"Setting_card_inputs-item\">\n                                <div>\n                                    <label>Email</label>\n                                    <InputComponent\n                                        name=\"email\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                        isError={touched.email && Boolean(errors.email) }\n                                        message={touched.email && errors.email}\n                                        disabled={true}\n                                    />\n                                </div>\n                                <div>\n                                    <label>New Password</label>\n                                    <InputComponent\n                                        name=\"password\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.password}\n                                        onBlur={handleBlur}\n                                        isError={touched.password && Boolean(errors.password) }\n                                        message={touched.password && errors.password}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Confirm New Password</label>\n                                    <InputComponent\n                                        name=\"confirmPassword\"\n                                        className=\"Input-control\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        value={values.confirmPassword}\n                                        onBlur={handleBlur}\n                                        disabled={!touched.password}\n                                        isError={touched.confirmPassword && Boolean(errors.confirmPassword) }\n                                        message={touched.confirmPassword && errors.confirmPassword}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"Setting_card_inputs-upload mt-large\">\n                                \n                                <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Photo</h2>\n                                    <InputComponent \n                                        placeholder=\"Photo\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div>\n                                <div className=\"Setting_card_inputs-avatar\">\n                                        <h2>Cover</h2>\n                                        <input type=\"file\"\n                                            onChange={(e) => {\n                                                console.log(e.currentTarget.files[0]);\n                                                const promise = toBase64(e.currentTarget.files[0]);\n                                                promise.then(result => {\n                                                    console.log(result)\n                                                    setCover(result);\n                                                })\n                                            }}\n                                            className=\"Input-control\"\n                                            onBlur={handleBlur}\n                                            isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                            message={touched.thumbnail && errors.thumbnail}\n                                        />\n                                </div>\n                                {/* <div className=\"Setting_card_inputs-avatar\">\n                                    <h2>New Cover</h2>\n                                    <InputComponent \n                                        placeholder=\"Cover\"\n                                        type=\"file\"\n                                        name=\"thumbnail\"\n                                        onChange={(e) => {\n                                            let file = e.currentTarget.files[0];\n                                            if(file) {\n                                                console.log(\"File to upload: \", file);\n                                                setFieldValue(\"thumbnail\", file);\n                                                setPhotoRaw(file);\n                                            }\n                                        }}\n                                        className=\"Input-control\"\n                                        onBlur={handleBlur}\n                                        isError={touched.thumbnail && Boolean(errors.thumbnail) }\n                                        message={touched.thumbnail && errors.thumbnail}\n                                    />\n                                </div> */}\n                            </div>\n\n                            <div className=\"Setting_card_inputs-item mt-large\">\n                                <div>\n                                    <label>Co-Brand Name</label>\n                                    <InputComponent\n                                        name=\"cobrandName\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.cobrandName}\n                                        onBlur={handleBlur}\n                                        isError={touched.cobrandName && Boolean(errors.cobrandName) }\n                                        message={touched.cobrandName && errors.cobrandName}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Phone Number</label>\n                                    <InputComponent\n                                        name=\"phoneNumber\"\n                                        className=\"Input-control\"\n                                        type=\"text\"\n                                        onChange={handleChange}\n                                        value={values.phoneNumber}\n                                        onBlur={handleBlur}\n                                        isError={touched.phoneNumber && Boolean(errors.phoneNumber) }\n                                        message={touched.phoneNumber && errors.phoneNumber}\n                                    />\n                                </div>\n                                <div>\n                                    <label>Address</label>\n                                    <InputComponent\n                                        name=\"address\"\n                                        className=\"Input-control\"\n                                        type=\"textarea\"\n                                        onChange={handleChange}\n                                        value={values.address}\n                                        onBlur={handleBlur}\n                                        isError={touched.address && Boolean(errors.address) }\n                                        message={touched.address && errors.address}\n                                    />\n                                </div>\n                                <button\n                                    className=\"btn btn-submit\"\n                                    type=\"submit\"\n                                >\n                                    Update Profile\n                                </button>\n                            </div>\n                        </form>\n                    )}\n\n                    </Formik>\n\n                </div>\n                <div className=\"Setting_card_preview\">\n                    <h5>Preview</h5>\n                    <Card style={{ width: '25rem', borderRadius: '1rem'}}>\n                        {/* <div style={{ backgroundImage: `url(${cover ? cover : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxJUwAEmCj5NP7JfKft5Qz8a3UUoE0RcKiAeNDAulvE-jDh5HzB3-FBb5pBSfmWpJw0J4&usqp=CAU\"})` }} class=\"circletag\" id=\"nay\"> */}\n                            {/* <img className=\"img2\" src=\"https://cdn1.vectorstock.com/i/1000x1000/06/70/beautiful-cute-bee-vector-15910670.jpg\" /> */}\n                        <div className=\"backgr\" style={{ backgroundImage: `url(${cover ? cover : \"https://defghi.co.id/wp-content/uploads/2021/07/Logo-IDE.png\"})` }} >\n                            <img className=\"img2\" src={photoPreview ? photoPreview : \"https://thumbs.dreamstime.com/b/default-avatar-profile-icon-vector-social-media-user-portrait-176256935.jpg\"} />\n                        </div>\n                        <Card.Body className=\"body-card\">\n                            <Card.Title style={{ textAlign: 'center' }}>Bimbel Defghi</Card.Title>\n                            <Card.Text>\n                                Some quick example text to build on the card title and make up the bulk of\n                                the card's content.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {/* <img src={photoPreview} className=\"Setting_card_preview_image\"/> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProfile: ( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ) => \n            dispatch(editProfile( oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Setting)\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n    // return dispatch => {\n    //     dispatch(loadingStart());\n    //     dispatch({\n    //         type: ALERT_CLOSE\n    //     });\n\n    //     console.log('Photo is empty:', photo === '');\n    //     if (photo === '') {\n    //         if (contentType === 'Video') {\n    //             contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n    //         }\n    //         else if (contentType === 'Image') {\n    //             contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n    //         }\n    //         else if (contentType === 'Pdf') {\n    //             contents =\n    //                 '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n    //             console.log(contents)\n    //         }\n    //         else {\n    //             contents = '<!DOCTYPE html>'\n    //                 + '<html lang=\"en\">'\n    //                 + '<head>'\n    //                 + '<meta charset=\"utf-8\">'\n    //                 + '<style>'\n    //                 + '#contents {'\n    //                 + 'overflow-y: scroll;'\n    //                 + 'text-align: justify;'\n    //                 + 'white-space: pre-line;'\n    //                 + 'font-family: Arial, Helvetica, sans-serif;'\n    //                 + 'padding: 1%;'\n    //                 + '}'\n    //                 + '#contents li {'\n    //                 + 'margin-left: 5%;'\n    //                 + '}'\n    //                 + '</style>'\n    //                 + '</head>'\n    //                 + '<body>'\n    //                 + '<div id=\"contents\">'\n    //                 + contents\n    //                 + '</div>'\n    //                 + '</body>'\n    //                 + '</html>';\n    //         }\n\n    //         console.log(contents);\n    //         let data = {\n    //             whereValues: {\n    //                 cobrandEmail,\n    //                 _id\n    //             },\n    //             newValues: {\n    //                 programId,\n    //                 contentName,\n    //                 contentDescription,\n    //                 contentType,\n    //                 contentSource,\n    //                 contents,\n    //                 startDate\n    //             }\n    //         };\n\n    //         console.log(data);\n    //         //Call API ....\n\n    //         contentEdit(data)\n    //             .then(response => {\n    //                 console.log('Success:', response.data);\n    //                 history.push('/content');\n    //                 dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                 dispatch(loadingStop());\n    //             })\n    //             .catch((error) => {\n    //                 console.error('Error:', error);\n    //                 dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                 dispatch(loadingStop());\n    //             });\n    //         console.log(data);\n    //     }\n\n    //     else {\n    //         const promise = toBase64(photo);\n    //         promise.then((result) => {\n    //             console.log(typeof result);\n    //             const programthumnail = result;\n\n    //             let data = {\n    //                 whereValues: {\n    //                     cobrandEmail,\n    //                     _id\n    //                 },\n    //                 newValues: {\n    //                     programId,\n    //                     contentName,\n    //                     contentDescription,\n    //                     contentType,\n    //                     contentSource,\n    //                     contents,\n    //                     startDate\n    //                 }\n    //             };\n\n    //             console.log(data);\n    //             //Call API ....\n\n    //             contentEdit(data)\n    //                 .then(response => {\n    //                     console.log('Success:', response.data);\n    //                     history.push('/content');\n    //                     dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                     dispatch(loadingStop());\n    //                 })\n    //                 .catch((error) => {\n    //                     console.error('Error:', error);\n    //                     dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                     dispatch(loadingStop());\n    //                 });\n    //             console.log(data);\n    //         });\n    //     }\n    // }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}