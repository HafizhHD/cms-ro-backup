{"version":3,"sources":["components/API/filter.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js","../node_modules/react-multi-email/commonjs/index.js","../node_modules/react-multi-email/commonjs/ReactMultiEmail.js","containers/CoBrand/Message/AddNotification/AddNotification.js","../node_modules/react-multi-email/commonjs/isEmail.js","components/UI/Heading/Heading.js"],"names":["getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getProgramCategoryList","Input","placeholder","type","onChange","onBlur","value","className","message","name","min","max","disabled","isError","id","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","endDate","category","targetAudiance","contentPrograms","of","namaTahapan","contentName","contents","validationProgramEdit","validationContent","contentDescription","contentSource","contentThumbnail","isActive","topics","targetAudience","validationContentEdit","validationUserEdit","nameUser","emailUser","birdDate","validationNotification","destination","messageSubject","messageContent","scheduleTime","mediaType","validationAudience","audianceName","validationNotifCategory","description","validationProgCategory","validationStaff","userName","phone","validationContentTopic","topicName","validationScreenTime","controlParameterName","controlParameterValue","programEdit","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","contentProg","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","i","length","x","respons","j","response","dataRaw","nomerUrutTahapan","contentType","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","topic","audi","map","e","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","addNotification","useSchedule","schedule","join","addAudience","addNotifCategory","addProgCategory","addStaff","userType","userLevel","addContentTopic","addScreenTime","unit","editAppUser","gender","imagePhoto","defineProperty","exports","isEmail_1","require","isEmail","default","ReactMultiEmail_1","ReactMultiEmail","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","React","_super","props","_this","call","state","focused","emails","inputValue","findEmailAddress","isEnter","validateEmail","validEmails","re","addEmails","l","arr","split","filter","n","undefined","shift","setState","concat","onChangeInputValue","removeEmail","index","prevState","slice","handleOnKeydown","which","preventDefault","currentTarget","handleOnKeyup","handleOnChange","handleOnBlur","handleOnFocus","emailInputRef","createRef","getDerivedStateFromProps","nextProps","propsEmails","render","_a","_b","style","getLabel","_c","noClass","createElement","onClick","current","focus","ref","onFocus","onKeyDown","onKeyUp","Component","connect","auth","isLoading","onAddNotification","useHistory","useState","Date","sche","setSche","parse","getItem","emailList","setEmailList","notifContext","setNotifContext","isTargetChecked","setTargetChecked","isScheduleChecked","setScheduleChecked","targetList","setTargetList","categoryList","setCategoryList","isPageLoading","setPageLoading","useEffect","setTime","getTime","toISOString","params","promiseAudience","promiseCategory","Promise","all","Data","headingName","routes","path","initialValues","validationSchema","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","checked","event","y","indexOf","splice","_emails","data-tag","data-tag-handle","__assign","t","s","arguments","defaultFqdnOptions","requireTld","allowUnderscores","allowTrailingDot","defaultEmailOptions","allowDisplayName","requireDisplayName","allowUtf8LocalPart","displayName","emailUserPart","quotedEmailUser","emailUserUtf8Part","quotedEmailUserUtf8","isByteLength","str","options","len","encodeURI","Number","displayEmail","match","parts","domain","pop","lowerDomain","toLowerCase","replace","substring","tld","part","isFQDN","pattern","userParts","Heading","item","exact","to"],"mappings":"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","file":"static/js/16.e6cc4764.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\n\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    max,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date' || type === 'datetime-local') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else if(type === 'number') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst UserRegex = /^\\S*$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    category: yup.string(),\n    targetAudiance: yup.array().min(1, 'Pilih minimal 1'),\n    contentPrograms: yup.array().min(1).of(\n        yup.object({\n            namaTahapan: yup.string().required('Nama Tahapan harus diisi'),\n            contentName: yup.string().required('Judul Tahapan harus diisi'),\n            contents: yup.string().required('Isi Tahapan harus diisi'),\n            startDate: yup.date('Insert start date').required('Date is required'),\n            endDate: yup.date('Insert end date').required('Date is required'),\n        })\n    )\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n});\n\nexport const validationUserEdit = yup.object({\n    nameUser: yup.string('Enter your content title').required('User name is required'),\n    emailUser: yup.string('Enter the content description').required('Email is required').email('Email not valid'),\n    birdDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationNotification = yup.object({\n    destination: yup.array().min(1),\n    messageSubject: yup.string('Enter the message subject').required('Message Subject is required'),\n    messageContent: yup.string('Enter the message content').required('Message Content is required'),\n    scheduleTime: yup.date('Insert start date').required('Date is required'),\n    mediaType: yup.string('Enter the media type').required('Media type is required'),\n    category: yup.string('Enter the category').required('Category is required')\n})\n\nexport const validationAudience = yup.object({\n    audianceName: yup.string('Enter your audience name').required('Audience Name is required')\n})\n\nexport const validationNotifCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationProgCategory = yup.object({\n    category: yup.string('Enter category name').required('Category is required'),\n    description: yup.string('Enter description').required('Description is required')\n})\n\nexport const validationStaff = yup.object({\n    emailUser: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    userName: yup.string('Enter your name').required('Name is required').matches(UserRegex, 'Invalid username format'),\n    phone: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more')\n})\n\nexport const validationContentTopic = yup.object({\n    topicName: yup.string('Enter topic name').required('Topic Name is required')\n})\n\nexport const validationScreenTime = yup.object({\n    controlParameterName: yup.string('Enter category name').required('Category is required'),\n    controlParameterValue: yup.number().required('Number is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programAddv2 = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/v2-programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notificationAdd = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const audienceAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const notifCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programCategoryAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentTopicAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const adminAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const screenTimeAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/configurationAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const appUserEdit = (query) => axios({\n    method: 'post',\n    url: url + '/user/edit',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programAddv2, programDelete, programEdit, notificationAdd, audienceAdd, notifCategoryAdd, programCategoryAdd,\n    adminAdd, contentTopicAdd, screenTimeAdd, appUserEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, endDate, category, targetAudience, contentProg, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let contentPrograms = [];\n            for(var i = 0; i < contentProg.length; i++) {\n                let x = contentProg[i];\n                let respons = {};\n                for(var j = 0; j < x.response.length; j++) {\n                    respons[x.response[j]] = 0;\n                }\n                let dataRaw = {\n                    nomerUrutTahapan: x.nomerUrutTahapan,\n                    namaTahapan: x.namaTahapan,\n                    contentName: x.contentName,\n                    contentType: x.contentType,\n                    contentSource: x.contentSource,\n                    contents: x.contents,\n                    startDate: x.startDate,\n                    endDate: x.endDate,\n                    topics: x.topics,\n                    targetAudiance: x.targetAudiance,\n                    respons: respons\n                }\n                contentPrograms.push(dataRaw);\n            }\n\n            let targetAudiance = [];\n            for(var j = 0; j < targetAudience.length; j++) {\n                targetAudiance.push(targetAudience[j].value);\n            }\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate,\n                endDate,\n                category,\n                targetAudiance,\n                contentPrograms\n            };\n\n            console.log(data);\n            //Call API ....\n\n            // programAdd(data)\n            programAddv2(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let datax = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        let data = {\n                            whereValues: {\n                                _id\n                            },\n                            newValues: datax\n                        }\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let datax = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            let data = {\n                whereValues: {\n                    _id\n                },\n                newValues: datax\n            }\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}\n\nexport const addNotification = (destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let schedule = useSchedule ? scheduleTime : '';\n        let data = {\n            destination: destination.join(','), messageSubject, messageContent, scheduleTime: schedule,  mediaType, category\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notificationAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/notifications');\n                dispatch(alertSuccess('Notifikasi berhasil dikirim.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Notifikasi gagal dikirim. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addAudience = (audianceName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            audianceName,\n        };\n\n        console.log(data);\n        //Call API ....\n\n        audienceAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/target-audience');\n                dispatch(alertSuccess('Target pembaca \"' + audianceName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Target pembaca \"' + audianceName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addNotifCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        notifCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/notification-category');\n                dispatch(alertSuccess('Kategori Notifikasi \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Notifikasi \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addProgCategory = (category, description, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            category,\n            description\n        };\n\n        console.log(data);\n        //Call API ....\n\n        programCategoryAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/program-category');\n                dispatch(alertSuccess('Kategori Program \"' + category + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Kategori Program \"' + category + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addStaff= (userName, password, userType, cobrandEmail, userLevel, emailUser, phone, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            userName, password, userType, cobrandEmail, userLevel, emailUser, phone\n        };\n\n        console.log(data);\n        //Call API ....\n\n        adminAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/admin-staff');\n                dispatch(alertSuccess('User \"' + userName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('User\"' + userName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addContentTopic = (topicName, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            topicName\n        };\n\n        console.log(data);\n        //Call API ....\n\n        contentTopicAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/topic');\n                dispatch(alertSuccess('Topik konten \"' + topicName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Topik konten \"' + topicName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const addScreenTime = (cobrandEmail, controlParameterName, controlParameterValue, unit, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            cobrandEmail, controlParameterName, controlParameterValue, unit\n        };\n\n        console.log(data);\n        //Call API ....\n\n        screenTimeAdd(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/tools/setting/screentime');\n                dispatch(alertSuccess('Standar Screentime \"' + controlParameterName + '\" berhasil ditambahkan.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Standar Screentime \"' + controlParameterName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n\nexport const editAppUser = (oldEmail, nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber,  history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        let data = {\n            whereValues: {emailUser: oldEmail},\n            newValues: {nameUser, emailUser, gender, birdDate, address, imagePhoto, phoneNumber}\n        };\n\n        console.log(data);\n        //Call API ....\n\n        appUserEdit(data)\n            .then(response => {\n                console.log('Success:', response.data);\n                history.push('/cms/user');\n                dispatch(alertSuccess('Informasi pengguna \"' + oldEmail + '\" berhasil diubah.'));\n                dispatch(loadingStop());\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                dispatch(alertError('Informasi pengguna \"' + oldEmail + '\" gagal diubah. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n            });\n        console.log(data);\n    }\n\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isEmail_1 = require(\"./isEmail\");\nexports.isEmail = isEmail_1.default;\nvar ReactMultiEmail_1 = require(\"./ReactMultiEmail\");\nexports.ReactMultiEmail = ReactMultiEmail_1.default;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar isEmail_1 = require(\"./isEmail\");\nvar ReactMultiEmail = /** @class */ (function (_super) {\n    __extends(ReactMultiEmail, _super);\n    function ReactMultiEmail(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            focused: false,\n            emails: [],\n            inputValue: '',\n        };\n        _this.findEmailAddress = function (value, isEnter) {\n            var validateEmail = _this.props.validateEmail;\n            var validEmails = [];\n            var inputValue = '';\n            var re = /[ ,;]/g;\n            var isEmail = validateEmail || isEmail_1.default;\n            var addEmails = function (email) {\n                var emails = _this.state.emails;\n                for (var i = 0, l = emails.length; i < l; i++) {\n                    if (emails[i] === email) {\n                        return false;\n                    }\n                }\n                validEmails.push(email);\n                return true;\n            };\n            if (value !== '') {\n                if (re.test(value)) {\n                    var arr = value.split(re).filter(function (n) {\n                        return n !== '' && n !== undefined && n !== null;\n                    });\n                    do {\n                        if (isEmail('' + arr[0])) {\n                            addEmails('' + arr.shift());\n                        }\n                        else {\n                            if (arr.length === 1) {\n                                /// 마지막 아이템이면 inputValue로 남겨두기\n                                inputValue = '' + arr.shift();\n                            }\n                            else {\n                                arr.shift();\n                            }\n                        }\n                    } while (arr.length);\n                }\n                else {\n                    if (isEnter) {\n                        if (isEmail(value)) {\n                            addEmails(value);\n                        }\n                        else {\n                            inputValue = value;\n                        }\n                    }\n                    else {\n                        inputValue = value;\n                    }\n                }\n            }\n            _this.setState({\n                emails: _this.state.emails.concat(validEmails),\n                inputValue: inputValue,\n            });\n            if (validEmails.length && _this.props.onChange) {\n                _this.props.onChange(_this.state.emails.concat(validEmails));\n            }\n        };\n        _this.onChangeInputValue = function (value) {\n            _this.findEmailAddress(value);\n        };\n        _this.removeEmail = function (index) {\n            _this.setState(function (prevState) {\n                return {\n                    emails: prevState.emails.slice(0, index).concat(prevState.emails.slice(index + 1)),\n                };\n            }, function () {\n                if (_this.props.onChange) {\n                    _this.props.onChange(_this.state.emails);\n                }\n            });\n        };\n        _this.handleOnKeydown = function (e) {\n            switch (e.which) {\n                case 13:\n                case 9:\n                    e.preventDefault();\n                    break;\n                case 8:\n                    if (!e.currentTarget.value) {\n                        _this.removeEmail(_this.state.emails.length - 1);\n                    }\n                    break;\n                default:\n            }\n        };\n        _this.handleOnKeyup = function (e) {\n            switch (e.which) {\n                case 13:\n                case 9:\n                    _this.findEmailAddress(e.currentTarget.value, true);\n                    break;\n                default:\n            }\n        };\n        _this.handleOnChange = function (e) {\n            return _this.onChangeInputValue(e.currentTarget.value);\n        };\n        _this.handleOnBlur = function (e) {\n            _this.setState({ focused: false });\n            _this.findEmailAddress(e.currentTarget.value, true);\n        };\n        _this.handleOnFocus = function () {\n            return _this.setState({\n                focused: true,\n            });\n        };\n        _this.emailInputRef = React.createRef();\n        return _this;\n    }\n    ReactMultiEmail.getDerivedStateFromProps = function (nextProps, prevState) {\n        if (prevState.propsEmails !== nextProps.emails) {\n            return {\n                propsEmails: nextProps.emails || [],\n                emails: nextProps.emails || [],\n                inputValue: '',\n                focused: false,\n            };\n        }\n        return null;\n    };\n    ReactMultiEmail.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, focused = _a.focused, emails = _a.emails, inputValue = _a.inputValue;\n        var _b = this.props, style = _b.style, getLabel = _b.getLabel, _c = _b.className, className = _c === void 0 ? '' : _c, noClass = _b.noClass, placeholder = _b.placeholder;\n        // removeEmail\n        return (React.createElement(\"div\", { className: className + \" \" + (noClass ? '' : 'react-multi-email') + \" \" + (focused ? 'focused' : '') + \" \" + (inputValue === '' && emails.length === 0 ? 'empty' : ''), style: style, onClick: function () {\n                if (_this.emailInputRef.current) {\n                    _this.emailInputRef.current.focus();\n                }\n            } },\n            placeholder ? React.createElement(\"span\", { \"data-placeholder\": true }, placeholder) : null,\n            emails.map(function (email, index) {\n                return getLabel(email, index, _this.removeEmail);\n            }),\n            React.createElement(\"input\", { ref: this.emailInputRef, type: \"text\", value: inputValue, onFocus: this.handleOnFocus, onBlur: this.handleOnBlur, onChange: this.handleOnChange, onKeyDown: this.handleOnKeydown, onKeyUp: this.handleOnKeyup })));\n    };\n    return ReactMultiEmail;\n}(React.Component));\nexports.default = ReactMultiEmail;\n","import React, { useEffect, useState } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddNotification.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addNotification } from '../../../../store/actions/dashboard';\nimport { getAudienceList, getNotificationCategoryList } from './../../../../components/API/filter'\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationNotification } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\n\nimport { ReactMultiEmail } from \"react-multi-email\";\nimport \"react-multi-email/style.css\";\n\nfunction AddNotification({\n    onAddNotification,\n    isLoading\n}) {\n\n    const history = useHistory();\n    const [sche, setSche] = useState(new Date());\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const [emailList, setEmailList] = useState([]);\n    const [notifContext, setNotifContext] = useState('');\n    const [isTargetChecked, setTargetChecked] = useState(false);\n    const [isScheduleChecked, setScheduleChecked] = useState(false);\n\n    const [targetList, setTargetList] = useState([]);\n    const [categoryList, setCategoryList] = useState([]);\n\n    const [isPageLoading, setPageLoading] = useState(true);\n\n    useEffect(() => {\n        let x = sche;\n        x.setTime(x.getTime() + 7 * 60 * 60 * 1000);\n        setSche(x);\n        console.log(new Date().toISOString())\n        if(localStorage.getItem('emailTo')) {\n            setEmailList(localStorage.getItem('emailTo').split(','));\n            localStorage.removeItem('emailTo');\n        }\n        if(localStorage.getItem('notifContext')) {\n            setNotifContext(localStorage.getItem('notifContext'));\n            localStorage.removeItem('notifContext');\n        }\n        let params = {};\n        let promiseAudience = getAudienceList(params);\n        let promiseCategory = getNotificationCategoryList(params);\n        Promise.all([promiseAudience, promiseCategory])\n        .then(response => {\n            console.log(response[0].data.Data);\n            console.log(response[1].data.Data);\n            setTargetList(response[0].data.Data);\n            setCategoryList(response[1].data.Data);\n            setPageLoading(false);\n        })\n    }, []);\n\n    if(isPageLoading)\n        return <RKLoader />\n\n    return (\n        <>\n            <Heading headingName=\"Buat Notifikasi\" routes={[\n                { path: '/cms/notifications', name: 'Notifikasi' },\n                { path: '/cms/notifications/add', name: 'Buat Notifikasi Baru' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    destination: emailList, \n                    messageSubject: notifContext,\n                    messageContent: '',\n                    useSchedule: false,\n                    scheduleTime: sche.toISOString().slice(0, -8),\n                    mediaType: 'Semua',\n                    category: 'Umum',\n\n                }}\n                validationSchema = {validationNotification}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onAddNotification(values.destination, values.messageSubject, values.messageContent, values.useSchedule, values.scheduleTime, values.mediaType, values.category, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"AddProgram\">\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Tujuan</label>\n                            <label className=\"form-group-option\">\n                                <input type=\"checkbox\" onClick={(e) => {\n                                        setFieldValue(\"destination\", []);\n                                    if(e.currentTarget.checked) setTargetChecked(true);\n                                    else {\n                                        setFieldValue(\"destination\", emailList);\n                                        setTargetChecked(false);\n                                    }\n                                }}>\n                                        </input>\n                                <p>Pakai Target Pengguna</p>\n                            </label>\n                            {isTargetChecked ? (\n                                <div className=\"form-group-choice\"> \n                                    {targetList.map(e => {\n                                        return <label>\n                                            <input type=\"checkbox\" value={e.audianceName} onClick={(event) => {\n                                                if(event.currentTarget.checked) {\n                                                    let x = values.destination;\n                                                    x.push(e.audianceName);\n                                                    setFieldValue(\"destination\", x);\n                                                }\n                                                else {\n                                                    let x = values.destination;\n                                                    let y = x.indexOf(e.audianceName);\n                                                    if(y > -1) x.splice(y, 1);\n                                                    setFieldValue(\"destination\", x);\n                                                }\n                                            }}>\n                                            </input>\n                                        <p>{e.audianceName}</p></label>\n                                    })}\n                                </div>\n                            ) : (\n                                <ReactMultiEmail\n                                    placeholder=\"Masukkan email...\"\n                                    emails={values.destination}\n                                    onChange={(_emails) => {\n                                        setEmailList(_emails)\n                                        setFieldValue(\"destination\", _emails)\n                                    }}\n                                    getLabel={(\n                                        email,\n                                        index,\n                                        removeEmail\n                                    ) => {\n                                        return (\n                                            <div data-tag key={index}>\n                                                {email}\n                                                <span data-tag-handle onClick={() => removeEmail(index)}>\n                                                ×\n                                                </span>\n                                            </div>\n                                        );\n                                    }}\n                                />\n                            )}\n                            {touched.destination && <span className=\"message__error\">{errors.destination}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Judul Pesan</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"messageSubject\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.messageSubject}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Isi Pesan</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"messageContent\"\n                                placeholder=\"Ketik pesan...\"\n                                value={values.messageContent}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                           {touched.messageContent && <span className=\"message__error\">{errors.messageContent}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Pengaturan Jadwal</label>\n                            <label className=\"form-group-option\">\n                                <input type=\"checkbox\" onClick={(e) => {\n                                    if(e.currentTarget.checked) {\n                                        setScheduleChecked(true);\n                                        setFieldValue(\"useSchedule\", true);\n                                    }\n                                    else {\n                                        setScheduleChecked(false);\n                                        setFieldValue(\"useSchedule\", true);\n                                    }\n                                }}>\n                                        </input>\n                                <p>Jadwalkan</p>\n                            </label>\n                            <InputComponent\n                                type=\"datetime-local\"\n                                className=\"form-group__input\"\n                                name=\"scheduleTime\"\n                                min={new Date().toISOString().slice(0, -8)}\n                                value={values.scheduleTime}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                disabled={!isScheduleChecked}\n                            />\n                            {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Kirim Via</label>\n                            <select\n                                name=\"mediaType\"\n                                value={values.mediaType}\n                                onChange={(e) => {\n                                    setFieldValue(\"mediaType\", e.currentTarget.value);\n                                }}\n                            >\n                                <option value=\"Semua\">Semua</option>\n                                <option value=\"Email\">Email</option>\n                                <option value=\"Device\">Device</option>\n                            </select>\n                           {touched.messageContent && <span className=\"message__error\">{errors.messageContent}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-group-label\">Kategori</label>\n                            \n                            <div className=\"form-group-choice\"> \n                                {categoryList.map(e => {\n                                    return <label>\n                                        <input type=\"radio\" name=\"category\" value={e.category} checked={values.category === e.category} onChange={(event) => {\n                                            if(event.currentTarget.checked) {\n                                                setFieldValue(\"category\", event.currentTarget.value);\n                                            }\n                                        }}>\n                                        </input>\n                                    <p>{e.category}</p></label>\n                                })}\n                            </div>\n                            \n                            {touched.category && <span className=\"message__error\">{errors.category}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Kirim Notifikasi\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddNotification: ( destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history ) =>\n            dispatch(addNotification( destination, messageSubject, messageContent, useSchedule, scheduleTime, mediaType, category, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddNotification)\n","\"use strict\";\n// forked from https://github.com/chriso/validator.js\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar defaultFqdnOptions = {\n    requireTld: true,\n    allowUnderscores: false,\n    allowTrailingDot: false,\n};\nvar defaultEmailOptions = {\n    allowDisplayName: false,\n    requireDisplayName: false,\n    allowUtf8LocalPart: true,\n    requireTld: true,\n};\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n    var min = 0;\n    var max;\n    var len = encodeURI(str).split(/%..|./).length - 1;\n    if (options) {\n        min = Number(options.min) || 0;\n        max = Number(options.max);\n    }\n    return len >= min && (typeof max === 'undefined' || len <= max);\n}\nfunction isFQDN(str, options) {\n    options = __assign({}, defaultFqdnOptions, options);\n    /* Remove the optional trailing dot before checking validity */\n    if (options.allowTrailingDot && str[str.length - 1] === '.') {\n        str = str.substring(0, str.length - 1);\n    }\n    var parts = str.split('.');\n    if (options.requireTld) {\n        var tld = '' + parts.pop();\n        if (!parts.length ||\n            !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n            return false;\n        }\n        // disallow spaces\n        if (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20]/.test(tld)) {\n            return false;\n        }\n    }\n    for (var part = void 0, i = 0; i < parts.length; i++) {\n        part = parts[i];\n        if (options.allowUnderscores) {\n            part = part.replace(/_/g, '');\n        }\n        if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n            return false;\n        }\n        // disallow full-width chars\n        if (/[\\uff01-\\uff5e]/.test(part)) {\n            return false;\n        }\n        if (part[0] === '-' || part[part.length - 1] === '-') {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isEmail(str, options) {\n    options = __assign({}, defaultEmailOptions, options);\n    if (options.requireDisplayName || options.allowDisplayName) {\n        var displayEmail = str.match(displayName);\n        if (displayEmail) {\n            str = displayEmail[1];\n        }\n        else if (options.requireDisplayName) {\n            return false;\n        }\n    }\n    var parts = str.split('@');\n    var domain = '' + parts.pop();\n    var lowerDomain = domain.toLowerCase();\n    var user = parts.join('@');\n    if (lowerDomain === 'gmail.com' || lowerDomain === 'googlemail.com') {\n        user = user.replace(/\\./g, '').toLowerCase();\n    }\n    if (!isByteLength(user, { max: 64 }) || !isByteLength(domain, { max: 254 })) {\n        return false;\n    }\n    if (!isFQDN(domain, { requireTld: options.requireTld })) {\n        return false;\n    }\n    if (user[0] === '\"') {\n        user = user.slice(1, user.length - 1);\n        return options.allowUtf8LocalPart\n            ? quotedEmailUserUtf8.test(user)\n            : quotedEmailUser.test(user);\n    }\n    var pattern = options.allowUtf8LocalPart\n        ? emailUserUtf8Part\n        : emailUserPart;\n    var userParts = user.split('.');\n    for (var i = 0; i < userParts.length; i++) {\n        if (!pattern.test(userParts[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.default = isEmail;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}