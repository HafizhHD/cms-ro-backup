{"version":3,"sources":["components/API/dashboard.js","store/actions/dashboard.js","components/API/filter.js","components/UI/Table/Table.js","containers/CoBrand/Content/components/Columns.js","containers/CoBrand/Content/Content.js","components/UI/RKLoaderInner/RKLoader.js"],"names":["programEdit","query","axios","method","url","data","headers","contentAdd","contentEdit","loadingStart","type","AUTH_START","loadingStop","AUTH_FAILED","alertError","message","id","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","programName","ProgramDescription","photo","startDate","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","response","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentName","contentDescription","contentType","contentSource","contents","isActive","contentThumbnail","status","getEmbedUrl","hasil","includes","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","cobrandName","phoneNumber","address","password","email","Object","assign","thumbnail","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user","getProgramList","getContentList","getUserList","getHKBPList","Table","DATA","COLUMNS","renderRowSubComponent","useMemo","useTable","columns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","className","onClick","disabled","length","defaultValue","onChange","e","target","value","Number","map","placeholder","currentTarget","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","dateFormat","year","month","day","Columns","setContentDeleting","Header","accessor","Date","toLocaleDateString","Cell","style","color","fontWeight","disableSortBy","disableGlobalFilter","to","title","values","replace","connect","isCurrentlyLoading","auth","isLoading","onDeleteContent","deletingContent","useState","setLoading","contentList","setContentList","contentDeleting","userData","parse","getItem","params","whereKeyValues","limit","MAX_SAFE_INTEGER","useEffect","RKLoader","text"],"mappings":"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","file":"static/js/13.f8cd3a6c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            // const contentThumbnail = result;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n    \n    \n    // return dispatch => {\n    //     dispatch(loadingStart());\n    //     dispatch({\n    //         type: ALERT_CLOSE\n    //     });\n\n    //     console.log('Photo is empty:', photo === '');\n    //     if (photo === '') {\n    //         if (contentType === 'Video') {\n    //             contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n    //         }\n    //         else if (contentType === 'Image') {\n    //             contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n    //         }\n    //         else if (contentType === 'Pdf') {\n    //             contents =\n    //                 '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n    //             console.log(contents)\n    //         }\n    //         else {\n    //             contents = '<!DOCTYPE html>'\n    //                 + '<html lang=\"en\">'\n    //                 + '<head>'\n    //                 + '<meta charset=\"utf-8\">'\n    //                 + '<style>'\n    //                 + '#contents {'\n    //                 + 'overflow-y: scroll;'\n    //                 + 'text-align: justify;'\n    //                 + 'white-space: pre-line;'\n    //                 + 'font-family: Arial, Helvetica, sans-serif;'\n    //                 + 'padding: 1%;'\n    //                 + '}'\n    //                 + '#contents li {'\n    //                 + 'margin-left: 5%;'\n    //                 + '}'\n    //                 + '</style>'\n    //                 + '</head>'\n    //                 + '<body>'\n    //                 + '<div id=\"contents\">'\n    //                 + contents\n    //                 + '</div>'\n    //                 + '</body>'\n    //                 + '</html>';\n    //         }\n\n    //         console.log(contents);\n    //         let data = {\n    //             whereValues: {\n    //                 cobrandEmail,\n    //                 _id\n    //             },\n    //             newValues: {\n    //                 programId,\n    //                 contentName,\n    //                 contentDescription,\n    //                 contentType,\n    //                 contentSource,\n    //                 contents,\n    //                 startDate\n    //             }\n    //         };\n\n    //         console.log(data);\n    //         //Call API ....\n\n    //         contentEdit(data)\n    //             .then(response => {\n    //                 console.log('Success:', response.data);\n    //                 history.push('/content');\n    //                 dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                 dispatch(loadingStop());\n    //             })\n    //             .catch((error) => {\n    //                 console.error('Error:', error);\n    //                 dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                 dispatch(loadingStop());\n    //             });\n    //         console.log(data);\n    //     }\n\n    //     else {\n    //         const promise = toBase64(photo);\n    //         promise.then((result) => {\n    //             console.log(typeof result);\n    //             const programthumnail = result;\n\n    //             let data = {\n    //                 whereValues: {\n    //                     cobrandEmail,\n    //                     _id\n    //                 },\n    //                 newValues: {\n    //                     programId,\n    //                     contentName,\n    //                     contentDescription,\n    //                     contentType,\n    //                     contentSource,\n    //                     contents,\n    //                     startDate\n    //                 }\n    //             };\n\n    //             console.log(data);\n    //             //Call API ....\n\n    //             contentEdit(data)\n    //                 .then(response => {\n    //                     console.log('Success:', response.data);\n    //                     history.push('/content');\n    //                     dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                     dispatch(loadingStop());\n    //                 })\n    //                 .catch((error) => {\n    //                     console.error('Error:', error);\n    //                     dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                     dispatch(loadingStop());\n    //                 });\n    //             console.log(data);\n    //         });\n    //     }\n    // }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom'\n\n\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = (setContentDeleting) => {\n    return (\n    [\n    {\n        Header: 'Category',\n        accessor: 'contentType'\n    },\n    {\n        Header: 'Title',\n        accessor: 'contentName'\n    },\n    {\n        Header: 'Start Date',\n        accessor: (value) => new Date(value.startDate).toLocaleDateString(\"en-UK\", dateFormat),\n        Cell: ({value}) => (\n            <>\n                {new Date(value).toLocaleDateString(\"en-UK\", dateFormat)}\n            </>\n        )\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ value }) => {\n            if(value === 'active') return <p style={{ color: 'green', fontWeight: 'bold' }}>{value}</p>\n            else return <p style={{ color: 'red', fontWeight: 'bold' }}>{value}</p>\n        }\n    },\n    {\n        Header: 'Action',\n        accessor: '_id',\n        disableSortBy: true,\n        disableGlobalFilter: true,\n        Cell: ({cell}) => (\n            <>\n                <NavLink\n                    to=\"/content/view/\"\n                    className=\"nav_btn\"\n                    title=\"View Detail\"\n                    onClick={() => {\n                        localStorage.setItem('contentSelected', cell.row.values._id)\n                    }}\n                >\n                <button \n                    className=\"btn_action\"\n                >\n                    <div>\n                        <FiEye className=\"btn_action-icon\" />\n                    </div>\n                </button>\n                </NavLink>\n                <NavLink\n                    to=\"/content/edit\"\n                    className=\"nav_btn\"\n                    title=\"Edit Content\"\n                    onClick={() => {\n                        localStorage.setItem('contentSelected', cell.row.values._id)\n                    }}\n                >\n                    <button \n                    className=\"btn_action\">\n                        <div>\n                            <FiEdit2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n                \n                <NavLink to=\"/content\"\n                    className=\"nav_btn\"\n                    title=\"Delete Content\"\n                    onClick={() => {\n                        setContentDeleting([cell.row.values._id, cell.row.values.contentName]);\n                    }}\n                    replace>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiTrash2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n            </>\n        )\n    }\n]) };\n\nexport default Columns;","import React from 'react';\nimport columns from './components/Columns';\nimport Data from './components/MOCK_DATA.json';\nimport { deleteContent } from '../../../store/actions/dashboard';\nimport TableContent from './../../../components/UI/Table/Table';\nimport './Content.scss';\nimport { FiPlus } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\nimport RKLoader from '../../../components/UI/RKLoaderInner/RKLoader';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getContentList } from '../../../components/API/filter';\n\n\n\nfunction Content({\n    isCurrentlyLoading,\n    onDeleteContent\n}) {\n    const [isLoading, setLoading] = useState(true);\n    const [contentList, setContentList] = useState();\n    const [contentDeleting, setContentDeleting] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.email,\n            status: {\"$in\" : [\"active\", \"inactive\"]}\n        },\n        limit: Number.MAX_SAFE_INTEGER\n    };\n    \n\n    function retrieveList() {\n        getContentList(params)\n        .then(response => {\n            console.log(\"Content list: \", response.data);\n            setContentList(response.data.contents);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        });\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        if(localStorage.getItem('contentDeleting')) {\n            setContentDeleting(localStorage.getItem('contentDeleting'));\n            localStorage.removeItem('contentDeleting');\n        }\n        retrieveList();\n    }, []);\n\n    useEffect(() => {\n        if(contentDeleting) {\n            setLoading(true);\n            onDeleteContent(userData.email, contentDeleting, retrieveList);\n        }\n    }, [contentDeleting])\n\n\n    if(isLoading || isCurrentlyLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"Content\">\n            <h1>CONTENT</h1>\n            <NavLink to=\"/content/add\" id=\"add_content\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Create New Content</span>  \n            </NavLink>\n            <div className=\"Content__table\">\n                <TableContent COLUMNS={columns(setContentDeleting)} DATA={contentList}  />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isCurrentlyLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDeleteContent: (email, deletingContent, retrieveList) => dispatch(deleteContent(email, deletingContent, retrieveList))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Content)\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n"],"sourceRoot":""}