{"version":3,"sources":["components/UI/Table/TableFilter.js","components/UI/Table/Table.js","components/UI/Table/TableUserControl.js","containers/CoBrand/User/columns.js","containers/CoBrand/User/Detail/columns.js","containers/CoBrand/User/Detail/Detail.js","containers/CoBrand/User/User.js","containers/CoBrand/GlobalParam.js","components/UI/Heading/Heading.js","components/API/filter.js"],"names":["DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","length","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","values","has","add","map","option","i","SelectArrayColumnFilter","console","log","Array","x","NumberRangeColumnFilter","min","max","Math","style","display","type","val","old","parseInt","width","marginRight","marginLeft","DateRangeColumnFilter","Date","setFullYear","getFullYear","toISOString","slice","fuzzyTextFilterFn","rows","matchSorter","keys","dateBetweenFilterFn","filterValues","sd","ed","filter","r","time","autoRemove","Table","DATA","COLUMNS","renderRowSubComponent","data","useTable","columns","initialState","hiddenColumns","pageSize","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","expanded","setGlobalFilter","globalFilter","className","onClick","disabled","defaultValue","Number","currentTarget","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","TableUserControl","dateFormat","year","month","day","Columns","Header","accessor","sortType","a","b","dateCreated","Cell","toLocaleDateString","disableSortBy","disableGlobalFilter","to","title","localStorage","setItem","emailUser","userType","JSON","parse","getItem","sekolah","userLevel","nameUser","split","color","URL","Detail","userSelected","useState","isLoading","setLoading","userData","setUserData","relativesData","setRelativesData","isUpdating","setUpdating","isDeleting","setDeleting","show","setShow","handleClose","show1","setShow1","handleClose1","useEffect","params","whereKeyValues","axios","method","url","then","response","users","params2","parentEmail","response2","catch","error","stats","status","param","whereValues","cobrandEmailUser","newValues","window","location","reload","userId","_id","src","imagePhoto","birdDate","parentStatus","Modal","onHide","closeButton","Title","Body","Button","variant","User","useHistory","cobrandComId","cobrandComunityId","groupMitraAsuhId","packageId","absStart","orderKeyValues","limit","MAX_SAFE_INTEGER","getUserList","childInfo","schoolName","push","getSchoolGroupList","res","Data","memberSekolah","j","getCommunityMemberList","useCallback","RKLoader","Heading","headingName","routes","name","path","emailTester","item","exact","getProgramList","query","getContentList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getNotificationCategoryList","getAudienceList","getContentTopicList","getContentResponseList","getContentViewList","getProgramCategoryList","getAdminList","getCommunityList","getSchoolList","getPraytimeMessageList","getUserInstalledApps","getAlwaysOnApps"],"mappings":"ocAoCS,SAASA,EAAT,GAEH,IAAD,IADDC,OAAUC,EACT,EADSA,YAAaC,EACtB,EADsBA,gBAAiBC,EACvC,EADuCA,UAE1BD,EAAgBE,OAE9B,OACE,uBACEC,MAAOJ,GAAe,GACtBK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAE9BC,YAAW,cAOV,SAASC,EAAT,GAEH,IAAD,IADDX,OAAUC,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBU,EAClD,EADkDA,GAI7CC,EAAUC,IAAMC,SAAQ,WAC5B,IAAMF,EAAU,IAAIG,IAIpB,OAHAd,EAAgBe,SAAQ,SAAAC,QACAT,IAAnBS,EAAIC,OAAOP,IAAsBC,EAAQO,IAAIF,EAAIC,OAAOP,KAAMC,EAAQQ,IAAIH,EAAIC,OAAOP,OAEnF,YAAIC,EAAQM,YAClB,CAACP,EAAIV,IAGR,OACE,yBACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAHhC,UAME,wBAAQJ,MAAM,GAAd,iBACCQ,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAgBnB,MAAOkB,EAAvB,SACGA,GADUC,SAUd,SAASC,EAAT,GAEH,IAAD,IADDzB,OAAUC,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBU,EAClD,EADkDA,GAI7CC,EAAUC,IAAMC,SAAQ,WAC5B,IAAMF,EAAU,IAAIG,IAYpB,OAXAd,EAAgBe,SAAQ,SAAAC,GAItB,GAHAQ,QAAQC,IAAI,UAAWT,EAAIC,OAAOP,IAClCc,QAAQC,IAAI,eAAgBT,EAAIC,OAAOP,aAAegB,OACtDF,QAAQC,IAAI,iBAAkBT,EAAIC,OAAOP,GAAIR,QAC1Cc,EAAIC,OAAOP,aAAegB,OAASV,EAAIC,OAAOP,GAAIR,OAAS,EAC5D,IAAI,IAAIoB,EAAI,EAAGA,EAAGN,EAAIC,OAAOP,GAAIR,OAAQoB,IAAK,CAC5C,IAAIK,EAAIX,EAAIC,OAAOP,GAAIY,QACdf,IAANoB,GAAoBhB,EAAQO,IAAIS,IAAIhB,EAAQQ,IAAIQ,OAIlD,YAAIhB,EAAQM,YAClB,CAACP,EAAIV,IAGR,OACE,yBACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAEC,OAAOH,YAASI,IAHhC,UAME,wBAAQJ,MAAM,GAAd,iBACCQ,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAgBnB,MAAOkB,EAAvB,SACGA,GADUC,SA8Cd,SAASM,EAAT,GAEH,IAAD,IADD9B,OACC,IADSC,mBACT,MADuB,GACvB,EAD2BC,EAC3B,EAD2BA,gBAAiBC,EAC5C,EAD4CA,UAAWS,EACvD,EADuDA,GAExD,EAAmBE,IAAMC,SAAQ,WAC/B,IAAIgB,EAAM7B,EAAgBE,OAASF,EAAgB,GAAGiB,OAAOP,GAAM,EAC/DoB,EAAM9B,EAAgBE,OAASF,EAAgB,GAAGiB,OAAOP,GAAM,EAKnE,OAJAV,EAAgBe,SAAQ,SAAAC,GACtBa,EAAME,KAAKF,IAAIb,EAAIC,OAAOP,GAAKmB,GAC/BC,EAAMC,KAAKD,IAAId,EAAIC,OAAOP,GAAKoB,MAE1B,CAACD,EAAKC,KACZ,CAACpB,EAAIV,IARR,mBAAO6B,EAAP,KAAYC,EAAZ,KAUA,OACE,sBACEE,MAAO,CACLC,QAAS,QAFb,UAKE,uBACE9B,MAAOJ,EAAY,IAAM,GACzBmC,KAAK,SACL9B,SAAU,SAAAC,GACR,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACD,EAAME,SAASF,EAAK,SAAM5B,EAAW6B,EAAI,QAEpEP,IAAKA,EACLrB,YAAW,eAAUqB,EAAV,KACXG,MAAO,CACLM,MAAO,OACPC,YAAa,YAhBnB,KAoBE,uBACEpC,MAAOJ,EAAY,IAAM,GACzBmC,KAAK,SACL9B,SAAU,SAAAC,GACR,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAID,EAAME,SAASF,EAAK,SAAM5B,OAE7DsB,IAAKA,EACLrB,YAAW,eAAUsB,EAAV,KACXE,MAAO,CACLM,MAAO,OACPE,WAAY,eAOf,SAASC,EAAT,GAEN,IAAD,IADE3C,OACF,IADYC,mBACZ,MAD0B,GAC1B,EAD8BC,EAC9B,EAD8BA,gBAAiBC,EAC/C,EAD+CA,UAAWS,EAC1D,EAD0DA,GAExD,EAAmBE,IAAMC,SAAQ,WAC7B,IAAIgB,EAAM,IAAIa,KAAK,cACfZ,EAAM,IAAIY,KAMd,OALAZ,EAAIa,YAAYb,EAAIc,cAAgB,GACpC5C,EAAgBe,SAAQ,SAAAC,GACpBa,EAAMb,EAAIC,OAAOP,IAAM,IAAIgC,KAAK1B,EAAIC,OAAOP,KAAQmB,EAAM,IAAIa,KAAK1B,EAAIC,OAAOP,IAAamB,EAC1FC,EAAMd,EAAIC,OAAOP,IAAM,IAAIgC,KAAK1B,EAAIC,OAAOP,KAAQoB,EAAM,IAAIY,KAAK1B,EAAIC,OAAOP,IAAaoB,KAEvF,CAACD,EAAKC,KACd,CAACpB,EAAIV,IATR,mBAAO6B,EAAP,KAAYC,EAAZ,KAWA,OACI,sBACIE,MAAO,CACHC,QAAS,QAFjB,UAKI,uBACI9B,MAAOJ,EAAY,IAAM8B,EAAIgB,cAAcC,MAAM,EAAG,IACpDZ,KAAK,OACLL,IAAKA,EAAIgB,cAAcC,MAAM,EAAG,IAChChB,IAAK/B,EAAY,IAAM+B,EAAIe,cAAcC,MAAM,EAAG,IAClD1C,SAAU,SAAAC,GACN,IAAM8B,EAAM9B,EAAEC,OAAOH,MAErBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACD,QAAc5B,EAAW6B,EAAI,QAE1DJ,MAAO,CACHM,MAAO,QACPC,YAAa,YAjBzB,KAqBF,uBACUpC,MAAOJ,EAAY,IAAM+B,EAAIe,cAAcC,MAAM,EAAG,IACpDZ,KAAK,OACLL,IAAK9B,EAAY,IAAM8B,EAAIgB,cAAcC,MAAM,EAAG,IAClDhB,IAAKA,EAAIe,cAAcC,MAAM,EAAG,IAChC1C,SAAU,SAAAC,GACN,IAAM8B,EAAM9B,EAAEC,OAAOH,MACrBF,GAAU,eAACmC,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAID,QAAc5B,OAEnDyB,MAAO,CACHM,MAAO,QACPE,WAAY,eAqBvB,SAASO,EAAkBC,EAAMtC,EAAIX,GAC1C,OAAOkD,YAAYD,EAAMjD,EAAa,CAAEmD,KAAM,CAAC,SAAAlC,GAAG,OAAIA,EAAIC,OAAOP,OAM5D,SAASyC,EAAoBH,EAAMtC,EAAI0C,GAC5C,IAAIC,EAAK,IAAIX,KAAKU,EAAa,IAC3BE,EAAK,IAAIZ,KAAKU,EAAa,IAE/B,OAAOJ,EAAKO,QAAO,SAAAC,GACf,IAAIC,EAAO,IAAIf,KAAKc,EAAEvC,OAAOP,IAE7B,OAA4B,IAAxB0C,EAAalD,OAAqB8C,EAC9BS,GAAQJ,GAAMI,GAAQH,KAVpCP,EAAkBW,WAAa,SAAAvB,GAAG,OAAKA,GAczCgB,EAAoBO,WAAa,SAAAvB,GAAG,OAAKA,I,qFCpJ1BwB,IAtJf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,sBAEtBC,EAAOlD,mBAAS,kBAAM+C,IAAO,CAACA,IAIpC,EAmBII,mBAAS,CACTC,QAASJ,EACTE,KAAMA,EACNG,aAxBiB,CAAEC,cAAe,CAAC,OAAQC,SAAU,KAyBtDC,kBACDC,YACAC,cACAC,iBAzBEC,EADJ,EACIA,cACAC,EAFJ,EAEIA,kBACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,WACAC,EALJ,EAKIA,KACA7B,EANJ,EAMIA,KACA8B,EAPJ,EAOIA,gBACAC,EARJ,EAQIA,YACAC,EATJ,EASIA,YACAC,EAVJ,EAUIA,UACAC,EAXJ,EAWIA,SACAC,EAZJ,EAYIA,SACAC,EAbJ,EAaIA,aACAC,EAdJ,EAcIA,YACAC,EAfJ,EAeIA,eAfJ,IAgBIC,MAAQC,EAhBZ,EAgBYA,UAAWpB,EAhBvB,EAgBuBA,SACnBmB,GAjBJ,EAgBiCE,SAhBjC,EAiBIF,OACAG,EAlBJ,EAkBIA,gBAUIC,EAAiBJ,EAAjBI,aAGR,OACI,qCACA,sBAAKC,UAAU,QAAf,UACI,sBAAKA,UAAU,aAAf,UACI,wBAAQC,QAAS,kBAAMX,EAAS,IAAIY,UAAWhB,EAA/C,SACC,OAED,wBAAQe,QAAS,kBAAMT,KAAgBU,UAAWhB,EAAlD,SACC,MAED,wBAAQe,QAAS,kBAAMV,KAAYW,UAAWf,EAA9C,SACC,MAED,wBAAQc,QAAS,kBAAMX,EAASD,EAAY,IAAIa,UAAWf,EAA3D,SACC,OAED,yCACM,IACN,mCACKS,EAAY,EADjB,OACwBR,EAAY9E,aAGpC,iDAEI,uBACIgC,KAAK,SACL6D,aAAcP,EAAY,EAC1BpF,SAAU,SAAAC,GACN,IAAMwE,EAAOxE,EAAEC,OAAOH,MAAQ6F,OAAO3F,EAAEC,OAAOH,OAAS,EAAI,EAC3D+E,EAASL,SAIrB,wBACA1E,MAAOiE,EACPhE,SAAU,SAAAC,GACNgF,EAAYW,OAAO3F,EAAEC,OAAOH,SAHhC,SAMC,CAAC,GAAI,GAAI,KAAKiB,KAAI,SAAAgD,GAAQ,OACvB,yBAAuBjE,MAAOiE,EAA9B,kBACUA,IADGA,WAMrB,sBAAKwB,UAAU,cAAf,UACI,2CAAc5C,EAAK9C,OAAnB,WACA,uBACIgC,KAAK,OACL0D,UAAU,oBACVpF,YAAY,SACZL,MAAQwF,GAAgB,GACxBvF,SAAU,SAACC,GACPqF,EAAgBrF,EAAE4F,cAAc9F,gBAKhD,qBAAKyF,UAAU,kBAAf,SACD,kDAAWnB,KAAX,cACI,gCACKE,EAAavD,KAAI,SAAA8E,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQhF,KAAI,SAAAtB,GAAM,OAC3B,+CAAQA,EAAOuG,eAAevG,EAAOwG,yBAArC,cACKxG,EAAOyG,OAAO,UACd,+BACKzG,EAAO0G,SACN1G,EAAO2G,aACF,cAAC,IAAD,IACA,cAAC,IAAD,IACL,oBAO3B,iDAAW/B,KAAX,aACMG,EAAKzD,KAAI,SAACJ,EAAKM,GAEZ,OADAsD,EAAW5D,GAEP,eAAC,WAAD,2BAAcA,EAAI0F,eAAlB,cACI,6BACK1F,EAAI2F,MAAMvF,KAAI,SAAAwF,GACX,OAAO,+CAAQA,EAAKC,gBAAb,kBAAkD,cAAnBD,EAAK9G,OAAOY,GAAqBY,EAAI,EAAKkE,EAAYpB,EAAYwC,EAAKL,OAAO,QAA7G,aAGdvF,EAAI8F,WACD,6BACI,oBAAIC,QAASzB,EAAepF,OAA5B,SAQK4D,EAAsB,CAAE9C,YAGjC,0B,sJCsLjBgG,I,cClUTC,EAAa,CACfC,KAAM,UAAWC,MAAO,OAAQC,IAAK,WAgL1BC,EA7KC,CACZ,CACIC,OAAQ,KACRC,SAAU,OAEd,CACID,OAAQ,OACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,aAEd,CACID,OAAQ,YACRC,SAAU,YAEd,CACID,OAAQ,aACRC,SAAU,eAEd,CACID,OAAQ,kBACRC,SAAU,eAad,CACID,OAAQ,UACRC,SAAU,wBAId,CACID,OAAQ,aACRC,SAAU,wBAId,CACID,OAAQ,gBACRC,SAAS,UAIb,CACID,OAAQ,SACRC,SAAS,WAIb,CACID,OAAQ,qBACRC,SAAU,cACVC,SAAU,SAACC,EAAGC,GACV,OAAO,IAAIhF,KAAKgF,EAAEzG,OAAO0G,aAAe,IAAIjF,KAAK+E,EAAExG,OAAO0G,cAE9DC,KAAM,YAAc,IAAZzH,EAAW,EAAXA,MACJ,YAAaI,IAAVJ,EAA4B,IAAIuC,KAAKvC,GAAO0H,mBAAmB,QAASZ,GAC/D,KAGpB,CACIK,OAAQ,mBACRC,SAAU,qBAId,CACID,OAAQ,oBACRC,SAAU,mBAId,CACID,OAAQ,SACRQ,eAAe,EACfC,qBAAqB,EACrBH,KAAM,gBAAEhB,EAAF,EAAEA,KAAF,OACF,qCACI,cAAC,IAAD,CAASoB,GAAG,iBACRpC,UAAU,UACVqC,MAAM,YACNpC,QAAS,WACLqC,aAAaC,QAAQ,eAAgBvB,EAAK5F,IAAIC,OAAOmH,YAJ7D,SAMI,wBACIxC,UAAU,aADd,SAGI,8BACI,cAAC,IAAD,CAASA,UAAU,0BAID,UAA7BgB,EAAK5F,IAAIC,OAAOoH,UAAkF,KAAzDC,KAAKC,MAAML,aAAaM,QAAQ,aAAaC,SAA8E,gBAA3DH,KAAKC,MAAML,aAAaM,QAAQ,aAAaE,UAc1I,KAdyK,cAAC,IAAD,CAASV,GAAG,0BAC9LpC,UAAU,UACVqC,MAAM,eACNpC,QAAS,WACLqC,aAAaC,QAAQ,eAAgBvB,EAAK5F,IAAIC,OAAOmH,WACrDF,aAAaC,QAAQ,mBAAoBvB,EAAK5F,IAAIC,OAAO0H,WALqH,SAOlL,wBACI/C,UAAU,aADd,SAGI,8BACI,cAAC,IAAD,CAAOA,UAAU,gC,iCC1E9ByB,EA9CC,CACZ,CACIC,OAAQ,QACRC,SAAU,aAEd,CACID,OAAQ,OACRC,SAAU,YAEd,CACID,OAAQ,aACRC,SAAU,eAEd,CACID,OAAQ,kBACRC,SAAU,cACVK,KAAM,YAAc,IAAZzH,EAAW,EAAXA,MACJ,OAAO,4BAAIA,EAAMyI,MAAM,KAAK,OAOpC,CACItB,OAAQ,YACRC,SAAU,YAEd,CACID,OAAQ,cACRC,SAAU,SACVK,KAAM,YAAgB,IAAbzH,EAAY,EAAZA,MACD6B,EAAQ,CACR6G,MAAO,SAQX,MANc,WAAV1I,IACA6B,EAAQ,CACJ6G,MAAO,QAIR,mBAAG7G,MAAOA,EAAV,SAAkB7B,O,6CCjC/B2I,EAAG,sCAsQMC,EAlQA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0CJ,qBAA1C,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAwBV,oBAAS,GAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAClC,EAA0BZ,oBAAS,GAAnC,mBAAOc,EAAP,KAAcC,EAAd,KACMC,EAAe,kBAAMD,GAAS,IAgIpC,OA7HAE,qBAAU,WAEN,IAAIC,EAAS,CACTC,eAAgB,CACZhC,UAAWY,IAInBqB,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OAAKzB,EAAL,wBACH/E,KAAMoG,EACN/D,QAAS,CACL,eAAgB,sBAGnBoE,MAAK,SAAAC,GAEFpB,EAAYoB,EAAS1G,KAAK2G,MAAM,IAChC,IAAIC,EAAU,CACVP,eAAgB,IAEoB,WAApCK,EAAS1G,KAAK2G,MAAM,GAAGrC,SACvBsC,EAAU,CACNP,eAAgB,CACZQ,YAAa5B,IAIoB,UAApCyB,EAAS1G,KAAK2G,MAAM,GAAGrC,WAC5BsC,EAAU,CACNP,eAAgB,CACZhC,UAAWqC,EAAS1G,KAAK2G,MAAM,GAAGE,eAK9CP,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OAAKzB,EAAL,wBACH/E,KAAM4G,EACNvE,QAAS,CACL,eAAgB,sBAGnBoE,MAAK,SAAAK,GAEFtB,EAAiBsB,EAAU9G,KAAK2G,OAChCvB,GAAW,MAEd2B,OAAM,SAAAC,GAEH5B,GAAW,SAGtB2B,OAAM,SAAAC,GAEH5B,GAAW,QAEpB,IAGHe,qBAAU,WACN,GAAIV,EAAY,CACZL,GAAW,GACX,IAAI6B,EAA4B,WAApB5B,EAAS6B,OAAsB,WAAa,SAEpDC,EAAQ,CACRC,YAAa,CACT/C,UAAWgB,EAASgC,kBAExBC,UAAW,CACPJ,OAAQD,IAIhBX,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OAAKzB,EAAL,kBACH/E,KAAMmH,EACN9E,QAAS,CACL,eAAgB,sBAGnBoE,MAAK,SAAAC,GAEFhB,GAAY,GACZ6B,OAAOC,SAASC,YAEnBV,OAAM,SAAAC,GAEHtB,GAAY,MAEpBN,GAAW,MAEhB,CAACK,IAEJU,qBAAU,WACN,GAAIR,EAAY,CACZP,GAAW,GACX,IAAI+B,EAAQ,CACRO,OAAQrC,EAASsC,KAGrBrB,IAAM,CACFC,OAAQ,OACRC,IAAI,GAAD,OAAKzB,EAAL,oBACH/E,KAAMmH,EACN9E,QAAS,CACL,eAAgB,sBAGnBoE,MAAK,SAAAC,GAEFd,GAAY,GACZ2B,OAAOC,SAASC,YAEnBV,OAAM,SAAAC,GAEHpB,GAAY,MAEpBR,GAAW,MAEhB,CAACO,IAEAR,EACO,2CAIP,sBAAKtD,UAAU,SAAf,UAGI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAK+F,IAAKvC,EAASwC,eAEvB,sBAAKhG,UAAU,uBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,wCAEJ,qBAAKA,UAAU,mCAAf,SACI,sCAEJ,qBAAKA,UAAU,mCAAf,SACI,6BAAKwD,EAAST,gBAGtB,sBAAK/C,UAAU,6BAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,8CAEJ,qBAAKA,UAAU,mCAAf,SACI,sCAEJ,qBAAKA,UAAU,mCAAf,SACI,6BAAKwD,EAASyC,SAAWzC,EAASyC,SAASjD,MAAM,KAAK,GAAK,UAGnE,sBAAKhD,UAAU,6BAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,yCAEJ,qBAAKA,UAAU,mCAAf,SACI,sCAEJ,qBAAKA,UAAU,mCAAf,SACI,6BAAKwD,EAASgC,wBAGtB,sBAAKxF,UAAU,6BAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,yCAEJ,qBAAKA,UAAU,mCAAf,SACI,sCAEJ,qBAAKA,UAAU,mCAAf,SACI,6BAA2B,WAAtBwD,EAASf,SAAwBe,EAAS0C,aAAe,cAGtE,qBAAKlG,UAAU,6BAAf,SACI,+BAwBZ,sBAAKA,UAAU,eAAf,UAGI,qBAAKA,UAAU,qBAAf,SACI,6BAA2B,WAAtBwD,EAASf,SAAwB,YAAc,qBAExD,cAAC1E,EAAA,EAAD,CACIE,QAASI,EACTL,KAAM0F,OAGd,eAACyC,EAAA,EAAD,CAAOnC,KAAMA,EAAMoC,OAAQlC,EAAalE,UAAU,QAAlD,UACI,cAACmG,EAAA,EAAMzE,OAAP,CAAc2E,aAAW,EAAzB,SACI,cAACF,EAAA,EAAMG,MAAP,sCAEJ,cAACH,EAAA,EAAMI,KAAP,iEACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYxG,QAASiE,EAAalE,UAAU,OAA5D,oBAGA,cAACwG,EAAA,EAAD,CAAQC,QAAQ,UAAUxG,QAAS,kBAAM4D,GAAY,IAAQ7D,UAAU,SAAvE,uBAIJ,eAACmG,EAAA,EAAD,CAAOnC,KAAMG,EAAOiC,OAAQ/B,EAAcrE,UAAU,QAApD,UACI,cAACmG,EAAA,EAAMzE,OAAP,CAAc2E,aAAW,EAAzB,SACI,cAACF,EAAA,EAAMG,MAAP,kCAEJ,cAACH,EAAA,EAAMI,KAAP,6DACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYxG,QAASoE,EAAcrE,UAAU,OAA7D,oBAGA,cAACwG,EAAA,EAAD,CAAQC,QAAQ,UAAUxG,QAAS,kBAAM4D,GAAY,IAAQ7D,UAAU,SAAvE,2B,uBC3ED0G,UAhLF,WAIOC,cADd,IAAD,MAED,EAAgCtD,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,oBAAS,GAAjC,mBACMuD,GADN,UACkB,UAAGlE,KAAKC,MAAML,aAAaM,QAAQ,aAAaiE,yBAAhD,QAAqE,IACjFC,EAAgB,UAAGpE,KAAKC,MAAML,aAAaM,QAAQ,aAAakE,wBAAhD,QAAoE,GACpFjE,EAAO,UAAGH,KAAKC,MAAML,aAAaM,QAAQ,aAAaC,eAAhD,QAA2D,GAMxEyB,qBAAU,WACN,IAAIC,EAAsB,CACtBC,eAAgB,CACZuC,UAAW,uBAEXhF,YAAa,CACT,KAAQiF,IAAS/J,cAAc+F,MAAM,KAAK,KAMlDiE,eAAgB,CACZlE,SAAU,GAEdmE,MAAO9G,OAAO+G,kBAiBlBC,YAAY7C,GACXK,MAAK,SAAAC,GAEF,GADAjJ,QAAQC,IAAIgJ,EAAS1G,MACN,KAAZ0E,EAAgB,CACfjH,QAAQC,IAAI,gBAAkBgH,GAE9B,IADA,IAAIiC,EAAQ,GACJpJ,EAAI,EAAGA,EAAImJ,EAAS1G,KAAK2G,MAAMxK,OAAQoB,IAC3CE,QAAQC,IAAI,mBAAqBgJ,EAAS1G,KAAK2G,MAAMpJ,GAAG8G,WACrDqC,EAAS1G,KAAK2G,MAAMpJ,GAAG2L,WAAaxE,IAAYgC,EAAS1G,KAAK2G,MAAMpJ,GAAG2L,UAAUC,YAChFxC,EAAMyC,KAAK1C,EAAS1G,KAAK2G,MAAMpJ,IAGvC+H,EAAYqB,GACZvB,GAAW,QAEV,GAAwB,KAArBuD,EAAyB,CAC7BlL,QAAQC,IAAI,cAAgBiL,GAC5B,IAAIxB,EAAQ,CACRd,eAAgB,CACZsC,iBAAkBA,IAG1BU,YAAmBlC,GAClBV,MAAK,SAAA6C,GACF7L,QAAQC,IAAI4L,EAAItJ,MAGhB,IAFA,IAAIpC,EAAI0L,EAAItJ,KAAKuJ,KAAK,GAAGC,cACrB7C,EAAQ,GACJpJ,EAAI,EAAGA,EAAImJ,EAAS1G,KAAK2G,MAAMxK,OAAQoB,IAAI,CAC/CE,QAAQC,IAAI,mBAAqBgJ,EAAS1G,KAAK2G,MAAMpJ,GAAG8G,WACxD,IAAI,IAAIoF,EAAI,EAAGA,EAAI7L,EAAEzB,OAAQsN,IAEzB,GADAhM,QAAQC,IAAI,WAAaE,EAAE6L,IACxB/C,EAAS1G,KAAK2G,MAAMpJ,GAAG2L,WAAatL,EAAE6L,KAAO/C,EAAS1G,KAAK2G,MAAMpJ,GAAG2L,UAAUC,WAAW,CACxFxC,EAAMyC,KAAK1C,EAAS1G,KAAK2G,MAAMpJ,IAC/B,OAIZ+H,EAAYqB,GACZvB,GAAW,WAGd,GAAoB,KAAjBqD,EAAqB,CACzBhL,QAAQC,IAAI,mBAAqB+K,GACjC,IAAItB,EAAQ,CACRd,eAAgB,CACZqC,kBAAmB,CACf,OAAUD,KAItBiB,YAAuBvC,GACtBV,MAAK,SAAA6C,GACF7L,QAAQC,IAAI4L,EAAItJ,MAEhB,IADA,IAAI2G,EAAQ,GACJpJ,EAAI,EAAGA,EAAImJ,EAAS1G,KAAK2G,MAAMxK,OAAQoB,IAAI,CAC/CE,QAAQC,IAAI,mBAAqBgJ,EAAS1G,KAAK2G,MAAMpJ,GAAG8G,WACxD,IAAI,IAAIoF,EAAI,EAAGA,EAAIH,EAAItJ,KAAKuJ,KAAKpN,OAAQsN,IAErC,GADAhM,QAAQC,IAAI,oBAAsB4L,EAAItJ,KAAKuJ,KAAKE,GAAGpF,WAChDiF,EAAItJ,KAAKuJ,KAAKE,GAAGpF,YAAcqC,EAAS1G,KAAK2G,MAAMpJ,GAAG8G,UAAU,CAC/DsC,EAAMyC,KAAK1C,EAAS1G,KAAK2G,MAAMpJ,IAC/B,OAIZ+H,EAAYqB,GACZvB,GAAW,WAIfE,EAAYoB,EAAS1G,KAAK2G,OAC1BvB,GAAW,MAGlB2B,OAAM,SAAAC,GAEH5B,GAAW,QAEhB,IAEH,IAAMrF,EAAwB4J,uBAC1B,gBAAG1M,EAAH,EAAGA,IAAH,OACI,cAAC,EAAD,CAAQgI,aAAchI,EAAIC,OAAOmH,cAGrC,IAGJ,OAAGc,EACQ,cAACyE,EAAA,EAAD,IAGP,sBAAK/H,UAAU,WAAf,UACI,cAACgI,EAAA,EAAD,CACIC,YAAY,qBACZC,OAAQ,CACJ,CAAEC,KAAM,kBACR,CAAEA,KAAM,WAAaC,KAAM,gBAInC,qBAAKpI,UAAU,iBAAf,SACI,cAACjC,EAAA,EAAD,CACIE,QAASI,EACTL,KAAMwF,EACNtF,sBAAuBA,W,iCCrK3C,oEAAO,IAAMmK,EAAc,CAAC,8BAA+B,6BAA8B,6BAA8B,4BAA6B,4BAA6B,sBAAuB,yBAA0B,yBAA0B,oBAAqB,uBAAwB,8BAA+B,8BAA+B,uBAAwB,uBAAwB,0BAA2B,2BAA4B,0BAA2B,wBAAyB,uBAAwB,4BAA6B,uBAAwB,8BAA+B,8BAA+B,+BAAgC,2BAA4B,4BAA6B,+BAAgC,+BAAgC,4BAA6B,4BAA6B,gCACn1BrB,EAAW,IAAIlK,KAAK,e,4ECDjC,+BAsBekL,IAlBf,YAAgD,IAA7BC,EAA4B,EAA5BA,YAA4B,IAAfC,cAAe,MAAN,GAAM,EAE3C,OACI,sBAAKlI,UAAU,UAAf,UACI,6BAAKiI,IACL,oBAAIjI,UAAU,qBAAd,SACKkI,EAAO5N,OAAS,GAAK4N,EAAO1M,KAAI,SAAC8M,EAAM5M,GACpC,OAAG4M,EAAKF,KACG,qBAAIpI,UAAU,0BAAd,UAAgD,cAAC,IAAD,CAASuI,OAAK,EAACnG,GAAIkG,EAAKF,KAAxB,SAA+BE,EAAKH,OAApF,MAA6CzM,GAE7C,qBAAIsE,UAAU,0BAAd,cAAiD,+BAAOsI,EAAKH,OAA7D,MAA6CzM,a,qDCd5E,60BAGa8M,EAAiB,SAACC,GAAD,OAAWhE,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXkI,EAAiB,SAACD,GAAD,OAAWhE,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX4G,EAAc,SAACqB,GAAD,OAAWhE,IAAM,CACxCC,OAAQ,OACRC,IAAKA,IAAM,mBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXmI,EAAiB,SAACF,GAAD,OAAWhE,IAAM,CAC3CC,OAAQ,OACRC,IAAKA,IAAM,yBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXoI,EAAkB,SAACH,GAAD,OAAWhE,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,uBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXqI,EAAwB,SAACJ,GAAD,OAAWhE,IAAM,CAClDC,OAAQ,OACRC,IAAKA,IAAM,kCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXsI,EAAkB,SAACL,GAAD,OAAWhE,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXuI,EAAkB,SAACN,GAAD,OAAWhE,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXwI,EAAmB,SAACP,GAAD,OAAWhE,IAAM,CAC7CC,OAAQ,OACRC,IAAKA,IAAM,sBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXyI,EAAsB,SAACR,GAAD,OAAWhE,IAAM,CAChDC,OAAQ,OACRC,IAAKA,IAAM,wBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX0I,EAA8B,SAACT,GAAD,OAAWhE,IAAM,CACxDC,OAAQ,OACRC,IAAKA,IAAM,kCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX2I,EAAkB,SAACV,GAAD,OAAWhE,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,4BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX4I,EAAsB,SAACX,GAAD,OAAWhE,IAAM,CAChDC,OAAQ,OACRC,IAAKA,IAAM,0BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX6I,EAAyB,SAACZ,GAAD,OAAWhE,IAAM,CACnDC,OAAQ,OACRC,IAAKA,IAAM,gCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX8I,EAAqB,SAACb,GAAD,OAAWhE,IAAM,CAC/CC,OAAQ,OACRC,IAAKA,IAAM,8BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIX+I,EAAyB,SAACd,GAAD,OAAWhE,IAAM,CACnDC,OAAQ,OACRC,IAAKA,IAAM,6BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAaXgJ,EAAe,SAACf,GAAD,OAAWhE,IAAM,CACzCC,OAAQ,OACRC,IAAKA,IAAM,kBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXiJ,EAAmB,SAAChB,GAAD,OAAWhE,IAAM,CAC7CC,OAAQ,OACRC,IAAKA,IAAM,iCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXqH,EAAyB,SAACY,GAAD,OAAWhE,IAAM,CACnDC,OAAQ,OACRC,IAAKA,IAAM,uCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXkJ,EAAgB,SAACjB,GAAD,OAAWhE,IAAM,CAC1CC,OAAQ,OACRC,IAAKA,IAAM,+BACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXgH,EAAqB,SAACiB,GAAD,OAAWhE,IAAM,CAC/CC,OAAQ,OACRC,IAAKA,IAAM,uCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXmJ,EAAyB,SAAClB,GAAD,OAAWhE,IAAM,CACnDC,OAAQ,OACRC,IAAKA,IAAM,kCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXoJ,EAAuB,SAACnB,GAAD,OAAWhE,IAAM,CACjDC,OAAQ,OACRC,IAAKA,IAAM,wBACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB,uBAIXqJ,EAAkB,SAACpB,GAAD,OAAWhE,IAAM,CAC5CC,OAAQ,OACRC,IAAKA,IAAM,mCACXxG,KAAMsK,EACNjI,QAAS,CACL,eAAgB","file":"static/js/39.41fdcf93.chunk.js","sourcesContent":["import React from 'react'\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// A great library for fuzzy filtering/sorting items\nimport {matchSorter} from 'match-sorter'\n\nexport function GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n      setGlobalFilter(value || undefined)\n    }, 200)\n  \n    return (\n      <span>\n        Search:{' '}\n        <input\n          value={value || \"\"}\n          onChange={e => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n          style={{\n            fontSize: '1.1rem',\n            border: '0',\n          }}\n        />\n      </span>\n    )\n  }\n  \n  // Define a default UI for filtering\n  export function DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n  }) {\n    const count = preFilteredRows.length\n  \n    return (\n      <input\n        value={filterValue || ''}\n        onChange={e => {\n          setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search...`}\n      />\n    )\n  }\n  \n  // This is a custom filter UI for selecting\n  // a unique option from a list\n  export function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set()\n      preFilteredRows.forEach(row => {\n        if(row.values[id] !== undefined && !options.has(row.values[id])) options.add(row.values[id])\n      })\n      return [...options.values()]\n    }, [id, preFilteredRows])\n  \n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined)\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    )\n  }\n\n  // This is a custom filter UI for selecting\n  // a unique option from a list\n  export function SelectArrayColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set()\n      preFilteredRows.forEach(row => {\n        console.log('ini row', row.values[id]);\n        console.log('ini tipe row', row.values[id] instanceof Array)\n        console.log('ini length row', row.values[id].length);\n        if(row.values[id] instanceof Array && row.values[id].length > 0) {\n          for(var i = 0; i< row.values[id].length; i++) {\n            var x = row.values[id][i]\n            if(x !== undefined && !options.has(x)) options.add(x)\n          }\n        }\n      })\n      return [...options.values()]\n    }, [id, preFilteredRows])\n  \n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined)\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    )\n  }\n  \n  // This is a custom filter UI that uses a\n  // slider to set the filter value between a column's\n  // min and max values\n  export function SliderColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    // Calculate the min and max\n    // using the preFilteredRows\n  \n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <>\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          value={filterValue || min}\n          onChange={e => {\n            setFilter(parseInt(e.target.value, 10))\n          }}\n        />\n        <button onClick={() => setFilter(undefined)}>Off</button>\n      </>\n    )\n  }\n  \n  // This is a custom UI for our 'between' or number range\n  // filter. It uses two number boxes and filters rows to\n  // ones that have values between the two\n  export function NumberRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id },\n  }) {\n    const [min, max] = React.useMemo(() => {\n      let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n      preFilteredRows.forEach(row => {\n        min = Math.min(row.values[id], min)\n        max = Math.max(row.values[id], max)\n      })\n      return [min, max]\n    }, [id, preFilteredRows])\n  \n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <input\n          value={filterValue[0] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n          }}\n          min={min}\n          placeholder={`Min (${min})`}\n          style={{\n            width: '70px',\n            marginRight: '0.5rem',\n          }}\n        />\n        to\n        <input\n          value={filterValue[1] || ''}\n          type=\"number\"\n          onChange={e => {\n            const val = e.target.value\n            setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n          }}\n          min={min}\n          placeholder={`Max (${max})`}\n          style={{\n            width: '70px',\n            marginLeft: '0.5rem',\n          }}\n        />\n      </div>\n    )\n  }\n\n  export function DateRangeColumnFilter({\n    column: { filterValue = [], preFilteredRows, setFilter, id }}) \n  {\n    const [min, max] = React.useMemo(() => {\n        let min = new Date('2022-08-13')\n        let max = new Date()\n        max.setFullYear(max.getFullYear() + 1)\n        preFilteredRows.forEach(row => {\n            min = row.values[id] ? new Date(row.values[id]) <= min ? new Date(row.values[id]) : min : min\n            max = row.values[id] ? new Date(row.values[id]) >= max ? new Date(row.values[id]) : max : max\n        });\n        return [min, max];\n    }, [id, preFilteredRows]);\n    // console.log(min, max)\n    return (\n        <div\n            style={{\n                display: \"flex\"\n            }}\n        >\n            <input\n                value={filterValue[0] || min.toISOString().slice(0, 10)}\n                type=\"date\"\n                min={min.toISOString().slice(0, 10)}\n                max={filterValue[1] || max.toISOString().slice(0, 10)}\n                onChange={e => {\n                    const val = e.target.value;\n                    // console.log(e.target.value);\n                    setFilter((old = []) => [val ? (val) : undefined, old[1]]);\n                }}\n                style={{\n                    width: \"130px\",\n                    marginRight: \"0.2rem\"\n                }}\n            />\n            to\n      <input\n                value={filterValue[1] || max.toISOString().slice(0, 10)}\n                type=\"date\"\n                min={filterValue[0] || min.toISOString().slice(0, 10)}\n                max={max.toISOString().slice(0, 10)}\n                onChange={e => {\n                    const val = e.target.value;\n                    setFilter((old = []) => [old[0], val ? (val) : undefined]);\n                }}\n                style={{\n                    width: \"130px\",\n                    marginLeft: \"0.2rem\"\n                }}\n            />\n        </div>\n    );\n}\n\n  export function filterGreaterThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue >= filterValue\n    })\n  }\n\n  export function filterLessThanOrEqual(rows, id, filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue <= filterValue\n    })\n  }\n  \n  export function fuzzyTextFilterFn(rows, id, filterValue) {\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n  }\n  \n  // Let the table remove the filter if the string is empty\n  fuzzyTextFilterFn.autoRemove = val => !val\n\n  export function dateBetweenFilterFn(rows, id, filterValues) {\n    let sd = new Date(filterValues[0]);\n    let ed = new Date(filterValues[1]);\n    // console.log(rows, id, filterValues)\n    return rows.filter(r => {\n        var time = new Date(r.values[id]);\n        // console.log(time, ed, sd)\n        if (filterValues.length === 0) return rows;\n        return (time >= sd && time <= ed);\n    });\n}\n\ndateBetweenFilterFn.autoRemove = val => !val;\n  ","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n\n    const initialState = { hiddenColumns: ['_id'], pageSize: 20 };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        initialState\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[20, 50, 100].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import React, { useMemo, useEffect, useState, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter, useFilters, useRowSelect } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\nimport { DefaultColumnFilter, fuzzyTextFilterFn, dateBetweenFilterFn } from './TableFilter'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nimport { FaFilePdf, FaTable, FaBell, FaSave } from \"react-icons/fa\";\n\nfunction TableUserControl({ DATA, COLUMNS, renderRowSubComponent, showCheckbox = false, notifContext = '', controlUsers }) {\n    const filterTypes = React.useMemo(\n        () => ({\n          // Add a new fuzzyTextFilterFn filter type.\n          fuzzyText: fuzzyTextFilterFn,\n          dateBetween: dateBetweenFilterFn,\n          // Or, override the default text filter to use\n          // \"startWith\"\n          text: (rows, id, filterValue) => {\n            return rows.filter(row => {\n              const rowValue = row.values[id]\n              return rowValue !== undefined\n                ? String(rowValue)\n                    .toLowerCase()\n                    .startsWith(String(filterValue).toLowerCase())\n                : true\n            })\n          },\n        }),\n        []\n      )\n    \n      const defaultColumn = React.useMemo(\n        () => ({\n          // Let's set up our default Filter UI\n          Filter: DefaultColumnFilter,\n        }),\n        []\n      )\n\n      const IndeterminateCheckbox = React.forwardRef(\n        ({ indeterminate, ...rest }, ref) => {\n          const defaultRef = React.useRef()\n          const resolvedRef = ref || defaultRef\n      \n          React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n          }, [resolvedRef, indeterminate])\n      \n          return (\n            <>\n              <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n          )\n        }\n      )\n\n    const data = useMemo( () => DATA , [DATA]);\n\n    const initialState = { hiddenColumns: ['emailUser', 'parentEmail', '_id'], pageSize: 20 };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        selectedFlatRows,\n        state: { selectedRowIds },\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        defaultColumn, // Be sure to pass the defaultColumn option\n        filterTypes,\n        initialState\n    }, useFilters\n    , useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination\n    , useRowSelect\n    , hooks => {\n        if(showCheckbox) hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n      })\n\n    const { globalFilter } = state;\n\n    const downloadAsCSV = () => {\n        const currentRecords = rows;\n        // console.log(currentRecords);\n        var data_to_download = [];\n        for (var i = 0; i < currentRecords.length; i++) {\n            let record_to_download = {};\n            prepareRow(currentRecords[i]);\n            // console.log(currentRecords[i].cells);\n            for (var colIndex = 0; colIndex < currentRecords[i].cells.length; colIndex++) {\n                if(currentRecords[i].cells[colIndex].column.id !== 'rowNumber' &&\n                currentRecords[i].cells[colIndex].column.id !== 'selection' &&\n                currentRecords[i].cells[colIndex].column.id !== 'buttonStatus') {\n                    if(currentRecords[i].cells[colIndex].value && Object.prototype.toString.call(currentRecords[i].cells[colIndex].value) === \"[object Date]\" && !isNaN(currentRecords[i].cells[colIndex].value))\n                        record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                        currentRecords[i].cells[colIndex].value.toISOString().split('T')[0];\n                    else record_to_download[currentRecords[i].cells[colIndex].column.Header] =\n                        currentRecords[i].cells[colIndex].value;\n                }\n            }\n            data_to_download.push(record_to_download);\n        }\n        return data_to_download;\n    }\n\n    const downloadAsPDF = () => {\n        const dataRaw = downloadAsCSV();\n        if(dataRaw.length > 0) {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(15);\n\n            const title = \"Report\";\n            const headers = [Object.keys(dataRaw[0])];\n\n            const data = dataRaw.map(e => Object.values(e));\n\n            let content = {\n                startY: 50,\n                head: headers,\n                body: data\n            };\n\n            doc.text(title, marginLeft, 40);\n            doc.autoTable(content);\n            doc.save(\"report.pdf\");\n        }\n    }\n\n    const [modeAsuh, setModeAsuh] = useState('normal');\n\n    return (\n        <>\n        <div className=\"tools\">\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n            {/* <button className=\"btn_tools\"><FaTable/> <CSVLink data={downloadAsCSV()}>Download as CSV</CSVLink></button>\n            <button className=\"btn_tools\" onClick={downloadAsPDF}><FaFilePdf/> Download as PDF</button> */}\n            <div className=\"user_tools\">{showCheckbox && selectedFlatRows.length > 0 ? (<div className=\"mode-asuh-option\">\n                <label>Mode Asuh</label>\n                <select value={modeAsuh} onChange={(e) => {\n                    setModeAsuh(e.target.value);\n                }}>\n                    <option value='normal'>Normal</option>\n                    <option value='diawasi'>Diawasi</option>\n                    <option value='dihukum'>Dihukum</option>\n                </select></div>\n             ) : null}\n            {showCheckbox && selectedFlatRows.length > 0 ? (<button className=\"btn_tools\" onClick={() => {\n                    var stringEmail = [];\n                    for(var i = 0; i < selectedFlatRows.length; i++) {\n                        stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        if(selectedFlatRows[i].original.userType === 'child') {\n                            if(!stringEmail.includes(selectedFlatRows[i].original.emailUser)) stringEmail.push(selectedFlatRows[i].original.emailUser);\n                        }\n                    }\n                    controlUsers(stringEmail, modeAsuh);\n                }}><FaSave/> Simpan Pengaturan</button>\n             ) : null}</div>\n        </div>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[20, 50, 100].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <>\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n                   <tr>\n                        {headerGroup.headers.map(column => (\n                            <th>{column.canFilter ? column.render('Filter') : null}</th>\n                        ))}\n                   </tr>\n                   </>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    // console.log(cell);\n                                    return <td {...cell.getCellProps()} className={(cell.value && !Array.isArray(cell.value)) || (Array.isArray(cell.value) && cell.value.length > 0) || cell.column.id === 'selection'\n                                    || cell.column.id === 'rowNumber' ? \"cell\" : \"cell\"}> {cell.column.id !== 'rowNumber' ? \n                                         cell.render('Cell')\n                                        : i + 1 + (pageIndex * pageSize)} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default TableUserControl\n","\nimport { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = [\n    {\n        Header: 'ID',\n        accessor: '_id'\n    },\n    {\n        Header: 'Nama',\n        accessor: 'nameUser'\n    },\n    {\n        Header: 'Email',\n        accessor: 'emailUser'\n    },\n    {\n        Header: 'Tipe User',\n        accessor: 'userType'\n    },\n    {\n        Header: 'No Telepon',\n        accessor: 'phoneNumber'\n    },\n    {\n        Header: 'Email Orang tua',\n        accessor: 'parentEmail',\n        // disableFilters: true,\n        // disableGlobalFilter: true\n    },\n    // {\n    //     Header: 'Nama Orang tua',\n    //     accessor: 'parentName',\n    //     // disableFilters: true,\n    //     Cell: ({value}) => {\n    //         if(value !== undefined) return value.join(', ');\n    //         else return '';\n    //     }\n    // },\n    {\n        Header: 'Sekolah',\n        accessor: 'childInfo.schoolName',\n        // Filter: SelectColumnFilter,\n        // filter: 'equals'\n    },\n    {\n        Header: 'Pendidikan',\n        accessor: 'childInfo.StudyLevel',\n        // Filter: SelectColumnFilter,\n        // filter: 'equals'\n    },\n    {\n        Header: 'Jenis Kelamin',\n        accessor:'gender',\n    //     Filter: SelectColumnFilter,\n    //     filter: 'equals'\n    },\n    {\n        Header: 'Alamat',\n        accessor:'address',\n        // disableFilters: true\n    },\n\n    {\n        Header: 'Tanggal Registrasi',\n        accessor: 'dateCreated',\n        sortType: (a, b) => {\n            return new Date(b.values.dateCreated) - new Date(a.values.dateCreated);\n        },\n        Cell: ({value}) => {\n            if(value !== undefined) return new Date(value).toLocaleDateString(\"id-ID\", dateFormat);\n            else return ''\n        }\n    },\n    {\n        Header: 'Mulai Berlanggan',\n        accessor: 'startSubscription',\n        // Filter: DateRangeColumnFilter,\n        // filter: 'dateBetween'\n    },\n    {\n        Header: 'Berlanggan Sampai',\n        accessor: 'endSubscription',\n        // Filter: DateRangeColumnFilter,\n        // filter: 'dateBetween'\n    },\n    {\n        Header: 'Action',\n        disableSortBy: true,\n        disableGlobalFilter: true,\n        Cell: ({cell}) => (\n            <>\n                <NavLink to=\"/cms/user/edit\"\n                    className=\"nav_btn\"\n                    title=\"Edit User\"\n                    onClick={() => {\n                        localStorage.setItem('userSelected', cell.row.values.emailUser)\n                    }}>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiEdit2 className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink>\n                {cell.row.values.userType === 'child' && (JSON.parse(localStorage.getItem('userData')).sekolah !== '' ||  JSON.parse(localStorage.getItem('userData')).userLevel === 'Super Admin') ? <NavLink to=\"/cms/user/child-control\"\n                    className=\"nav_btn\"\n                    title=\"Kontrol User\"\n                    onClick={() => {\n                        localStorage.setItem('userSelected', cell.row.values.emailUser)\n                        localStorage.setItem('userNameSelected', cell.row.values.nameUser)\n                    }}>\n                    <button\n                        className=\"btn_action\"\n                    >\n                        <div>\n                            <FiEye className=\"btn_action-icon\" />\n                        </div>\n                    </button>\n                </NavLink> : null}\n            </>\n        )\n    }\n    \n    \n    // {\n    //     Header: 'Tgl. Registrasi',\n    //     accessor: 'dateCreated',\n    //     Cell: ({ value }) => {\n    //         return <p>{value.split('T')[0]}</p>\n    //     }\n    // },\n    // {\n    //     Header: 'Nama Gereja',\n    //     accessor: 'namaHkbp'\n    // },\n   \n    // {\n    //     Header: 'User status',\n    //     accessor: 'status',\n    //     Cell: ({ value }) => {\n    //         let style = {\n    //             color: 'green'\n    //         };\n    //         if (value !== 'active') {\n    //             style = {\n    //                 color: 'red'\n    //             }\n    //         }\n\n    //         return <p style={style}>{value}</p>\n    //     }\n    // },\n    // {\n    //     Header: 'User Details',\n    //     id: 'expander',\n    //     Cell: ({ row }) => {\n    //         return (\n    //             /*<Link\n    //                 to=\"/helpdesk/pengguna/detail\"\n    //                 className=\"link-action\"\n    //                 onClick={() => {\n    //                     // console.log(cell.row.values.emailUser);\n    //                     localStorage.setItem('userSelected', cell.row.values.emailUser);\n    //                 }}\n    //                 >Detail\n    //             </Link >*/\n    //             <span {...row.getToggleRowExpandedProps()}>\n    //                 {row.isExpanded ? '- Hide' : '+ Show'}\n    //             </span>\n    //         )\n    //     }\n    // },\n];\n\nexport default Columns;","//import { Link } from 'react-router-dom';\n\nconst Columns = [\n    {\n        Header: 'Email',\n        accessor: 'emailUser'\n    },\n    {\n        Header: 'Nama',\n        accessor: 'nameUser'\n    },\n    {\n        Header: 'No Telepon',\n        accessor: 'phoneNumber'\n    },\n    {\n        Header: 'Tgl. Registrasi',\n        accessor: 'dateCreated',\n        Cell: ({value}) => {\n            return <p>{value.split('T')[0]}</p>\n        }\n    },\n    // {\n    //     Header: 'Nama Gereja',\n    //     accessor: 'namaHkbp'\n    // },\n    {\n        Header: 'Tipe User',\n        accessor: 'userType'\n    },\n    {\n        Header: 'User status',\n        accessor: 'status',\n        Cell: ({ value }) => {\n            let style = {\n                color: 'green'\n            };\n            if (value !== 'active') {\n                style = {\n                    color: 'red'\n                }\n            }\n\n            return <p style={style}>{value}</p>\n        }\n    }\n];\n\nexport default Columns;","import React, { useState, useEffect } from 'react';\n// import TableDetail from '../../../../components/UI/Table/Table';\nimport TableDetail from '../../../../components/UI/Table/Table'\nimport columns from './columns';\nimport Heading from '../../../../components/UI/Heading/Heading'\n// import Heading from './../../../components/UI/Heading/Heading';\nimport axios from 'axios';\nimport './Detail.scss';\nimport { Modal, Button } from 'react-bootstrap'\n\nconst URL = `https://as01.prod.ruangortu.id:8080`\n\n// https://rk.defghi.biz.id:8080\n\nconst Detail = ({ userSelected }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [userData, setUserData] = useState();\n    const [relativesData, setRelativesData] = useState();\n    const [isUpdating, setUpdating] = useState(false);\n    const [isDeleting, setDeleting] = useState(false);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    // const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        // console.log(userSelected);\n        let params = {\n            whereKeyValues: {\n                emailUser: userSelected\n            }\n        };\n        // console.log(params);\n        axios({\n            method: 'post',\n            url: `${URL}/api/user/userFilter`,\n            data: params,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(response => {\n                // console.log(response.data);\n                setUserData(response.data.users[0]);\n                let params2 = {\n                    whereKeyValues: {}\n                };\n                if (response.data.users[0].userType === 'parent') {\n                    params2 = {\n                        whereKeyValues: {\n                            parentEmail: userSelected\n                        }\n                    };\n                }\n                else if (response.data.users[0].userType === 'child') {\n                    params2 = {\n                        whereKeyValues: {\n                            emailUser: response.data.users[0].parentEmail\n                        }\n                    }\n                }\n                // console.log(params2);\n                axios({\n                    method: 'post',\n                    url: `${URL}/api/user/userFilter`,\n                    data: params2,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                })\n                    .then(response2 => {\n                        // console.log(response2);\n                        setRelativesData(response2.data.users);\n                        setLoading(false);\n                    })\n                    .catch(error => {\n                        // console.log(error);\n                        setLoading(false);\n                    })\n            })\n            .catch(error => {\n                // console.log(error);\n                setLoading(false);\n            })\n    }, []);\n\n\n    useEffect(() => {\n        if (isUpdating) {\n            setLoading(true);\n            let stats = userData.status === 'active' ? 'inactive' : 'active';\n\n            let param = {\n                whereValues: {\n                    emailUser: userData.cobrandEmailUser\n                },\n                newValues: {\n                    status: stats\n                }\n            }\n            // console.log(param);\n            axios({\n                method: 'post',\n                url: `${URL}/api/user/edit`,\n                data: param,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then(response => {\n                    // console.log(\"Response data: \", response.data);\n                    setUpdating(false);\n                    window.location.reload();\n                })\n                .catch(error => {\n                    // console.log(error);\n                    setUpdating(false);\n                });\n            setLoading(false);\n        }\n    }, [isUpdating]);\n\n    useEffect(() => {\n        if (isDeleting) {\n            setLoading(true);\n            let param = {\n                userId: userData._id\n            }\n            // console.log(param);\n            axios({\n                method: 'post',\n                url: `${URL}/api/user/remove`,\n                data: param,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then(response => {\n                    // console.log(\"Response data: \", response.data);\n                    setDeleting(false);\n                    window.location.reload();\n                })\n                .catch(error => {\n                    // console.log(error);\n                    setDeleting(false);\n                });\n            setLoading(false);\n        }\n    }, [isDeleting]);\n\n    if (isLoading) {\n        return <p>Loading...</p>;\n    }\n\n    return (\n        <div className=\"Detail\">\n            {/* DIV ORANG TUA/ANAK YANG DIPILIH */}\n\n            <div className=\"Detail_detail\">\n                <div className=\"Detail_detail_photo\">\n                    <img src={userData.imagePhoto} />\n                </div>\n                <div className=\"Detail_detail_detail\">\n                    <div className=\"Detail_detail_detail_group\">\n                        <div className=\"Detail_detail_detail_group_field\">\n                            <h5>Nama</h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_colon\">\n                            <h5>: </h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_value\">\n                            <h5>{userData.nameUser}</h5>\n                        </div>\n                    </div>\n                    <div className=\"Detail_detail_detail_group\">\n                        <div className=\"Detail_detail_detail_group_field\">\n                            <h5>Tgl. Lahir</h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_colon\">\n                            <h5>: </h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_value\">\n                            <h5>{userData.birdDate ? userData.birdDate.split('T')[0] : ''}</h5>\n                        </div>\n                    </div>\n                    <div className=\"Detail_detail_detail_group\">\n                        <div className=\"Detail_detail_detail_group_field\">\n                            <h5>Email</h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_colon\">\n                            <h5>: </h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_value\">\n                            <h5>{userData.cobrandEmailUser}</h5>\n                        </div>\n                    </div>\n                    <div className=\"Detail_detail_detail_group\">\n                        <div className=\"Detail_detail_detail_group_field\">\n                            <h5>Peran</h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_colon\">\n                            <h5>: </h5>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_value\">\n                            <h5>{userData.userType === 'parent' ? userData.parentStatus : 'Anak'}</h5>\n                        </div>\n                    </div>\n                    <div className=\"Detail_detail_detail_group\">\n                        <br />\n                    </div>\n                    {/* <div className=\"Detail_detail_detail_button\">\n                        <div className=\"Detail_detail_detail_button_active\">\n                        <button onClick={() => {\n                                {userData.status === 'active' ? setShow(true) : setShow1(true)}\n                                setShow(true)\n                            // {userData.status === 'invitation' ? null : (<button onClick={() => {\n                            //     setShow(true)\n                                // setUpdating(true);\n                            }}>{userData.status === 'active' ? `Set to Inactive` : `Set to Active`}\n                            </button>\n                        </div>\n                        <div className=\"Detail_detail_detail_group_colon\">\n                            <h2> </h2>\n                        </div>\n                        <div className=\"Detail_detail_detail_button_delete\">\n                            <button onClick={() => {\n                                setDeleting(true);\n                            }}>Delete User</button>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            <div className=\"Detail_table\">\n\n                {/* DIV ORANG TUA/ANAK YANG MEMILIKI HUBUNGAN DENGAN YANG DIPILIH */}\n                <div className=\"Detail_table_title\">\n                    <h2>{userData.userType === 'parent' ? 'List Anak' : 'List Orang Tua'}</h2>\n                </div>\n                <TableDetail\n                    COLUMNS={columns}\n                    DATA={relativesData}\n                />\n            </div>\n            <Modal show={show} onHide={handleClose} className=\"modal\" >\n                <Modal.Header closeButton>\n                    <Modal.Title>Non Aktifkan Pengguna</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Apakah anda yakin untuk Non-Aktifkan Pengguna ini?</Modal.Body>\n                <Button variant=\"secondary\" onClick={handleClose} className=\"prev\">\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={() => setUpdating(true)}  className=\"submit\">\n                    Submit\n                </Button>\n            </Modal>\n            <Modal show={show1} onHide={handleClose1} className=\"modal\" >\n                <Modal.Header closeButton>\n                    <Modal.Title>Aktifkan Pengguna</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Apakah anda yakin untuk Aktifkan Pengguna ini?</Modal.Body>\n                <Button variant=\"secondary\" onClick={handleClose1} className=\"prev\">\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={() => setUpdating(true)}  className=\"submit\">\n                    Submit\n                </Button>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Detail;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport TablePengguna from './../../../components/UI/Table/Table';\nimport TablePenggunaCheck from './../../../components/UI/Table/TableUserControl';\nimport columns from './columns';\nimport Heading from './../../../components/UI/Heading/Heading'\nimport RKLoader from './../../../components/UI/RKLoaderInner/RKLoader';\nimport './User.scss';\nimport { getUserList, getCommunityMemberList, getSchoolGroupList } from './../../../components/API/filter'\nimport Detail from './Detail/Detail';\nimport {emailTester, absStart} from '../GlobalParam'\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { connect } from 'formik';\n\nconst User = (\n    // isCurLoading,\n    // onChildrenControl\n) => {\n    const history = useHistory();\n    const [isLoading, setLoading] = useState(true);\n    const [userData, setUserData] = useState([]);\n    const [time, setTime] = useState(false);\n    const cobrandComId = JSON.parse(localStorage.getItem('userData')).cobrandComunityId ?? ''\n    const groupMitraAsuhId = JSON.parse(localStorage.getItem('userData')).groupMitraAsuhId ?? ''\n    const sekolah = JSON.parse(localStorage.getItem('userData')).sekolah ?? ''\n\n    const controlUsers = (stringEmail, modeAsuh) => {\n        setLoading(true);\n    }\n\n    useEffect(() => {\n        let params=cobrandComId ? {\n            whereKeyValues: {\n                packageId: \"com.byasia.ruangortu\",\n                // cobrandComunityId: cobrandComId,\n                dateCreated: {\n                    \"$gte\": absStart.toISOString().split(\"T\")[0]\n                },\n                // emailUser: {\n                //     \"$nin\": emailTester\n                // }\n            },\n            orderKeyValues: {\n                nameUser: 1\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        } : {\n            whereKeyValues: {\n                packageId: \"com.byasia.ruangortu\",\n                dateCreated: {\n                    \"$gte\": absStart.toISOString().split(\"T\")[0]\n                },\n                // emailUser: {\n                //     \"$nin\": emailTester\n                // }\n            },\n            orderKeyValues: {\n                nameUser: 1\n            },\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        // console.log(params);\n        getUserList(params)\n        .then(response => {\n            console.log(response.data);\n            if(sekolah !== '') {\n                console.log('Ini sekolah: ' + sekolah);\n                let users = [];\n                for(var i = 0; i < response.data.users.length; i++){\n                    console.log('EmailUser user: ' + response.data.users[i].emailUser)\n                    if(response.data.users[i].childInfo && sekolah === response.data.users[i].childInfo.schoolName){\n                        users.push(response.data.users[i]);\n                    }\n                }\n                setUserData(users);\n                setLoading(false);\n            }\n            else if(groupMitraAsuhId !== '') {\n                console.log('Ini grupMA ' + groupMitraAsuhId);\n                let param = {\n                    whereKeyValues: {\n                        groupMitraAsuhId: groupMitraAsuhId\n                    }\n                }\n                getSchoolGroupList(param)\n                .then(res => {\n                    console.log(res.data);\n                    let x = res.data.Data[0].memberSekolah\n                    let users = [];\n                    for(var i = 0; i < response.data.users.length; i++){\n                        console.log('EmailUser user: ' + response.data.users[i].emailUser)\n                        for(var j = 0; j < x.length; j++) {\n                            console.log('Sekolaa ' + x[j]);\n                            if(response.data.users[i].childInfo && x[j] === response.data.users[i].childInfo.schoolName){\n                                users.push(response.data.users[i]);\n                                break;\n                            }\n                        }\n                    }\n                    setUserData(users);\n                    setLoading(false);\n                })\n            }\n            else if(cobrandComId !== '') {\n                console.log('Ini comunityId: ' + cobrandComId);\n                let param = {\n                    whereKeyValues: {\n                        cobrandComunityId: {\n                            '$regex': cobrandComId\n                        }\n                    }\n                }\n                getCommunityMemberList(param)\n                .then(res => {\n                    console.log(res.data);\n                    let users = [];\n                    for(var i = 0; i < response.data.users.length; i++){\n                        console.log('EmailUser user: ' + response.data.users[i].emailUser)\n                        for(var j = 0; j < res.data.Data.length; j++) {\n                            console.log('EmailUser komun: ' + res.data.Data[j].emailUser);\n                            if(res.data.Data[j].emailUser === response.data.users[i].emailUser){\n                                users.push(response.data.users[i]);\n                                break;\n                            }\n                        }\n                    }\n                    setUserData(users);\n                    setLoading(false);\n                })\n            }\n            else {\n                setUserData(response.data.users);\n                setLoading(false);\n            }\n        })\n        .catch(error => {\n            // console.log(error);\n            setLoading(false);\n        })\n    }, []);\n\n    const renderRowSubComponent = useCallback(\n        ({ row }) => (\n            <Detail userSelected={row.values.emailUser}/>\n            \n        ),\n        []\n    );\n\n    if(isLoading) {\n        return <RKLoader />;\n    }\n    return (\n        <div className=\"Pengguna\">\n            <Heading\n                headingName=\"Manajemen Pengguna\"\n                routes={[\n                    { name: 'Manajemen Data'},\n                    { name: 'Pengguna' , path: '/cms/user' }\n                ]}\n            />\n            {/* <button onClick={() => setTime(true)} className='btn3'>Edit User</button> */}\n            <div className=\"Pengguna_table\">\n                <TablePengguna\n                    COLUMNS={columns}\n                    DATA={userData}\n                    renderRowSubComponent={renderRowSubComponent}\n                    // showCheckbox={sekolah === '' && cobrandComId === '' && groupMitraAsuhId === '' ? false : true}\n                    // controlUsers={controlUsers}\n                />\n            </div>\n        </div>\n    )\n}\n\n// const mapStateToProps = state => {\n//     // console.log(state.auth.isLoading);\n//     return {\n//         isCurLoading: state.auth.isLoading\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         onChildrenControl: ( stringEmail, modeAsuh, history ) =>\n//             dispatch(childrenControl( stringEmail, modeAsuh, history ))\n//     }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps) (User);\nexport default User;\n","export const emailTester = [\"singgih.zuliangga@defghi.id\", \"ortuasiaparent01@gmail.com\", \"ortuasiaparent02@gmail.com\", \"ortuasiachild01@gmail.com\", \"ortuasiachild02@gmail.com\", \"yaswin.rw@gnail.com\", \"yaswin.retdy@gmail.com\", \"rickotesting@gmail.com\", \"kartono@defghi.id\", \"kartono.cc@gmail.com\", \"mirza.dzaky.azizi@gmail.com\", \"helwaanyapanjang@gmail.com \", \"uwawwaunch@gmail.com\", \"ilhamanwar@gmail.com\", \"ricky.rachadi@gmail.com\", \"ruangortuchild@gmail.com\", \"gowesjersey02@gmail.com\", \"hafizh.dary@defghi.id\", \"hafizhd.jp@gmail.com\", \"abcwirayudaha56@gmail.com\", \"hervyguitar@gmai.com\", \"rickorajagukguk23@gmail.com\", \"ortuasiatestchild@gmail.com\", \"ortuasiatestparent@gmail.com\", \"roichildtest01@gmail.com\", \"roiparenttest01@gmail.com\", \"ruangortutesting02@gmail.com\", \"ruangortutesting01@gmail.com\", \"ruangortuchild2@gmail.com\", \"ruangortuparent@gmail.com\", \"ruangortutesting01@gmail.com\"];\nexport const absStart = new Date(\"2022-08-13\");","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/notificationCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getContentResponseList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userContentResponFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getContentViewList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userContentViewFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getProgramCategoryList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/programCategoryFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getProgramResponseList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userProgramContentResponFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAdminList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getCommunityList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getCommunityMemberList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandComunityMemberFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getSchoolList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/AlAzharSchoolFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getSchoolGroupList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/cobrandGroupMitraAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getPraytimeMessageList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/prayAlertMessageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getUserInstalledApps = (query) => axios({\n    method: 'post',\n    url: url + '/user/appDeviceFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getAlwaysOnApps = (query) => axios({\n    method: 'post',\n    url: url + '/user/appAlwaysOnBySekolahFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});"],"sourceRoot":""}