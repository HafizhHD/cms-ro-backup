{"version":3,"sources":["components/UI/Heading/Heading.js","components/API/filter.js","components/UI/Input/Input.js","components/Texteditor/TextEditor.js","containers/CoBrand/Content/AddContent/AddContent.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["Heading","headingName","routes","className","length","map","item","i","path","exact","to","name","getProgramList","query","axios","method","url","data","headers","getContentList","getUserList","getRedzoneList","getAppUsageList","getDeviceScheduleList","getAppLimitList","getModeAsuhList","getAppDetailList","getNotificationList","getAudienceList","getContentTopicList","Input","placeholder","type","onChange","onBlur","value","message","min","disabled","isError","id","max","memo","Component","connect","state","console","log","auth","isLoading","dispatch","onAddContent","cobrandEmail","programId","contentName","contentDescription","contentType","contentSource","contentThumbnail","contents","startDate","endDate","isActive","topics","audience","history","addContent","editorState","EditorState","createEmpty","useState","description","setDescription","onEditorStateChange","artikel","setArtikel","onEditorStateChangeArtikel","topic","setTopic","setAudience","isPageLoading","setPageLoading","valueRadio","setRadio","RichTextEditor","createEmptyValue","textDeskripsi","setTextDeskripsi","setTextValue","useHistory","JSON","parse","localStorage","getItem","email","useEffect","promiseTopic","promiseAudience","Promise","all","then","responseAll","topicRaw","audienceRaw","Data","e","push","topicName","label","audianceName","RKLoader","initialValues","Date","toISOString","split","targetAudience","validationSchema","validationContent","validateOnChange","onSubmit","values","window","scrollTo","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","currentTarget","isMulti","options","isOptionDisabled","classNamePrefix","toolbarClassName","wrapperClassName","editorClassName","draftToHtml","convertToRaw","getCurrentContent","file","files","onClick","for","defaultChecked","PhoneRegex","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","validationProgramEdit","validationContentEdit","programEdit","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","ProgramDescription","photo","ALERT_CLOSE","toBase64","result","programthumnail","response","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","retrieveList","deleting","audi","status","getEmbedUrl","hasil","targetAudiance","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/44.e02d5401.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getDeviceScheduleList = (query) => axios({\n    method: 'post',\n    url: url + '/user/deviceUsageScheduleFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppLimitList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageLimitFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getModeAsuhList = (query) => axios({\n    method: 'post',\n    url: url + '/user/childModeAsuhFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppDetailList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appIconFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getNotificationList = (query) => axios({\n    method: 'post',\n    url: url + '/user/broadcastFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAudienceList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/audianceTargetFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getContentTopicList = (query) => axios({\n    method: 'post',\n    url: url + '/cms/contentTopicFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n})\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","// import React, { Component } from \"react\";\n\n// import { Editor } from \"react-draft-wysiwyg\";\n// import { EditorState, convertToRaw } from \"draft-js\";\n\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// import draftToHtml from \"draftjs-to-html\";\n\n\n// export default class TextEditor extends Component {\n//     state = {\n//         editorState: EditorState.createEmpty(),\n//     };\n\n//     onEditorStateChange = (editorState) => {\n//         this.setState({\n//             editorState,\n//         });\n//     };\n\n//     render() {\n//         const { editorState } = this.state;\n//         // console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n\n//         return (\n//             <div>\n//                 <h1>Text Editor component</h1>\n//                 <Editor\n//                     editorState={editorState}\n//                     toolbarClassName=\"toolbarClassName\"\n//                     wrapperClassName=\"wrapperClassName\"\n//                     editorClassName=\"editorClassName\"\n//                     onEditorStateChange={this.onEditorStateChange}\n//                 />\n//                 {/* <textarea\n//                     disabled\n//                     value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n//                 ></textarea> */}\n//             </div>\n//         )\n//     }\n// }\n\nimport React, { Component } from 'react';\nimport { convertToRaw, EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\n// import '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\n\n\n\nexport default class TextEditor extends Component{\n    constructor(props) {\n      super(props);\n      this.state = {\n        editorState: EditorState.createEmpty(),\n        message:'Try the editor below!',\n        rawMessage:''\n      };\n      \n      this.onEditorStateChange = this.onEditorStateChange.bind(this);\n      this.handleEditorStateToMessage = this.handleEditorStateToMessage.bind(this);\n    }\n    \n    onEditorStateChange(editorState) {\n      this.setState({\n          editorState,\n          rawMessage: draftToHtml(convertToRaw(editorState.getCurrentContent()))\n      });\n    };\n\n    handleEditorStateToMessage() {\n        this.setState({\n            message: this.state.rawMessage\n        })\n    }\n\n    render() {\n      const { editorState } = this.state;\n      const wrapperStyle = {\n          border: '1px solid #969696',\n      }\n      const editorStyle = {\n          height:'10rem',\n          padding:'1rem'\n      }\n        return (\n          <React.Fragment>\n            {/* <Grid container>\n                <Grid item xs={3}></Grid>\n                <Grid item xs={12} style={{border:'1px solid #969696', borderRadius:'3px', height:'10rem', padding:'1rem'}}>\n                    <div dangerouslySetInnerHTML={{__html: this.state.message}}></div>\n                </Grid>\n                <Grid item xs={3}></Grid>\n            </Grid> */}\n            <div style={{marginTop:'5%'}}>\n                <Editor\n                    initialEditorState={editorState}\n                    wrapperClassName=\"wrapper-class\"\n                    wrapperStyle={wrapperStyle}\n                    editorStyle={editorStyle}\n                    // toolbarStyle={toolbarStyle}\n                    editorClassName=\"demo-editor\"                                                                               \n                    onEditorStateChange={this.onEditorStateChange}\n                    toolbar={{\n                        options: ['inline', 'blockType', 'fontSize', 'textAlign', \n                                  'history', 'colorPicker'],                                \n                        inline: {\n                          options: ['italic', 'bold'],\n                          bold: { className: 'demo-option-custom' },\n                          italic: { className: 'demo-option-custom' },\n                          underline: { className: 'demo-option-custom' },\n                          strikethrough: {className: 'demo-option-custom' },\n                          monospace: { className: 'demo-option-custom' },\n                          superscript: {className: 'demo-option-custom'},\n                          subscript: { className: 'demo-option-custom' }\n                        },\n                        blockType: {className: 'demo-option-custom-wide',\n                        dropdownClassName: 'demo-dropdown-custom'},\n                        fontSize: { className: 'demo-option-custom-medium' }\n                    }}\n                />\n            </div>\n            <div style={{marginTop:'2%'}}>\n                <button\n                    variant=\"outlined\"\n                    onClick={this.handleEditorStateToMessage}\n                >\n                    submit\n                </button>\n            </div>\n          </React.Fragment>\n        )\n     }\n  }\n\n","import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './AddContent.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { addContent, loadingStart } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationContent } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\nimport RichTextEditor from 'react-rte';\nimport { toBase64 } from '../../../../helpers/fileHelper/fileHelper'\nimport TextEditor from '../../../../components/Texteditor/TextEditor';\nimport { getContentTopicList, getAudienceList } from '../../../../components/API/filter';\n\n//texteditor\nimport { ContentState, Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, convertFromRaw, current } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { stateToHTML } from 'draft-js-export-html'\n\nimport Select from 'react-select';\n\nfunction AddContent({\n    onAddContent,\n    isLoading\n}) {\n    let editorState = EditorState.createEmpty()\n\n\n    const [description, setDescription] = useState(editorState)\n    const onEditorStateChange = (editorState) => {\n        setDescription(editorState)\n    }\n\n    const [artikel, setArtikel] = useState(editorState)\n    const onEditorStateChangeArtikel = (editorState) => {\n        setArtikel(editorState)\n    }\n\n    const [topic, setTopic] = useState([]);\n    const [audience, setAudience] = useState([]);\n\n\n\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [valueRadio, setRadio] = useState('');\n\n    const [textDeskripsi, setTextDeskripsi] = useState(RichTextEditor.createEmptyValue());\n    const [textValue, setTextValue] = useState(RichTextEditor.createEmptyValue());\n    const toolbarConfig = {\n        // Optionally specify the groups to display (displayed in the order listed).\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n        INLINE_STYLE_BUTTONS: [\n            { label: 'Bold', style: 'BOLD' },\n            { label: 'Italic', style: 'ITALIC' },\n            { label: 'Underline', style: 'UNDERLINE' },\n            { label: 'Strikethrough', style: 'STRIKETHROUGH' }\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n            { label: 'Normal', style: 'unstyled' },\n            { label: 'Heading Large', style: 'header-one' },\n            { label: 'Heading Medium', style: 'header-two' },\n            { label: 'Heading Small', style: 'header-three' }\n        ],\n        BLOCK_TYPE_BUTTONS: [\n            { label: 'Unordered List', style: 'unordered-list-item' },\n            { label: 'Ordered List', style: 'ordered-list-item' },\n            { label: 'Blockquote', style: 'blockquote' }\n        ]\n    };\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n\n    useEffect(() => {\n        let paramTopic = {};\n        let paramAudience = {};\n        const promiseTopic = getContentTopicList(paramTopic);\n        const promiseAudience = getAudienceList(paramAudience);\n\n        Promise.all([promiseTopic, promiseAudience]).then(responseAll => {\n            // console.log(responseAll[0]);\n            // console.log(responseAll[1]);\n            var topicRaw = [], audienceRaw = [];\n            responseAll[0].data.Data.map(e => {\n                topicRaw.push({value: e.topicName, label: e.topicName});\n            })\n            responseAll[1].data.Data.map(e => {\n                audienceRaw.push({value: e.audianceName, label: e.audianceName});\n            })\n            setTopic(topicRaw);\n            setAudience(audienceRaw);\n            setPageLoading(false);\n        })\n    }, []);\n\n    if (isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Content\" routes={[\n                { path: '/cms/content', name: 'Content' },\n                { path: '/cms/content/add', name: 'Create new content' }\n            ]} />\n            <Formik\n                initialValues={{\n                    programId: '-1',\n                    contentName: '',\n                    contentDescription: '',\n                    contentType: 'Artikel',\n                    contentSource: '',\n                    contentThumbnail: '',\n                    contents: '',\n                    startDate: new Date().toISOString().split('T')[0],\n                    endDate: new Date().toISOString().split('T')[0],\n                    isActive: true,\n                    topics: [],\n                    targetAudience: []\n                }}\n                validationSchema={validationContent}\n                validateOnChange={true}\n                onSubmit={values => {\n                    window.scrollTo(0, 0);\n                    onAddContent(cobrandEmail, values.programId, values.contentName, values.contentDescription,\n                        values.contentType, values.contentSource, values.contentThumbnail, values.contents,\n                        values.startDate, values.endDate, values.isActive, values.topics, values.targetAudience, history)\n                }}\n            >\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"AddContent\">\n                            <h1 className=\"AddContent_title\">Create New Content</h1>\n                            <div className=\"form-group\">\n                                <label>Content Type</label>\n                                <select\n                                    name=\"contentType\"\n                                    value={values.contentType}\n                                    onChange={(e) => {\n                                        setFieldValue(\"contentType\", e.currentTarget.value);\n                                        setFieldValue(\"contents\", '');\n                                    }}\n                                >\n                                    <option value=\"Artikel\">Artikel</option>\n                                    <option value=\"Image\">Image</option>\n                                    <option value=\"Video\">Video</option>\n                                    <option value=\"Pdf\">File Pdf</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Topic Category</label>\n                                {/* <select\n                                    name=\"topics\"\n                                    value={values.topics}\n                                    onChange={(e) => {\n                                        setFieldValue(\"topics\", [e.currentTarget.value]);\n                                    }}\n                                >\n                                    {topic.map(e => {\n                                        console.log(e);\n                                        return <option value={e.topicName}>{e.topicName}</option>\n                                    })}\n                                </select> */}\n                                <Select\n                                    isMulti\n                                    value={values.topics}\n                                    onChange={(e) => {\n                                        setFieldValue(\"topics\", e)\n                                    }}\n                                    name=\"topics\"\n                                    options={topic}\n                                    // only allow user to choose up to 3 options\n                                    isOptionDisabled={() => values.topics.length >= 3}\n                                    className=\"basic-multi-select\"\n                                    classNamePrefix=\"select\"\n                                />\n                                {touched.topics && <span className=\"message__error\">{errors.topics}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Target Audience</label>\n                                {/* <select\n                                    name=\"targetAudience\"\n                                    value={values.targetAudience}\n                                    onChange={(e) => {\n                                        setFieldValue(\"targetAudience\", [e.currentTarget.value]);\n                                    }}\n                                >\n                                    {audience.map(e => {\n                                        return <option value={e.audianceName}>{e.audianceName}</option>\n                                    })}\n                                </select> */}\n                                <Select\n                                    isMulti\n                                    value={values.targetAudience}\n                                    onChange={(e) => {\n                                        setFieldValue(\"targetAudience\", e)\n                                    }}\n                                    name=\"targetAudience\"\n                                    options={audience}\n                                    className=\"basic-multi-select\"\n                                    classNamePrefix=\"select\"\n                                />\n                                {touched.targetAudience && <span className=\"message__error\">{errors.targetAudience}</span>}\n                            </div>\n                            {/* <div className=\"form-group\"> */}\n                                {/* <label>Program Name</label> */}\n                                {/* <select\n                                    name=\"programId\"\n                                    value={values.programId}\n                                    onChange={handleChange}\n                                > */}\n                                    {/* <option value=\"-1\" disabled>Select Program</option> */}\n                                    {/* <option value=\"\">(Tanpa Program)</option> */}\n                                    {/* {\n                                        programList.map((program) => {\n                                            return (\n                                                <option value={program._id}>{program.programName}</option>\n                                            )\n                                        })\n                                    } */}\n                                {/* </select> */}\n                            {/* </div> */}\n                            \n                            <div className=\"form-group\">\n                                <label>Title</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentName\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.contentName && <span className=\"message__error\">{errors.contentName}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <Editor\n                                    editorState={description}\n                                    toolbarClassName=\"toolbarClassName\"\n                                    wrapperClassName=\"wrapperClassName\"\n                                    editorClassName=\"editorClassName\"\n                                    onEditorStateChange={onEditorStateChange}\n                                    // onEditorStateChange={updateTextDescription}\n                                    // value={description.values}\n                                    value={draftToHtml(convertToRaw(description.getCurrentContent()))}\n                                    // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                    name=\"contentDescription\"\n                                    onChange={(editorState) => {\n                                        setTextDeskripsi(editorState);\n                                        // setFieldValue(\"contentDescription\", description);\n                                        setFieldValue(\"contentDescription\", draftToHtml(convertToRaw(description.getCurrentContent())));\n                                        console.log(textDeskripsi);\n                                        console.log(values.contentDescription)\n                                        // console.log(dangerouslySetInnerHTML={{ __html: item.description}} )\n                                    }}\n\n                                />\n                                {touched.contentDescription && <span className=\"message__error\">{errors.contentDescription}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Source</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentSource\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentSource}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n\n                                />\n                                {touched.contentSource && <span className=\"message__error\">{errors.contentSource}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Photo</label>\n                                <InputComponent\n                                    type=\"file\"\n                                    className=\"form-group__input\"\n                                    name=\"contentThumbnail\"\n                                    onBlur={handleBlur}\n                                    onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contentThumbnail\", file);\n                                        }\n                                    }}\n                                />\n                                {touched.contentThumbnail && <span className=\"message__error\">{errors.contentThumbnail}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Contents</label>\n                                {values.contentType === \"Artikel\" ? (\n                                    <Editor\n                                        editorState={artikel}\n                                        toolbarClassName=\"toolbarClassName\"\n                                        wrapperClassName=\"wrapperClassName\"\n                                        editorClassName=\"editorClassName\"\n                                        onEditorStateChange={onEditorStateChangeArtikel}\n                                        // onEditorStateChange={updateTextDescription}\n                                        // value={description.values}\n                                        value={draftToHtml(convertToRaw(artikel.getCurrentContent()))}\n                                        // value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                                        name=\"contents\"\n                                        onChange={(editorState) => {\n                                            setTextValue(editorState);\n                                            // setFieldValue(\"contentDescription\", description);\n                                            setFieldValue(\"contents\", draftToHtml(convertToRaw(artikel.getCurrentContent())));\n                                            // console.log(textDeskripsi);\n                                            // console.log(values.contents)\n                                        }}\n\n                                    />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    <div>\n                                        <p>Pilih media yang ingin di upload :</p>\n                                        <form>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                onClick={() => { setRadio('internal') }}\n                                            />\n                                            <label for=\"internal\" >Media Internal Komputer</label>\n                                            <br></br>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                onClick={() => setRadio('url')}\n                                            />\n                                            <label for=\"url\" >Alamat URL</label>\n                                            <br></br>\n                                        </form>\n\n                                        {valueRadio === 'internal' ?\n                                            <InputComponent\n                                                type=\"file\"\n                                                className=\"form-group__input\"\n                                                name=\"contents\"\n                                                onBlur={handleBlur}\n                                                //   value={values.contents}\n                                                //   onChange={handleChange}\n                                                onChange={(e) => {\n                                                    let file = e.currentTarget.files[0];\n                                                    if (file) {\n                                                        console.log(\"File to upload: \", file);\n                                                        setFieldValue(\"contents\", file);\n                                                    }\n                                                }}\n                                            />\n                                            :\n                                            <InputComponent\n                                                type=\"text\"\n                                                name=\"contents\"\n                                                className=\"form-group__input form-group__input--fullwidth\"\n                                                placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                                value={values.contents}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                            />\n                                        }\n\n                                    </div>\n\n                                ) : null}\n                                {values.contentType === \"Video\" ?\n                                    // (\n                                    //     <div>\n                                    //         <p>Pilih media yang ingin di upload :</p>\n                                    //         <form>\n                                    //             <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                    //             onClick={() => {setRadio('internal')}}\n                                    //             />\n                                    //             <label for=\"internal\" >Media Internal Komputer</label>\n                                    //             <br></br>\n                                    //             <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                    //             onClick={() =>setRadio('url')}\n                                    //             />\n                                    //             <label for=\"url\" >Alamat URL</label>\n                                    //             <br></br>\n                                    //         </form>\n\n                                    //         {valueRadio === 'internal' ? \n                                    //         <InputComponent\n                                    //         type=\"file\"\n                                    //         className=\"form-group__input\"\n                                    //         name=\"contents\"\n                                    //         onBlur={handleBlur}\n                                    //         //   value={values.contents}\n                                    //         //   onChange={handleChange}\n                                    //         onChange={(e) => {\n                                    //             let file = e.currentTarget.files[0];\n                                    //             if (file) {\n                                    //                 console.log(\"File to upload: \", file);\n                                    //                 setFieldValue(\"contents\", file);\n                                    //             }\n                                    //         }}\n                                    //         />\n                                    //         : \n                                    //         <InputComponent\n                                    //         type=\"text\"\n                                    //         name=\"contents\"\n                                    //         className=\"form-group__input form-group__input--fullwidth\"\n                                    //         placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                    //         value={values.contents}\n                                    //         onChange={handleChange}\n                                    //         onBlur={handleBlur}\n                                    //         />\n                                    //         }\n                                    //     </div>\n\n                                    // ) \n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <div>\n                                        <p>Pilih media yang ingin di upload :</p>\n                                        <form>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'internal'}\n                                                onClick={() => { setRadio('internal') }}\n                                            />\n                                            <label for=\"internal\" >Media Internal - Maks 300kb</label>\n                                            <br></br>\n                                            <input type=\"radio\" id=\"html\" name=\"fav_language\" value={'url'}\n                                                onClick={() => setRadio('url')}\n                                            />\n                                            <label for=\"url\" >Alamat URL</label>\n                                            <br></br>\n                                        </form>\n\n                                        {valueRadio === 'internal' ?\n                                            <InputComponent\n                                                type=\"file\"\n                                                className=\"form-group__input\"\n                                                name=\"contents\"\n                                                onBlur={handleBlur}\n                                                //   value={values.contents}\n                                                //   onChange={handleChange}\n                                                onChange={(e) => {\n                                                    let file = e.currentTarget.files[0];\n                                                    if (file) {\n                                                        console.log(\"File to upload: \", file);\n                                                        setFieldValue(\"contents\", file);\n                                                    }\n                                                }}\n                                            />\n                                            :\n                                            <InputComponent\n                                                type=\"text\"\n                                                name=\"contents\"\n                                                className=\"form-group__input form-group__input--fullwidth\"\n                                                placeholder=\"Type Pdf URL... (Pdf file)\"\n                                                value={values.contents}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                            />\n                                        }\n                                    </div>\n\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            <div className=\"form-group-row\">\n                                <div className=\"form-group\">\n                                    <label>Start Date</label>\n                                    <InputComponent\n                                        type=\"date\"\n                                        className=\"form-group__input\"\n                                        name=\"startDate\"\n                                        value={values.startDate}\n                                        min={new Date().toISOString().split('T')[0]}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                                </div>\n                                {/* end date */}\n                                <div className=\"form-group\">\n                                    <label>End Date</label>\n                                    <InputComponent\n                                        type=\"date\"\n                                        className=\"form-group__input\"\n                                        name=\"endDate\"\n                                        value={values.endDate}\n                                        min={values.startDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    {touched.endDate && <span className=\"message__error\">{errors.endDate}</span>}\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-group_switch\">\n                                    <p className=\"form-group_switch_status\">Status:</p>\n                                    <p className=\"form-group_switch_inactive\">Inactive</p>\n                                    <label className=\"form-group_switch_switch\">\n                                        <input type=\"checkbox\" className=\"form-group_switch_switch_checkbox\"\n                                            name=\"isActive\"\n                                            defaultChecked={values.isActive}\n                                            onChange={() => {\n                                                values.isActive = !values.isActive;\n                                                console.log(values.isActive);\n                                            }}></input>\n                                        <span className=\"form-group_switch_switch_slider\"></span>\n                                    </label>\n                                    <p className=\"form-group_switch_active\">Active</p>\n                                </div>\n                            </div>\n                            <div>\n                                <button className=\"btn btn-submit\" type=\"submit\">\n                                    Post Content\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader /> : null}\n        </>\n    )\n\n}\n\n\n\n// 1- install pdfjs library | npm install pdfjs-dist@2.6.347\n// 2- install the core package | npm install @react-pdf-viewer/core@2.4.1   ok\n// 3- install pdf viewer default layout | npm install @react-pdf-viewer/default-layout  ok\n\n// its so loadingStart, i am very tired n feell sleepy, well will be ok rgight, \n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddContent: (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, endDate, isActive, topics, audience, history) =>\n            dispatch(addContent(cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, endDate, isActive, topics, audience, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContent)\n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    endDate: yup.date('Insert end date').required('Date is required'),\n    isActive: yup.boolean(),\n    topics: yup.array().min(1),\n    targetAudience: yup.array().min(1)\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, endDate, isActive, topics, targetAudience, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            let topic = [], audi = [];\n            topics.map(e => {\n                topic.push(e.value)\n            });\n            targetAudience.map(e => {\n                audi.push(e.value)\n            });\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate,\n                            endDate,\n                            topics: topic,\n                            targetAudiance: audi\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/cms/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate,\n                endDate,\n                topics: topic,\n                targetAudiance: audi\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}