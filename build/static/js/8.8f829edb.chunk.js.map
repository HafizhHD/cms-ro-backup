{"version":3,"sources":["containers/CoBrand/Content/EditContent/EditContent.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["connect","state","console","log","auth","isLoading","dispatch","onEditContent","_id","cobrandEmail","programId","contentName","contentDescription","contentType","contentSource","contentThumbnail","contents","startDate","history","editContent","useState","isPageLoading","setPageLoading","programList","setProgramList","content","setContent","contentStartDate","setContentStartDate","conFromImgVid","setConFromImgVid","RichTextEditor","createEmptyValue","textValue","setTextValue","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","useHistory","JSON","parse","localStorage","getItem","email","params1","whereKeyValues","useEffect","params","axios","method","url","data","headers","then","response","con","DOMParser","parseFromString","con1","getElementById","createValueFromString","outerHTML","getElementsByTagName","toString","src","includes","replace","date","split","programs","catch","error","headingName","routes","path","name","initialValues","validationSchema","validationContentEdit","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","className","value","onChange","e","currentTarget","disabled","map","program","programName","type","placeholder","onBlur","file","files","min","Date","toISOString","RKLoader","text","Heading","length","item","i","exact","to","Input","message","isError","id","max","memo","PhoneRegex","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programDescription","programThumbnail","validationProgramEdit","validationContent","isActive","programEdit","query","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","ProgramDescription","photo","ALERT_CLOSE","toBase64","result","programthumnail","push","editProgram","whereValues","newValues","deleteProgram","retrieveList","deleting","addContent","status","getEmbedUrl","hasil","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/8.8f829edb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditContent.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editContent } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationContentEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\nimport RichTextEditor from 'react-rte';\n\nfunction EditContent({\n    onEditContent,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [programList, setProgramList] = useState();\n    const [content, setContent] = useState();\n    const [contentStartDate, setContentStartDate] = useState();\n    const [conFromImgVid, setConFromImgVid] = useState('');\n\n    const [textValue, setTextValue] = useState(RichTextEditor.createEmptyValue());\n    const toolbarConfig = {\n        // Optionally specify the groups to display (displayed in the order listed).\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n        INLINE_STYLE_BUTTONS: [\n            { label: 'Bold', style: 'BOLD' },\n            { label: 'Italic', style: 'ITALIC' },\n            { label: 'Underline', style: 'UNDERLINE' },\n            { label: 'Strikethrough', style: 'STRIKETHROUGH' }\n        ],\n        BLOCK_TYPE_DROPDOWN: [\n            { label: 'Normal', style: 'unstyled' },\n            { label: 'Heading Large', style: 'header-one' },\n            { label: 'Heading Medium', style: 'header-two' },\n            { label: 'Heading Small', style: 'header-three' }\n        ],\n        BLOCK_TYPE_BUTTONS: [\n            { label: 'Unordered List', style: 'unordered-list-item' },\n            { label: 'Ordered List', style: 'ordered-list-item' },\n            { label: 'Blockquote', style: 'blockquote' }\n        ]\n    };\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('contentSelected');\n\n    const params1 = {\n        whereKeyValues: {\n            cobrandEmail: cobrandEmail\n        }\n    };\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if (_id) {\n            const params = {\n                whereKeyValues: {\n                    cobrandEmail: cobrandEmail,\n                    _id: _id\n                }\n            };\n\n            axios({\n                method: 'post',\n                url: 'https://rk.defghi.biz.id:8080/api/cobrand/contentFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then(response => {\n                    console.log(\"Response data: \", response.data);\n                    setContent(response.data.contents[0]);\n                    let con = new DOMParser().parseFromString(response.data.contents[0].contents, 'text/html');\n                    console.log(con);\n                    if (response.data.contents[0].contentType === 'Artikel') {\n                        let con1 = con.getElementById('contents');\n                        setTextValue(RichTextEditor.createValueFromString(con1.outerHTML, 'html'));\n                        setConFromImgVid(con1.outerHTML);\n                    }\n                    else if (response.data.contents[0].contentType === 'Image') {\n                        let con1 = con.getElementsByTagName('img')[0].toString();\n                        setConFromImgVid(con1.src);\n                    }\n                    else if (response.data.contents[0].contentType === 'Video') {\n                        let con1 = con.getElementsByTagName('iframe')[0];\n                        setConFromImgVid(con1.src);\n                    }\n                    else if (response.data.contents[0].contentType === 'Pdf') {\n                        let con1 = con.getElementsByTagName('iframe')[0];\n                        let src = con1.src;\n                        if (src.includes('&embedded=true')) src = src.replace('&embedded=true', '');\n                        if (src.includes('http://docs.google.com/gview?url=')) src = src.replace('http://docs.google.com/gview?url=', '');\n                        setConFromImgVid(src);\n                    }\n\n                    let date = response.data.contents[0].startDate.split('T')[0];\n                    console.log(date);\n                    setContentStartDate(date);\n                    axios({\n                        method: 'post',\n                        url: 'https://rk.defghi.biz.id:8080/api/cobrand/programFilter',\n                        data: params1,\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    })\n                        .then(response => {\n                            console.log(\"Program list: \", response.data);\n                            setProgramList(response.data.programs);\n                            setPageLoading(false);\n                        })\n                        .catch(error => {\n                            console.log(error);\n                            setPageLoading(false);\n                        });\n                })\n                .catch(error => {\n                    console.log(error);\n                    setPageLoading(false);\n                });\n        }\n    }, []);\n\n\n    if (isPageLoading) {\n        return <RKLoader />\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Content\" routes={[\n                { path: '/content', name: 'Content' },\n                { path: '/content/edit', name: 'Edit Selected content' }\n            ]} />\n            <Formik\n                initialValues={{\n                    programId: content.programId,\n                    contentName: content.contentName,\n                    contentDescription: content.contentDescription,\n                    contentType: content.contentType,\n                    contentSource: content.contentSource,\n                    contents: conFromImgVid,\n                    startDate: contentStartDate\n                }}\n                validationSchema={validationContentEdit}\n                validateOnChange={true}\n                onSubmit={values => {\n                    onEditContent(_id, cobrandEmail, values.programId, values.contentName, values.contentDescription, values.contentType, values.contentSource, '', values.contents, values.startDate, history)\n                }}\n            >\n\n                {({ handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"EditContent\">\n                            <h1>Edit Selected Content: {content.contentName}</h1>\n                            <div className=\"form-group\">\n                                <label>Content Type</label>\n                                <select\n                                    name=\"contentType\"\n                                    value={values.contentType}\n                                    onChange={(e) => {\n                                        setFieldValue(\"contentType\", e.currentTarget.value);\n                                        setFieldValue(\"contents\", '');\n                                    }}\n                                >\n                                    <option value=\"\" disabled>Select Content Type</option>\n                                    <option value=\"Artikel\">Artikel</option>\n                                    <option value=\"Image\">Image</option>\n                                    <option value=\"Video\">Video</option>\n                                    <option value=\"Pdf\">File Pdf</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Program Name</label>\n                                <select\n                                    name=\"programId\"\n                                    value={values.programId}\n                                    onChange={handleChange}\n                                >\n                                    <option value=\"-1\" disabled>Select Program</option>\n                                    <option value=\"\">(Tanpa Program)</option>\n                                    {\n                                        programList ? programList.map((program) => {\n                                            return (\n                                                <option value={program._id}>{program.programName}</option>\n\n                                            )\n                                        }) : null\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Title</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentName\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n\n                                />\n                                {touched.contentName && <span className=\"message__error\">{errors.contentName}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <InputComponent\n                                    type=\"textarea\"\n                                    name=\"contentDescription\"\n                                    placeholder=\"Type Something...\"\n                                    value={values.contentDescription}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.contentDescription && <span className=\"message__error\">{errors.contentDescription}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Source</label>\n                                <InputComponent\n                                    type=\"text\"\n                                    name=\"contentSource\"\n                                    className=\"form-group__input form-group__input--fullwidth\"\n                                    placeholder=\"Example\"\n                                    value={values.contentSource}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.contentSource && <span className=\"message__error\">{errors.contentSource}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Photo</label>\n                                <img className='photo' src={content.contentThumbnail}></img>\n                                <br></br>\n                                <InputComponent\n                                    type=\"file\"\n                                    className=\"form-group__input\"\n                                    name=\"contentThumbnail\"\n                                    onBlur={handleBlur}\n                                    // value={}\n                                    onChange={(e) => {\n                                        let file = e.currentTarget.files[0];\n                                        if (file) {\n                                            console.log(\"File to upload: \", file);\n                                            setFieldValue(\"contentThumbnail\", file);\n                                        }\n                                    }}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Contents</label>\n                                {values.contentType === \"Artikel\" ? (\n                                    /*<InputComponent\n                                        type=\"textarea\"\n                                        name=\"contents\"\n                                        placeholder=\"Type Something...\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                    />*/\n                                    <RichTextEditor\n                                        name=\"contents\"\n                                        placeholder=\"Type your contents here...\"\n                                        className=\"form-group_rte\"\n                                        value={textValue}\n                                        toolbarConfig={toolbarConfig}\n                                        onBlur={handleBlur}\n                                        onChange={(e) => {\n                                            setTextValue(e);\n                                            setFieldValue(\"contents\", e.toString(\"html\"));\n                                            console.log(values.contents);\n                                        }}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Image\" ? (\n                                    // <img src={conFromImgVid}></img>\n\n                                    <InputComponent\n                                        type=\"file\"\n                                        className=\"form-group__input\"\n                                        name=\"contents\"\n                                        onBlur={handleBlur}\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                    // onChange={(e) => {\n                                    //     let file = e.currentTarget.files[0];\n                                    //     if (file) {\n                                    //         console.log(\"File to upload: \", file);\n                                    //         setFieldValue(\"contents\", file);\n                                    //     }\n                                    // }}\n                                    />\n\n                                    // <InputComponent\n                                    //     type=\"text\"\n                                    //     name=\"contents\"\n                                    //     className=\"form-group__input form-group__input--fullwidth\" \n                                    //     placeholder=\"Type Image URL... (https://example.com/something/something.jpg)\"\n                                    //     value={values.contents}\n                                    //     onChange={handleChange}\n                                    //     onBlur={handleBlur}\n                                    // />\n                                ) : null}\n                                {values.contentType === \"Video\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Video URL... (Youtube/Vimeo/Dailymotion/etc)\"\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                ) : null}\n                                {values.contentType === \"Pdf\" ? (\n                                    <InputComponent\n                                        type=\"text\"\n                                        name=\"contents\"\n                                        className=\"form-group__input form-group__input--fullwidth\"\n                                        placeholder=\"Type Pdf URL... (just for pdf file)\"\n                                        // placeholder={values.contents}\n                                        value={values.contents}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                ) : null}\n                                {touched.contents && <span className=\"message__error\">{errors.contents}</span>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Set Schedule</label>\n                                <InputComponent\n                                    type=\"date\"\n                                    className=\"form-group__input\"\n                                    name=\"startDate\"\n                                    value={values.startDate}\n                                    min={new Date().toISOString().split('T')[0]}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                                {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                            </div>\n                            <div>\n                                <button className=\"btn btn-submit\" type=\"submit\">\n                                    Update Content\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Formik>\n            {isLoading ? <RKLoader /> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditContent: (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, history) =>\n            dispatch(editContent(_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, contentThumbnail, contents, startDate, history))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContent)\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        \n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if (contentType === 'Image') {\n                const gambar = toBase64(contents);\n                gambar.then((hasil) => {\n                contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                console.log(contents);\n                // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n    \n                let data = {\n                    cobrandEmail,\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contentThumbnail,\n                    contents,\n                    status,\n                    startDate\n                };\n    \n                console.log(data);\n                //Call API ....\n    \n                contentAdd(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/content');\n                        dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n                console.log(data);\n                \n            })\n            }\n            else if (contentType === 'Pdf') {\n                contents = \n                '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n        \n                console.log(contents)\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            if (contentType === 'Video') {\n                contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n            }\n            else if (contentType === 'Image') {\n                contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n            }  \n            else if (contentType === 'Pdf') {\n                contents = \n                '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n                console.log(contents)\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programId,\n                    contentName,\n                    contentDescription,\n                    contentType,\n                    contentSource,\n                    contents,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programId,\n                        contentName,\n                        contentDescription,\n                        contentType,\n                        contentSource,\n                        contents,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                contentEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/content');\n                        dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n                console.log(data);\n            });\n        }\n    }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}