{"version":3,"sources":["components/UI/Heading/Heading.js","components/UI/Input/Input.js","containers/CoBrand/Program/EditProgram/EditProgram.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["Heading","headingName","routes","className","length","map","item","i","path","exact","to","name","Input","placeholder","type","onChange","onBlur","value","message","min","disabled","isError","id","max","memo","connect","state","console","log","auth","isLoading","dispatch","onEditProgram","_id","cobrandEmail","programName","programDescription","programThumbnailEdit","startDate","history","editProgram","useState","isPageLoading","setPageLoading","program","setProgram","programStartDate","setProgramStartDate","useHistory","JSON","parse","localStorage","getItem","email","useEffect","params","whereKeyValues","axios","method","url","data","headers","then","response","programs","date","split","catch","error","initialValues","ProgramDescription","validationSchema","validationProgramEdit","validateOnChange","onSubmit","values","handleChange","handleSubmit","handleBlur","setFieldValue","errors","touched","Date","toISOString","PhoneRegex","validationFormLogin","yup","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programThumbnail","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","programEdit","query","contentAdd","contentEdit","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","photo","ALERT_CLOSE","toBase64","result","programthumnail","push","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","removeItem","setItem","resultData","token","stringify","user"],"mappings":"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","file":"static/js/49.24f09e2b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import React, {useEffect, useState} from 'react';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport './EditProgram.scss';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { editProgram } from '../../../../store/actions/dashboard';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport { connect } from 'react-redux';\nimport { validationProgramEdit } from '../../../../helpers/validation/validation';\nimport InputComponent from '../../../../components/UI/Input/Input';\nimport axios from 'axios';\n\nfunction EditProgram({\n    onEditProgram,\n    isLoading\n}) {\n\n    const [isPageLoading, setPageLoading] = useState(true);\n    const [program, setProgram] = useState();\n    const [programStartDate, setProgramStartDate] = useState();\n\n    const history = useHistory();\n    const cobrandEmail = JSON.parse(localStorage.getItem('userData')).email;\n    const _id = localStorage.getItem('programSelected');\n\n    useEffect(() => {\n        setPageLoading(true);\n        console.log(_id);\n        if(_id) {\n            const params = {\n                whereKeyValues: {\n                    cobrandEmail: cobrandEmail,\n                    _id: _id\n                }\n            };\n\n            axios({\n                method: 'post',\n                url: 'https://as01.prod.ruangortu.id:8080/api/cobrand/programFilter',\n                data: params,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => {\n                console.log(\"Response data: \", response.data);\n                setProgram(response.data.programs[0]);\n                console.log(\"This is \", program);\n                let date = response.data.programs[0].startDate.split('T')[0];\n                console.log(date);\n                setProgramStartDate(date);\n                setPageLoading(false);;\n            })\n            .catch(error => {\n                console.log(error);\n                setPageLoading(false);\n            });\n        }\n    }, []);\n\n    if(isPageLoading || isLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <>\n            <Heading headingName=\"Program\" routes={[\n                { path: '/cms/program', name: 'On Going Program' },\n                { path: '/cms/program/edit', name: 'Edit Selected Program' }\n            ]} />\n            <Formik\n                initialValues= {{\n                    programName: program.programName,\n                    programDescription: program.ProgramDescription,\n                    startDate: programStartDate\n                }}\n                validationSchema = {validationProgramEdit}\n                validateOnChange = {true}\n                onSubmit = { values => {\n                    onEditProgram( _id, cobrandEmail, values.programName, values.programDescription, '', values.startDate, history)\n                }}\n            >\n            {({handleChange, handleSubmit, handleBlur, setFieldValue, values, errors, touched}) => (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"EditProgram\">\n                        <h1>Edit Selected Program: {program.programName}</h1>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <InputComponent \n                                type=\"text\"\n                                name=\"programName\"\n                                className=\"form-group__input form-group__input--fullwidth\" \n                                placeholder=\"Example\"\n                                value={values.programName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programName && <span className=\"message__error\">{errors.programName}</span>}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <InputComponent\n                                type=\"textarea\"\n                                name=\"programDescription\"\n                                placeholder=\"Type Something...\"\n                                value={values.programDescription}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.programDescription && <span className=\"message__error\">{errors.programDescription}</span>}\n                        </div>\n                        {/*<div className=\"form-group\">\n                            <label>New Photo (Optional)</label>\n                            <InputComponent\n                                type=\"file\"\n                                className=\"form-group__input\"\n                                name=\"programThumbnailEdit\"\n                                onChange={(e) => {\n                                    let file = e.currentTarget.files[0];\n                                    if(file) {\n                                        console.log(\"File to upload: \", file);\n                                        setFieldValue(\"programThumbnailEdit\", file);\n                                    }\n                                }}\n                            />\n                            <span className=\"message__error\">{errors.programThumbnailEdit}</span>\n                        </div>*/}\n                        <div className=\"form-group\">\n                            <label>Set Schedule</label>\n                            <InputComponent\n                                type=\"date\"\n                                className=\"form-group__input\"\n                                name=\"startDate\"\n                                value={values.startDate}\n                                min={new Date().toISOString().split('T')[0]}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            {touched.startDate && <span className=\"message__error\">{errors.startDate}</span>}\n                        </div>\n                        <div>\n                            <button className=\"btn btn-submit\" type=\"submit\">\n                                Update Program\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            )}\n            </Formik>\n            {console.log(isLoading)}\n            {isLoading ? <RKLoader/> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state.auth.isLoading);\n    return {\n        isLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onEditProgram: ( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ) =>\n            dispatch(editProgram( _id, cobrandEmail, programName, programDescription, programThumbnailEdit, startDate, history ))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditProgram)","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/cms/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/cms/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        // const promise = toBase64(photo);\n        // promise.then((result) => {\n\n            // console.log(typeof result);\n            // const contentThumbnail = result;\n            const contentThumbnail = photo;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    \n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        // const contentThumbnail = result;\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else if (contentType === 'Artikel') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentEdit(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        // });\n    }\n    \n    \n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}