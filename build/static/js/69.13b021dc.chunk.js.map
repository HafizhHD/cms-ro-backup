{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/UI/Table/Table.js","components/UI/Warning/Warning.js","containers/CoBrand/Setting/SchoolGroup/columns.js","containers/CoBrand/Setting/SchoolGroup/SchoolGroup.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Table","DATA","COLUMNS","renderRowSubComponent","data","useMemo","useTable","columns","initialState","hiddenColumns","pageSize","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","expanded","setGlobalFilter","globalFilter","className","onClick","disabled","length","type","defaultValue","onChange","e","target","Number","map","placeholder","currentTarget","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","id","isExpanded","colSpan","Warning","setDeleting","setConfirmDeleting","setWarning","message","document","body","style","overflow","Columns","setSchoolGroupDeleting","Header","accessor","disableFilters","disableSortBy","disableGlobalFilter","Cell","to","title","values","groupMitraAsuhId","groupMitraAsuhName","replace","connect","isCurrentlyLoading","auth","isLoading","dispatch","onDeleteSchoolGroup","email","deletingSchoolGroup","retrieveList","deleteSchoolGroup","useState","setLoading","schoolGroupList","setSchoolGroupList","schoolGroupDeleting","showWarning","setShowWarning","confirmDelete","setConfirmDelete","userData","JSON","parse","localStorage","getItem","params","whereKeyValues","cobrandEmail","orderKeyValues","dateCreated","limit","MAX_SAFE_INTEGER","getSchoolGroupList","response","Data","catch","useEffect","removeItem","RKLoader"],"mappings":"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","file":"static/js/69.13b021dc.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n\n    const initialState = { hiddenColumns: ['_id'], pageSize: 20 };\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data,\n        initialState\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[20, 50, 100].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.column.id === 'rowNumber' ? i + 1 + (pageIndex * pageSize) : cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import React, {useState} from 'react';\nimport './Warning.scss';\nimport { FiAlertTriangle } from 'react-icons/fi';\n\nfunction Warning({setDeleting = null, setConfirmDeleting, setWarning, message}) {\n\n    return (\n        <div key={message} className=\"warning\">\n            <div className=\"warning-content\">\n                <div className=\"warning-content-header\">\n                    <h2>Konfirmasi Penghapusan</h2>\n                </div>\n                <div className=\"warning-content-body\">\n                    <FiAlertTriangle className=\"warning-content-body-icon\"/>\n                    <div className=\"warning-content-body-message\">\n                        <p>Apakah Anda yakin ingin menghapus {message} ini?</p>\n                        <div className=\"warning-content-body-message-button\">\n                            <div className=\"warning-content-body-message-button-delete\"><button onClick={() => {\n                                setConfirmDeleting(true);\n                                setWarning(false);\n                                document.body.style.overflow = 'unset';\n                            }}>Hapus</button></div>\n                            <div className=\"warning-content-body-message-button-cancel\"><button onClick={() => {\n                                if(setDeleting) setDeleting(null);\n                                setWarning(false);\n                                document.body.style.overflow = 'unset';\n                            }}>Jangan Hapus</button></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Warning;","import { FiEye, FiEdit2, FiTrash2 } from 'react-icons/fi';\nimport { NavLink } from 'react-router-dom';\n\nconst dateFormat = {\n    year: 'numeric', month: 'long', day: 'numeric'\n}\n\nconst Columns = (setSchoolGroupDeleting, setWarning) => {\n    return ([\n        {\n            Header: 'ID Kelompok',\n            accessor: 'groupMitraAsuhId'\n        },\n        {\n            Header: 'Nama Kelompok',\n            accessor: 'groupMitraAsuhName',\n            disableFilters: true\n        },\n        {\n            Header: 'Anggota Sekolah',\n            accessor: 'memberSekolah',\n            disableFilters: true\n        },\n        {\n            Header: 'Action',\n            disableSortBy: true,\n            disableGlobalFilter: true,\n            Cell: ({cell}) => (\n                <>\n                    {/* <NavLink to=\"/tools/setting/komunitas/edit\"\n                        className=\"nav_btn\"\n                        title=\"Edit Komunitas\"\n                        onClick={() => {\n                            localStorage.setItem('communitySelected', cell.row.values.cobrandComunityId)\n                        }}>\n                        <button\n                            className=\"btn_action\"\n                        >\n                            <div>\n                                <FiEdit2 className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink> */}\n                    <NavLink to=\"/tools/setting/school-group\"\n                        className=\"nav_btn\"\n                        title=\"Delete Komunitas\"\n                        onClick={() => {\n                            setSchoolGroupDeleting([cell.row.values.groupMitraAsuhId, cell.row.values.groupMitraAsuhName]);\n                            setWarning(true);\n                            document.body.style.overflow = 'hidden';\n                        }}\n                        replace>\n                        <button\n                            className=\"btn_action\"\n                        >\n                            <div>\n                                <FiTrash2 className=\"btn_action-icon\" />\n                            </div>\n                        </button>\n                    </NavLink>\n                </>\n            )\n        }\n    ]);\n}\n\nexport default Columns;","import  { useState, useEffect } from 'react';\nimport './SchoolGroup.scss'; //ini\nimport TableProgram from '../../../../components/UI/Table/Table';\nimport columns from './columns';\nimport { deleteSchoolGroup } from '../../../../store/actions/dashboard';\nimport { NavLink } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\nimport axios from 'axios';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader';\nimport {connect} from 'react-redux';\nimport { getSchoolGroupList } from '../../../../components/API/filter';\nimport Warning from '../../../../components/UI/Warning/Warning'\n\n// import Modal from '../../../components/UI/Modal/Modal';\n\nfunction SchoolGroup({\n    isCurrentlyLoading,\n    onDeleteSchoolGroup\n}) {\n    const [showModal, setShowModal] = useState(false);\n\n    const [isLoading, setLoading] = useState(true);\n    const [schoolGroupList, setSchoolGroupList] = useState([]);\n    const [schoolGroupDeleting, setSchoolGroupDeleting] = useState(null);\n    const [showWarning, setShowWarning] = useState(false);\n    const [confirmDelete, setConfirmDelete] = useState(false);\n\n    /*\n    const submitModal = () => {\n        alert('ok')\n    }\n    */\n    \n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const params = {\n        whereKeyValues: {\n            cobrandEmail: userData.cobrandEmail\n        },\n        orderKeyValues: {\n            dateCreated: -1\n        },\n        limit: Number.MAX_SAFE_INTEGER\n    };\n\n    \n    function retrieveList() {\n        getSchoolGroupList(params)\n        .then(response => {\n            setSchoolGroupList(response.data.Data);\n            // console.log(response.data);\n            setLoading(false);\n        })\n        .catch(error => {\n            // console.log(error);\n            setLoading(false);\n        });\n    }\n    \n    useEffect(() => {\n        setLoading(true);\n        if(localStorage.getItem('schoolGroupDeleting')) {\n            setSchoolGroupDeleting(JSON.parse(localStorage.getItem('schoolGroupDeleting')));\n            setConfirmDelete(true);\n            localStorage.removeItem('schoolGroupDeleting');\n        }\n        retrieveList();\n    }, []);\n\n    useEffect(() => {\n        if(schoolGroupDeleting && confirmDelete) {\n            setLoading(true);\n            onDeleteSchoolGroup(userData.cobrandEmail, schoolGroupDeleting, retrieveList);\n            setConfirmDelete(false);\n            setSchoolGroupDeleting(null);\n        }\n    }, [schoolGroupDeleting, confirmDelete]);\n\n    if(isLoading || isCurrentlyLoading) {\n        return <RKLoader/>\n    }\n\n    return (\n        <div className=\"SchoolGroup\">            \n            {showWarning ? <Warning setDeleting={setSchoolGroupDeleting} setConfirmDeleting={setConfirmDelete} setWarning={setShowWarning} message={\"Kelompok\"}/> : null}\n            <h1>KELOMPOK MITRA ASUH</h1>\n            {/* <NavLink to=\"/cms/program/revisilist\" id=\"add_program\">\n                <FiPlus className=\"IconAdd\" />\n               <span>revisilist</span>  \n            </NavLink> */}\n            <NavLink to=\"/tools/setting/school-group/add\" id=\"add_schoolgroup\">\n                <FiPlus className=\"IconAdd\" />\n               <span>Tambah Kelompok Mitra Asuh Baru</span>  \n            </NavLink>\n            <div className=\"SchoolGroup__table\">\n                <TableProgram \n                    COLUMNS={columns(setSchoolGroupDeleting, setShowWarning)} \n                    DATA={schoolGroupList}  \n                />\n            </div>\n\n            {/* <button \n                onClick={() => setShowModal(true)}>\n                Show Modal\n            </button> */}\n            \n            {/* <Modal \n                isShow={showModal}\n                onClose={() => setShowModal(false)} \n                onSubmit={submitModal}\n                title=\"Modal Title\"\n            >\n                <p>Hello Worlds</p>\n            </Modal> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isCurrentlyLoading: state.auth.isLoading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteSchoolGroup: (email, deletingSchoolGroup, retrieveList) => dispatch(deleteSchoolGroup(email, deletingSchoolGroup, retrieveList))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SchoolGroup)\n"],"sourceRoot":""}