{"version":3,"sources":["components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js","components/UI/Input/Input.js","helpers/validation/validation.js","components/API/dashboard.js","store/actions/dashboard.js"],"names":["RKLoader","text","className","Heading","headingName","routes","length","map","item","i","path","exact","to","name","Input","placeholder","type","onChange","onBlur","value","message","min","disabled","isError","id","max","memo","PhoneRegex","validationFormLogin","yup","email","required","password","validationFormRegister","accountName","cobrandName","thumbnail","test","img","includes","size","phoneNumber","matches","address","confirmPassword","when","schema","validationFormEdit","validationProgram","programName","programDescription","programThumbnail","startDate","validationProgramEdit","validationContent","contentName","contentDescription","contents","contentSource","contentThumbnail","isActive","validationContentEdit","programEdit","query","axios","method","url","data","headers","contentAdd","loadingStart","AUTH_START","loadingStop","AUTH_FAILED","alertError","ALERT_ERROR","idMessage","alertSuccess","ALERT_SUCCESS","addProgram","cobrandEmail","ProgramDescription","photo","history","dispatch","ALERT_CLOSE","toBase64","then","result","console","log","programthumnail","response","push","catch","error","editProgram","_id","whereValues","newValues","deleteProgram","programId","retrieveList","deleting","addContent","contentType","status","getEmbedUrl","hasil","editContent","deleteContent","contentId","editProfile","oldEmail","oldPassword","Object","assign","cobrandEdit","cobrandLogin","response2","loginData","localStorage","removeItem","setItem","resultData","token","JSON","stringify","user"],"mappings":"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","file":"static/js/2.f4001a3f.chunk.js","sourcesContent":["import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n","import React, { memo } from 'react';\nimport './Input.scss';\n\nfunction Input({\n    placeholder,\n    type,\n    onChange,\n    onBlur,\n    value,\n    className,\n    message,\n    name,\n    min,\n    disabled,\n    isError\n}) {\n    if(type === \"textarea\") {\n        return (\n        <>\n            <textarea\n                name={name}\n                id={name}\n                className={className}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n        )\n    }\n    else if(type === 'date') {\n        return (\n            <>\n                <input\n                    name={name}\n                    className={className} \n                    type={type}\n                    placeholder={placeholder}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    min={min}\n                    max={\"9999-12-31\"}\n                    disabled={disabled}\n                />\n                {isError && (\n                    <div className=\"message\">\n                        <span className=\"message__error\">{message}</span>\n                    </div>\n                )}\n            </>\n        )\n    }\n    else return (\n        <>\n            <input\n                name={name}\n                className={className} \n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                disabled={disabled}\n            />\n            {isError && (\n                <div className=\"message\">\n                    <span className=\"message__error\">{message}</span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default memo(Input) \n","import * as yup from 'yup';\n\nconst PhoneRegex = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nexport const validationFormLogin = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    password: yup.string('Enter your password').required('Password is required')\n})\n\nexport const validationFormRegister = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    accountName: yup.string('Enter your name').required('Name is required'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').required('Password is required').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password').required('Password is required')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => password && confirmPassword === password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationFormEdit = yup.object({\n    email: yup.string('Enter your email').required('Email is required').email('Email not valid'),\n    cobrandName: yup.string('Enter your brand name').required('Brand name is required'),\n    thumbnail: yup.mixed('Insert your image, 2 MB max')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                (img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)) || (!img)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n        //buat nambahin misal upload background. apakah akan masuk kesini?\n        \n    phoneNumber: yup.string('Enter your phone number').required('Phone number is required').matches(PhoneRegex, 'Invalid phone number format'),\n    address: yup.string('Enter your address').required('Address is required'),\n    password: yup.string('Enter your password').min(8, 'Password should be 8 characters or more'),\n    confirmPassword: yup.string('Confirm your password')\n        .when('password', (password, schema) => {\n            return schema.test({\n                test: confirmPassword => (password && confirmPassword === password) || !password,\n                message: \"Password doesn't match\"\n            })\n        })\n})\n\nexport const validationProgram = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    programThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationProgramEdit = yup.object({\n    programName: yup.string('Enter your program title').required('Program title is required'),\n    programDescription: yup.string('Enter the program description').required('Program description is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})\n\nexport const validationContent = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    contentThumbnail: yup.mixed('Insert your image, 2 MB max').required('Image is required')\n        .test(\n            'imageType', \"Incorrect file extension, must be .jpg, .jpeg, or .png\",\n            (img) =>\n                img && [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(img.type)\n        )\n        .test(\n            'imageSize', \"Image file size too large, max image file size is 2 MB\",\n            (img) => {\n                if(img) {\n                    return img.size <= 2097152;\n                }\n                else {\n                    return true;\n                }\n            }\n        ),\n    startDate: yup.date('Insert start date').required('Date is required'),\n    isActive: yup.boolean()\n})\n\nexport const validationContentEdit = yup.object({\n    contentName: yup.string('Enter your content title').required('Content title is required'),\n    contentDescription: yup.string('Enter the content description').required('Content description is required'),\n    contents: yup.string('Enter the content description').required('Content description is required'),\n    contentSource: yup.string('Enter the content source').required('Content source is required'),\n    startDate: yup.date('Insert start date').required('Date is required')\n})","import axios from \"axios\";\nimport url from \"./urlApi\"\n\nexport const programAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const programEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const programDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentAdd = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentAdd',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentEdit = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentUpdate',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const contentDelete = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentRemove',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});","import {\n    AUTH_SUCCESS,\n    AUTH_START,\n    AUTH_FAILED,\n    AUTH_LOGOUT,\n    ALERT_ERROR,\n    ALERT_SUCCESS,\n    ALERT_CLOSE\n} from './actionTypes';\nimport axios from 'axios';\nimport { toBase64, getEmbedUrl } from '../../helpers/fileHelper/fileHelper';\nimport { contentAdd, contentDelete, contentEdit, programAdd, programDelete, programEdit } from '../../components/API/dashboard';\nimport { cobrandEdit, cobrandLogin } from '../../components/API/auth';\n\n///pdf\n// import { Viewer } from '@react-pdf-viewer/core' //library, plugin\n// import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout' //styles\n// import '@react-pdf-viewer/default-layout/lib/styles/index.css'\n// import '@react-pdf-viewer/core/lib/styles/index.css'\n// import { Worker } from '@react-pdf-viewer/core'\n// import React, { useState } from 'react';\n// import InputComponent from '../../../src/components/UI/Input/Input';\n\nexport const loadingStart = () => ({ type: AUTH_START });\nexport const loadingStop = () => ({ type: AUTH_FAILED });\nexport const authSuccess = () => ({ type: AUTH_SUCCESS });\n\nexport const alertError = (message, id) => ({\n    type: ALERT_ERROR,\n    message: message,\n    idMessage: id\n});\n\nexport const alertSuccess = (message, id) => ({\n    type: ALERT_SUCCESS,\n    message: message,\n    idMessage: id\n})\n\nexport const addProgram = (cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n            console.log(typeof result);\n            const programthumnail = result;\n\n            let data = {\n                cobrandEmail,\n                programName,\n                ProgramDescription,\n                programthumnail,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n\n}\n\nexport const editProgram = (_id, cobrandEmail, programName, ProgramDescription, photo, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        console.log('Photo is empty:', photo === '');\n        if (photo === '') {\n            let data = {\n                whereValues: {\n                    cobrandEmail,\n                    _id\n                },\n                newValues: {\n                    programName,\n                    ProgramDescription,\n                    startDate\n                }\n            };\n\n            console.log(data);\n            //Call API ....\n\n            programEdit(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/program');\n                    dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n\n        else {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                console.log(typeof result);\n                const programthumnail = result;\n\n                let data = {\n                    whereValues: {\n                        cobrandEmail,\n                        _id\n                    },\n                    newValues: {\n                        programName,\n                        ProgramDescription,\n                        programthumnail,\n                        startDate\n                    }\n                };\n\n                console.log(data);\n                //Call API ....\n\n                programEdit(data)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        history.push('/program');\n                        dispatch(alertSuccess('Program \"' + programName + '\" berhasil diubah.'));\n                        dispatch(loadingStop());\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Program \"' + programName + '\" gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n    }\n\n}\n\nexport const deleteProgram = (cobrandEmail, programId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: programId[0]\n            }\n        }\n        programDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Program \"' + programId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Program \"' + programId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const addContent = (cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, isActive, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            const contentThumbnail = result;\n            let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            contentThumbnail,\n                            contents,\n                            status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                contentThumbnail,\n                contents,\n                status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n}\n\n//edit content di sesuaikan dg ini\nexport const editContent = (_id, cobrandEmail, programId, contentName, contentDescription, contentType, contentSource, photo, contents, startDate, history) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n\n        // const [numPages, setNumPages] = useState(null);\n        // const [pageNumber, setPageNumber] = useState(1);\n\n\n        const promise = toBase64(photo);\n        promise.then((result) => {\n\n            console.log(typeof result);\n            // const contentThumbnail = result;\n            // let status = isActive ? 'active' : 'inactive';\n\n            if (contentType === 'Video') {\n                // const video = toBase64(contents);\n                if (typeof contents === 'string') {\n                    contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\"\n                } else {\n                    const video = toBase64(contents);\n                    video.then((hasil) => {\n                        contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><video autoplay controls src=\\\"\" + getEmbedUrl(hasil) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></video></div>\"\n                        // contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\" \n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n\n            }\n            else if (contentType === 'Image') {\n                if (typeof contents === 'string') {\n                    contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n                } else {\n                    const gambar = toBase64(contents);\n                    gambar.then((hasil) => {\n                        contents = \"<img src=\\\"\" + hasil + \"\\\" style=\\\"width:100%;\\\"/>\";\n                        console.log(contents);\n                        // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n\n                    })\n                }\n            }\n            else if (contentType === 'Pdf') {\n                if (typeof contents === 'string') {\n                    contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                } else {\n                    const pdf = toBase64(contents);\n                    pdf.then((hasil) => {\n                        contents = '<div style=\"width:100%;height:100vh;\"><iframe src=\"' + hasil + '\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>'\n                        let data = {\n                            cobrandEmail,\n                            programId,\n                            contentName,\n                            contentDescription,\n                            contentType,\n                            contentSource,\n                            // contentThumbnail,\n                            contents,\n                            // status,\n                            startDate\n                        };\n\n                        console.log(data);\n                        //Call API ....\n\n                        contentAdd(data)\n                            .then(response => {\n                                console.log('Success:', response.data);\n                                history.push('/content');\n                                dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                        console.log(data);\n                    })\n                }\n            }\n            else {\n                contents = '<!DOCTYPE html>'\n                    + '<html lang=\"en\">'\n                    + '<head>'\n                    + '<meta charset=\"utf-8\">'\n                    + '<style>'\n                    + '#contents {'\n                    + 'overflow-y: scroll;'\n                    + 'text-align: justify;'\n                    + 'white-space: pre-line;'\n                    + 'font-family: Arial, Helvetica, sans-serif;'\n                    + 'padding: 1%;'\n                    + '}'\n                    + '#contents li {'\n                    + 'margin-left: 5%;'\n                    + '}'\n                    + '</style>'\n                    + '</head>'\n                    + '<body>'\n                    + '<div id=\"contents\">'\n                    + contents\n                    + '</div>'\n                    + '</body>'\n                    + '</html>';\n            }\n\n            console.log(contents);\n            // <div style=\"position:relative;padding-bottom:56.25%;\"><iframe src=\"https://www.youtube.com/embed/jVKzomlvDgE\" style=\"width:100%;height:100%;position:absolute;left:0px;top:0px;\" frameborder=\"0\" width=\"100%\" height=\"100%\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>\n\n            let data = {\n                cobrandEmail,\n                programId,\n                contentName,\n                contentDescription,\n                contentType,\n                contentSource,\n                // contentThumbnail,\n                contents,\n                // status,\n                startDate\n            };\n\n            console.log(data);\n            //Call API ....\n\n            contentAdd(data)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    history.push('/content');\n                    dispatch(alertSuccess('Content \"' + contentName + '\" berhasil ditambahkan.'));\n                    dispatch(loadingStop());\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Content \"' + contentName + '\" gagal ditambahkan. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n            console.log(data);\n        });\n    }\n    \n    \n    // return dispatch => {\n    //     dispatch(loadingStart());\n    //     dispatch({\n    //         type: ALERT_CLOSE\n    //     });\n\n    //     console.log('Photo is empty:', photo === '');\n    //     if (photo === '') {\n    //         if (contentType === 'Video') {\n    //             contents = \"<div style=\\\"position:relative;padding-bottom:56.25%;\\\"><iframe src=\\\"\" + getEmbedUrl(contents) + \"\\\" style=\\\"width:100%;height:100%;position:absolute;left:0px;top:0px;\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe></div>\";\n    //         }\n    //         else if (contentType === 'Image') {\n    //             contents = \"<img src=\\\"\" + contents + \"\\\" style=\\\"width:100%;\\\"/>\";\n    //         }\n    //         else if (contentType === 'Pdf') {\n    //             contents =\n    //                 '<div style=\"width:100%;height:100vh\"><iframe src=\"http://docs.google.com/gview?url=' + contents + (contents.includes('&embedded=true') ? '' : '&embedded=true') + ' \" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe></div>'\n\n    //             console.log(contents)\n    //         }\n    //         else {\n    //             contents = '<!DOCTYPE html>'\n    //                 + '<html lang=\"en\">'\n    //                 + '<head>'\n    //                 + '<meta charset=\"utf-8\">'\n    //                 + '<style>'\n    //                 + '#contents {'\n    //                 + 'overflow-y: scroll;'\n    //                 + 'text-align: justify;'\n    //                 + 'white-space: pre-line;'\n    //                 + 'font-family: Arial, Helvetica, sans-serif;'\n    //                 + 'padding: 1%;'\n    //                 + '}'\n    //                 + '#contents li {'\n    //                 + 'margin-left: 5%;'\n    //                 + '}'\n    //                 + '</style>'\n    //                 + '</head>'\n    //                 + '<body>'\n    //                 + '<div id=\"contents\">'\n    //                 + contents\n    //                 + '</div>'\n    //                 + '</body>'\n    //                 + '</html>';\n    //         }\n\n    //         console.log(contents);\n    //         let data = {\n    //             whereValues: {\n    //                 cobrandEmail,\n    //                 _id\n    //             },\n    //             newValues: {\n    //                 programId,\n    //                 contentName,\n    //                 contentDescription,\n    //                 contentType,\n    //                 contentSource,\n    //                 contents,\n    //                 startDate\n    //             }\n    //         };\n\n    //         console.log(data);\n    //         //Call API ....\n\n    //         contentEdit(data)\n    //             .then(response => {\n    //                 console.log('Success:', response.data);\n    //                 history.push('/content');\n    //                 dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                 dispatch(loadingStop());\n    //             })\n    //             .catch((error) => {\n    //                 console.error('Error:', error);\n    //                 dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                 dispatch(loadingStop());\n    //             });\n    //         console.log(data);\n    //     }\n\n    //     else {\n    //         const promise = toBase64(photo);\n    //         promise.then((result) => {\n    //             console.log(typeof result);\n    //             const programthumnail = result;\n\n    //             let data = {\n    //                 whereValues: {\n    //                     cobrandEmail,\n    //                     _id\n    //                 },\n    //                 newValues: {\n    //                     programId,\n    //                     contentName,\n    //                     contentDescription,\n    //                     contentType,\n    //                     contentSource,\n    //                     contents,\n    //                     startDate\n    //                 }\n    //             };\n\n    //             console.log(data);\n    //             //Call API ....\n\n    //             contentEdit(data)\n    //                 .then(response => {\n    //                     console.log('Success:', response.data);\n    //                     history.push('/content');\n    //                     dispatch(alertSuccess('Content \"' + contentName + '\" berhasil diubah.'));\n    //                     dispatch(loadingStop());\n    //                 })\n    //                 .catch((error) => {\n    //                     console.error('Error:', error);\n    //                     dispatch(alertError('Content \"' + contentName + '\" gagal diubah. Coba beberapa saat lagi.'));\n    //                     dispatch(loadingStop());\n    //                 });\n    //             console.log(data);\n    //         });\n    //     }\n    // }\n\n}\n\nexport const deleteContent = (cobrandEmail, contentId, retrieveList) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n        const deleting = {\n            whereValues: {\n                cobrandEmail: cobrandEmail,\n                _id: contentId[0]\n            }\n        }\n        contentDelete(deleting)\n            .then(response => {\n                console.log(response.data);\n                dispatch(alertSuccess('Content \"' + contentId[1] + '\" berhasil dihapus.'));\n                dispatch(loadingStop());\n                retrieveList();\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(alertError('Content \"' + contentId[1] + '\" gagal dihapus. Coba beberapa saat lagi.'));\n                dispatch(loadingStop());\n                retrieveList();\n            });\n    }\n}\n\nexport const editProfile = (oldEmail, oldPassword, cobrandName, photo, phoneNumber, address, password) => {\n    return dispatch => {\n        dispatch(loadingStart());\n        dispatch({\n            type: ALERT_CLOSE\n        });\n\n        let whereValues = { email: oldEmail, password: oldPassword }, newValues = {};\n\n        if (cobrandName) newValues = Object.assign(newValues, { cobrandName: cobrandName });\n        if (phoneNumber) newValues = Object.assign(newValues, { phoneNumber: phoneNumber });\n        if (address) newValues = Object.assign(newValues, { address: address });\n        if (password) newValues = Object.assign(newValues, { password: password });\n\n        if (photo) {\n            const promise = toBase64(photo);\n            promise.then((result) => {\n                newValues = Object.assign(newValues, { thumbnail: result });\n                console.log('whereValues: ', whereValues);\n                console.log('newValues: ', newValues);\n                cobrandEdit(whereValues, newValues)\n                    .then(response => {\n                        console.log('Success:', response.data);\n                        if (password) {\n                            console.log('YOI BRUH');\n                            whereValues.password = password;\n                        }\n                        cobrandLogin(whereValues)\n                            .then(response2 => {\n                                console.log('Success 2: ', response2.data);\n                                let loginData = response2.data;\n                                localStorage.removeItem('accessToken');\n                                localStorage.removeItem('userData');\n                                localStorage.setItem('accessToken', loginData.resultData.token);\n                                localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                                dispatch(alertSuccess('Profil berhasil diubah.'));\n                                dispatch(loadingStop());\n                            })\n                            .catch((error) => {\n                                console.error('Error:', error);\n                                dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                                dispatch(loadingStop());\n                            });\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                        dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                        dispatch(loadingStop());\n                    });\n            });\n        }\n        else {\n            console.log('whereValues: ', whereValues);\n            console.log('newValues: ', newValues);\n            cobrandEdit(whereValues, newValues)\n                .then(response => {\n                    console.log('Success:', response.data);\n                    if (password) {\n                        console.log('YOI BRUH');\n                        whereValues.password = password;\n                    }\n                    cobrandLogin(whereValues)\n                        .then(response2 => {\n                            console.log('Success 2: ', response2.data);\n                            let loginData = response2.data;\n                            localStorage.setItem('accessToken', loginData.resultData.token);\n                            localStorage.setItem('userData', JSON.stringify(loginData.resultData.user));\n                            dispatch(alertSuccess('Profil berhasil diubah.'));\n                            dispatch(loadingStop());\n                        })\n                        .catch((error) => {\n                            console.error('Error:', error);\n                            dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                            dispatch(loadingStop());\n                        });\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    dispatch(alertError('Profil gagal diubah. Coba beberapa saat lagi.'));\n                    dispatch(loadingStop());\n                });\n        }\n    }\n\n}"],"sourceRoot":""}