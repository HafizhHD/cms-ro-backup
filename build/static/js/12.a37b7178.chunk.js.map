{"version":3,"sources":["components/UI/Table/Table.js","components/API/filter.js","containers/CoBrand/Report/ContentReport/columns.js","containers/CoBrand/Report/ContentReport/ContentReport.js","components/UI/RKLoaderInner/RKLoader.js","components/UI/Heading/Heading.js"],"names":["Table","DATA","COLUMNS","renderRowSubComponent","data","useMemo","useTable","columns","useGlobalFilter","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","rows","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","pageSize","expanded","setGlobalFilter","globalFilter","className","onClick","disabled","length","type","defaultValue","onChange","e","target","value","Number","map","placeholder","currentTarget","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","getProgramList","query","axios","method","url","getContentList","getUserList","getRedzoneList","Columns","name","options","filter","customBodyRender","meta","rowIndex","setCellProps","style","minWidth","maxWidth","setCellHeaderProps","label","sort","ContentReport","useState","isLoading","setLoading","contentData","setContentData","userData","JSON","parse","localStorage","getItem","useEffect","params","whereKeyValues","cobrandEmail","email","orderKeyValues","contentName","includeContentData","limit","MAX_SAFE_INTEGER","console","log","then","response","contents","catch","error","RKLoader","Heading","headingName","routes","path","filterType","selectableRows","responsive","text","item","exact","to"],"mappings":"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","file":"static/js/12.a37b7178.chunk.js","sourcesContent":["import React, { useMemo, useEffect, Fragment } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination, useGlobalFilter } from 'react-table';\nimport { BiCaretDown, BiCaretUp } from 'react-icons/bi';\nimport './Table.scss';\n\nfunction Table({ DATA, COLUMNS, renderRowSubComponent }) {\n\n    const data = useMemo( () => DATA , [DATA])\n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        rows,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        visibleColumns,\n        state: {pageIndex, pageSize, expanded},\n        state,\n        setGlobalFilter\n    } = useTable({\n        columns: COLUMNS,\n        data: data\n    }, useGlobalFilter\n    , useSortBy\n    , useExpanded\n    , usePagination)\n\n    const { globalFilter } = state;\n\n    return (\n        <>\n        <div className=\"utils\">\n            <div className=\"pagination\">\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                {'<'}\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                {'>'}\n                </button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                {'>>'}\n                </button>\n                <span>\n                Page {' '}\n                <strong>\n                    {pageIndex + 1} of {pageOptions.length}\n                </strong>\n                </span>\n                <span>\n                | Go to page:\n                    <input\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                    />\n                </span>\n                <select\n                value={pageSize}\n                onChange={e => {\n                    setPageSize(Number(e.target.value))\n                }}\n                >\n                {[10, 15, 20].map(pageSize => (\n                    <option key={pageSize} value={pageSize}>\n                        Show {pageSize}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <div className=\"table_props\">\n                <span>Total: {rows.length} Data</span>\n                <input\n                    type=\"text\"\n                    className=\"table_props_input\"\n                    placeholder=\"Search\"\n                    value={ globalFilter || '' }\n                    onChange={(e) => {\n                        setGlobalFilter(e.currentTarget.value);\n                    }}\n                />\n            </div>\n        </div>\n        <div className=\"table_container\">\n       <table {...getTableProps()}>\n           <thead>\n               {headerGroups.map(headerGroup => (\n                   <tr {...headerGroup.getHeaderGroupProps()}>\n                       {headerGroup.headers.map(column => (\n                           <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                               {column.render('Header')}\n                                <span>\n                                    {column.isSorted\n                                    ? column.isSortedDesc\n                                        ? (<BiCaretDown/>)\n                                        : (<BiCaretUp/>)\n                                    : ''}\n                                </span>\n                            </th>\n                       ))}\n                   </tr>\n               ))}\n           </thead>\n           <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <Fragment {...row.getRowProps()}>\n                            <tr>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}> {cell.render('Cell')} </td>\n                                })}\n                            </tr>\n                            {row.isExpanded ? (\n                                <tr>\n                                    <td colSpan={visibleColumns.length}>\n                                        {/*\n                                            Inside it, call our renderRowSubComponent function. In reality,\n                                            you could pass whatever you want as props to\n                                            a component like this, including the entire\n                                            table instance. But for this example, we'll just\n                                            pass the row\n                                            */}\n                                        {renderRowSubComponent({ row })}\n                                    </td>\n                                </tr>\n                            ) : null}\n                        </Fragment>\n                    )\n                })}\n           </tbody>\n       </table>\n       </div>\n       </>\n    )\n}\n\nexport default Table\n","import axios from \"axios\";\nimport url from \"./urlApi\";\n\nexport const getProgramList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/programFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getContentList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/contentFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport const getUserList = (query) => axios({\n    method: 'post',\n    url: url + '/user/userFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getRedzoneList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/redZoneFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getAppUsageList = (query) => axios({\n    method: 'post',\n    url: url + '/user/appUsageFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport const getHKBPList = (query) => axios({\n    method: 'post',\n    url: url + '/cobrand/HKBPDataFilter',\n    data: query,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});","//import { Link } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap'\n\n\nconst Columns = [\n    {\n        name: 'No.',\n        options: {\n            filter: false,\n            customBodyRender: (value, meta) => {\n                return (\n                    meta.rowIndex + 1\n                );\n            },\n            setCellProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n            setCellHeaderProps: () => ({ style: { minWidth: \"10px\", maxWidth: \"10px\" }}),\n        }\n    },\n    {\n        label: 'Nama Konten',\n        name: 'contentName',\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        label: 'Jenis Konten',\n        name: 'contentType',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        label: 'Kategori Konten',\n        name: 'contentPurpose',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        label: 'Target Pembaca',\n        name:'contentTarget',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        label: 'Status',\n        name: 'status',\n        options: {\n            filter: true,\n            sort: true,\n        }\n    }\n];\n\nexport default Columns;","import React, { useState, useEffect, useCallback } from 'react';\nimport TablePengguna from '../../../../components/UI/Table/Table';\nimport columns from './columns';\nimport Heading from '../../../../components/UI/Heading/Heading';\nimport RKLoader from '../../../../components/UI/RKLoaderInner/RKLoader.js';\nimport './ContentReport.scss';\nimport { getContentList } from '../../../../components/API/filter.js'\nimport MUIDataTable from \"mui-datatables\";\n\nconst ContentReport = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [contentData, setContentData] = useState();\n\n    const options = {\n        filterType: \"dropdown\",\n        selectableRows: false,\n        responsive: \"scroll\"\n    };\n\n    const userData = JSON.parse(localStorage.getItem('userData'));\n\n    useEffect(() => {\n        let params={\n            whereKeyValues: {\n                cobrandEmail: userData.email\n            },\n            orderKeyValues: {\n                contentName: 1\n            },\n            includeContentData: false,\n            limit: Number.MAX_SAFE_INTEGER\n        };\n        console.log(params);\n        getContentList(params)\n        .then(response => {\n            console.log(response.data);\n            setContentData(response.data.contents);\n            setLoading(false);\n        })\n        .catch(error => {\n            console.log(error);\n            setLoading(false);\n        })\n    }, []);\n\n    if(isLoading) {\n        return <RKLoader />;\n    }\n    return (\n        <div className=\"Content\">\n            <Heading\n                headingName=\"Content Report\"\n                routes={[\n                    { name: 'Report', path: '/report/content' },\n                    { name: 'Content Report' }\n                ]}\n            />\n            {/* <div className=\"Pengguna_table\">\n                <TablePengguna\n                    COLUMNS={columns}\n                    DATA={userData}\n                />\n            </div> */}\n            <MUIDataTable\n                data={contentData}\n                columns={columns}\n                options={options}\n            />\n        </div>\n    )\n}\n\nexport default ContentReport;\n","import React from 'react'\nimport Spinner from '../Loader/Spinner/Spinner';\nimport './RKLoader.scss';\n\nfunction RKLoader({ text = 'Mohon Tunggu' }) {\n    return (\n        <div className=\"LoadingFullRkInner\">\n            <h1 className=\"LoadingFullRkInner__heading\"><span>Ruang Ortu by ASIA</span> </h1>\n            <Spinner />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nexport default RKLoader\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Heading.scss';\n\nfunction Heading({ headingName, routes = [] }) {\n    \n    return (\n        <div className=\"Heading\">\n            <h1>{headingName}</h1>\n            <ul className=\"Heading__breadcumb\">\n                {routes.length > 0 && routes.map((item, i) => {\n                    if(item.path){\n                        return <li className=\"Heading__breadcumb-item\" key={i}><NavLink exact to={item.path}>{item.name}</NavLink> </li>\n                    }else{\n                        return <li className=\"Heading__breadcumb-item\" key={i}> <span>{item.name}</span> </li>\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Heading\n"],"sourceRoot":""}